{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/events-context.js","context/currentEquip-context.js","context/users-context.js","context/communication-context.js","context/systemVolatile-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","workers/adminWorker.js","components/tabs/adminPanels/AdminLogTabPanel.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/SofwareTable.js","components/timelines/TimeLineItem.js","components/timelines/CommonTimeLine.js","components/tabs/summaryPanels/SummaryHistoryTabPanel.js","components/tabs/summaryPanels/SummaryChatPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tabs/HistoryTab.js","components/tables/adminTables/UserTable.js","components/tabs/adminPanels/AdminMainTabPanel.js","components/tabs/AdminTab.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","ComplexTypeImages","UseDarkTheme","UserRole","AdminRole","Roles","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","oldRow","EquipName","Disabled","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","EventsContext","currentEvents","EventsContextProvider","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","lastSeen","undefined","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","CurrentEquipContextProvider","UsersContext","currentUser","token","users","Token","Claims","UsersContextProvider","CommunicationContext","logs","chats","notes","CommunicationContextProvider","SystemVolatileContext","currentVolatile","SystemVolatileContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","GetTokenHeader","headers","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","isToday","today","setHours","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","GetAllEquips","withDisabled","GetAllTables","GetTableContent","tableType","tableName","UpdateDBInfo","DisableEquipInfo","disabled","GetCommunications","SendNewNote","msgType","message","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","systemVolatileDispatch","allEquipsState","usersState","connectedEquip","EquipWorker","sysInfo","swInfo","Atlas","Software","AdminController","GetAllUsers","header","UpdateUser","user","Login","login","GetServerLogs","useStyles","makeStyles","theme","root","width","borderColor","AdminLogTabPanel","classes","communicationState","TextareaAutosize","className","rowsMax","aria-label","defaultValue","appBar","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","button","marginRight","MainToolBar","appState","appDispatch","eventsDispatch","communicationDispatch","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","getEvents","allEvents","getLogs","AdminWorker","getChats","useEffect","Surname","allEquipsDispatch","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","close","onmessage","JSON","parse","topic","Topic","startsWith","Events","equip","topicParts","split","length","getEquipFromTopic","replace","values","Data","useWebSocket","selectedTab","selectedTabPanel","onTabIndexChange","newValue","allTables","onUpdateDBInfo","isDBInfoStateUpdating","DBInfoStateUpdating","isValidSummaryTab","AppBar","position","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","id","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","Tab","label","Button","onClick","align","useCardsStyles","marginBottom","bullet","transform","title","pos","descr","textAlign","fontWeight","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","buttonColor","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","heatStatus","HeatStatus","Mas","Kv","Workstation","Focus","PedalPressed","Code","Description","SystemCard","volatile","logicalDisks","LogicalDisks","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","dimmed","EquipImageCard","equipClasses","pathKey","Object","keys","find","k","some","v","isConnected","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","dbStates","DBStates","atlas","Array","isArray","atlasUser","AtlasUser","osInfo","OsInfos","sql","SqlServices","databases","SqlDatabases","OsCaption","OsVersion","SqlName","SqlVersion","CurrentUser","Status","AtlasVersion","XilibsVersion","ComplexType","Language","Multimonitor","User","Role","AtlasErrorDescriptions","ImagesCard","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","isEquipConnected","container","minHeight","maxHeight","errorCell","background","wordWrap","simpleCell","boldCell","checkBox","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","selectedRow","onRowClick","ev","row","isRowBold","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","TableBody","slice","rowInd","selected","hover","role","tabIndex","format","hasErrors","Checkbox","onSelect","formatArray","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","overflowY","content","flexGrow","palette","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","index","c","flat","key","toLowerCase","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","atlasTableMenu","List","ListItem","ListItemText","primary","Active","paper","inline","isImportant","collapse","TimeLineItem","time","details","alignItems","ListItemAvatar","Avatar","alt","src","Fragment","secondary","Collapse","in","timeout","unmountOnExit","CommonTimeLine","showImportantOnly","DateTime","isOffline","Title","Details","Divider","commonSpacing","textField","SummaryHistoryTabPanel","eventsState","curDate","setDate","setStartDate","setEndDate","importantOnly","setImportantOnly","events","onSearch","TextField","InputLabelProps","shrink","FormControlLabel","control","fullRow","noteTitle","SummaryChatPanel","newNote","setNewNote","onNoteChange","onSend","note","Message","multiline","SummaryTab","tabPanelIndex","MapTab","EventsTab","UserTable","usersDispatch","handleSelect","newRow","flexDirection","justifyContent","AdminMainTabPanel","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","options","selectedIndex","onAdd","required","InputLabel","htmlFor","NativeSelect","AdminTab","EquipTable","visibleOnly","setVisibleOnly","byEquip","byHospital","byAddress","filters","setFilters","push","HospitalName","HospitalAddress","handleRowClick","getAttribute","onVisibleOnly","onEquipFilterChange","onHospFilterChange","onAddressFilterChange","readonly","EquipsTab","MainInfoComponent","drawerWidth","menuItems","drawer","flexShrink","drawerPaper","toolbar","mixins","padding","MainComponent","to","mainMenu","CssBaseline","Drawer","anchor","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","alert","borderRadius","AuthComponent","redirect","setRedirect","showError","setShowError","onLogin","parseJwt","atob","claims","createMuiTheme","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89c6f39b.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\nexport const ComplexTypeImages = window.ComplexTypeImages;\r\nexport const UseDarkTheme = window.UseDarkTheme;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\n// export const HistoryTabIndex = 4;\r\nexport const AdminTabIndex = 4; //5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;\r\nexport const SummaryHistoryTabPanelIndex = 2;\r\nexport const SummaryChatTabPanelIndex = 3;\r\n\r\nexport const AdminLogTabPanelIndex = 4;","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'UPDATEALLEQUIPS': {\r\n      const oldRow = state.selectedEquips.filter(p => p.EquipName === action.payload.EquipName)\r\n      if(oldRow){\r\n        oldRow.Disabled = action.payload.Disabled\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        allEquips: [...state.allEquips]\r\n      };\r\n    }    \r\n    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const EventsContext = createContext();\r\n\r\nconst initialState = {\r\n  currentEvents: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEVENTS': {\r\n      return {\r\n        ...state,\r\n        currentEvents: action.payload\r\n      };\r\n    }   \r\n    case 'ADDEVENT': {\r\n      return {\r\n        ...state,\r\n        currentEvents: [...action.payload, ...state.currentEvents]\r\n      };\r\n    }   \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const EventsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <EventsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EventsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n  lastSeen:undefined,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n\r\n    case 'SETLASTSEEN': {\r\n      return {\r\n        ...state,\r\n        lastSeen: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  token: null,\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        token: action.payload.Token,\r\n        currentUser: action.payload.Claims\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CommunicationContext = createContext();\r\n\r\nconst initialState = {\r\n  logs: [],\r\n  chats: [],\r\n  notes: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETLOGS': {\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n    } \r\n    case 'SETCHATS': {\r\n      return {\r\n        ...state,\r\n        notes: action.payload\r\n      };\r\n    } \r\n    case 'ADDNOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes]\r\n      };\r\n    }\r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CommunicationContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CommunicationContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CommunicationContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      return {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}\r\n\r\nexport function GetTokenHeader(token) {\r\n    return  {\r\n        headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + token  // передача токена в заголовке\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => new Date(value).toLocaleString();\r\n\r\nexport const isToday = (value) =>\r\n{\r\n    const today = new Date();\r\n    const date = new Date(value);\r\n    return date.setHours(0,0,0,0) == today.setHours(0,0,0,0);\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\nexport async function GetConnectedEquips(token) {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(token, activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(token, currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(token, currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(token, activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips(token, withDisabled = false) {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(\r\n            EquipsServiceAddress + EquipsController + '/GetAllEquips?withDisabled='+withDisabled,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(token, equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(token, equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateDBInfo(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('UpdateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/UpdateDBInfo?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DisableEquipInfo(token, equipName, disabled) {\r\n    return await HandlerWrapper('DisableEquipInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DisableEquipInfo?equipName=' + equipName+\r\n            '&disabled=' + disabled,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetCommunications(token, equipName) {\r\n    return await HandlerWrapper('GetCommunicationsData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetCommunicationsData?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendNewNote(token, equipName, msgType, message) {\r\n    return await HandlerWrapper('SendNewNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendNewNote?equipName=' + equipName+\r\n            '&msgType=' + msgType+\r\n            '&message=' + message,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n    const token = usersState.token;\r\n    const connectedEquip = allEquipsState.connectedEquips?.includes(equipInfo)\r\n\r\n    systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    // new software & system info come very slowly\r\n    const sysInfo = await EquipWorker.GetPermanentData(token, \"SystemInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSYSTEM', payload: sysInfo[0] }); \r\n\r\n    const swInfo = await EquipWorker.GetPermanentData(token, \"Software\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSOFTWARE', \r\n      payload: {\r\n        Atlas: swInfo.Atlas ? swInfo.Atlas[0] : undefined, \r\n        Software: swInfo.Software ? swInfo.Software[0] : undefined} }); \r\n\r\n    if(!connectedEquip){\r\n      const lastSeen = await EquipWorker.GetPermanentData(token, \"LastSeen\", equipInfo);\r\n      currEquipDispatch({ type: 'SETLASTSEEN', payload: lastSeen }); \r\n    }\r\n    else {\r\n      await EquipWorker.Activate(token, equipInfo, currEquipState.equipInfo);\r\n    }\r\n  };\r\n\r\n  return setEquipInfo;\r\n}\r\n","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers(token) {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user, token) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetServerLogs(token) {\r\n    return await HandlerWrapper('GetServerLogs', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetServerLogs';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n}));\r\n\r\nexport default function AdminLogTabPanel(props) {\r\n  console.log(\"render AdminLogTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n\r\n  return (\r\n    <div>\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={communicationState.logs}\r\n      />\r\n        {/* <Typography variant=\"body2\" gutterBottom>\r\n            {communicationState.logs}\r\n        </Typography> */}\r\n    </div>\r\n  );\r\n}\r\n  ","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex,\r\n  AdminTabIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\nimport {getUSFullDate} from '../../utilities/utils'\r\nimport AdminLogTabPanel from '../tabs/adminPanels/AdminLogTabPanel';\r\n  \r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 640,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n  },\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  \r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const token = usersState.token;\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    getEvents(equipInfo);\r\n  }\r\n\r\n  const getEvents = async (equipInfo) =>\r\n  {\r\n    const endDate = new Date();\r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipInfo, getUSFullDate(endDate), getUSFullDate(endDate));\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  }\r\n\r\n  const getLogs = async () =>\r\n  {\r\n    const logs = await AdminWorker.GetServerLogs(token);\r\n    communicationDispatch({ type: 'SETLOGS', payload: logs }); \r\n  }\r\n\r\n  const getChats = async () =>\r\n  {\r\n    const notes = await EquipWorker.GetCommunications(token, equipInfo);\r\n    communicationDispatch({ type: 'SETCHATS', payload: notes }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryTabIndex === selectedTab && SummaryDBTabPanelIndex === newValue && equipInfo){\r\n      const allTables = await EquipWorker.GetAllTables(token, equipInfo);\r\n      currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryHistoryTabPanelIndex === newValue){        \r\n      getEvents(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryChatTabPanelIndex === newValue){        \r\n      getChats(equipInfo);\r\n    }\r\n    else if(AdminTabIndex === selectedTab && AdminLogTabPanelIndex === newValue){        \r\n      getLogs();\r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  const onUpdateDBInfo = async () =>{\r\n    if(equipInfo){\r\n      const res = await EquipWorker.UpdateDBInfo(token, equipInfo);\r\n    }\r\n  }\r\n\r\n  const isDBInfoStateUpdating = currEquipState.remoteaccess?.DBInfoStateUpdating;\r\n  const isValidSummaryTab = selectedTab === SummaryTabIndex && equipInfo;\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" />\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"БД\" id= \"dbTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"История\" id= \"histTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"Коммуникации\" id= \"chatTabPanel\" /> : <></>\r\n              }\r\n              {selectedTab === AdminTabIndex?\r\n                  <Tab label=\"Логи\" id= \"logsTabPanel\" /> : <></>              \r\n              }              \r\n            </Tabs>\r\n            {selectedTab === SummaryTabIndex?\r\n                <Button variant=\"contained\" \r\n                    color={isDBInfoStateUpdating ? \"secondary\" : \"primary\"}\r\n                    className={classes.button} \r\n                    onClick={onUpdateDBInfo} \r\n                >\r\n                  {isDBInfoStateUpdating ? 'Обновляется' : 'Обновить'}\r\n                </Button> : <></>\r\n            }\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport { EventsContext } from '../context/events-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [usersState, usersDispatch] = useContext(UsersContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!usersState.token){\r\n           return;\r\n        }\r\n\r\n        createSocket();\r\n    }, [usersState.token]);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips(usersState.token);\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n                else if(topic.startsWith('Events'))\r\n                {\r\n                    eventsDispatch({ type: 'ADDEVENT', payload: data.Events }); \r\n                    return;\r\n                }  \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    // currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    // width:'10%',\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n    fontWeight: 'bold',\r\n    marginRight: '0.5em',\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  const heatStatus = generator?.State?.HeatStatus;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={heatStatus === 2 ? \"Высокий\" : heatStatus === 3 ? \"Критический\" : heatStatus === 1 ? \"Норм\" : \"\"}\r\n          rightColor={heatStatus === 2 ? \"yellow\" : heatStatus === 3 ? \"red\" :  heatStatus === 1 ? \"green\" : \"gray\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ generator?.State?.PedalPressed === 1 ? \"Графия\" : generator?.State?.PedalPressed === 2 ? \"Скопия\" : \"Не нажата\"} \r\n          rightColor={generator?.State?.PedalPressed === 1 || generator?.State?.PedalPressed === 2? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = system?.LogicalDisks; // HDD\r\n  const physicalDisks = system?.HardDrives;  // PhysicalDisks\r\n  const lans = system?.Lans; // Network\r\n  const vgas = system?.VideoAdapters; // VGA\r\n  const monitors = system?.Monitors; // Monitor\r\n  const printers = system?.Printers; //Printer\r\n  const processor = system?.Motherboards ? system?.Motherboards[0] : undefined; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad || volatile?.Processor?.CPULoad === 0? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport {parseLocalString} from '../../utilities/utils'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\nimport { ComplexTypeImages } from '../../model/constants'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n  },\r\n  dimmed:{\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n    filter: 'brightness(40%)',\r\n  }\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const pathKey = Object.keys(ComplexTypeImages).find(k => \r\n    {\r\n      return ComplexTypeImages[k].some(v => equipInfo?.startsWith(v));\r\n    });\r\n  \r\n  const isConnected = props.isConnected;\r\n  const lastSeen = props.lastSeen;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={isConnected ? equipClasses.media : equipClasses.dimmed}\r\n        // image=\"./girl.jpg\"\r\n        image={\"./\" + pathKey}\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n          {lastSeen? <div>Посл. сообщение: {parseLocalString(lastSeen)} </div>: <></>}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"#f50057\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const token = props.token;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(token, equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(token, equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(token, equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(token, equipInfo, detailedXilib, verboseXilib);\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const volatile = props.volatile;\r\n  const dbStates = volatile?.DBStates;\r\n  const software = props.software?.Software;\r\n  const atlas = Array.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;\r\n  const atlasUser = volatile?.AtlasUser;\r\n  const osInfo = Array.isArray(software?.OsInfos) ? software?.OsInfos[0] : null; \r\n  const sql = Array.isArray(software?.SqlServices) ? software?.SqlServices[0] : null; \r\n  const databases = dbStates ?? software?.SqlDatabases;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={osInfo?.OsCaption} value={osInfo?.OsVersion}></CardRow>\r\n        <CardRow descr={sql?.SqlName} value={sql?.SqlVersion}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={osInfo?.CurrentUser}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {volatile?.ErrorDescriptions?.length ? \r\n          volatile.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {databases?.length ? \r\n          databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.Name} value={i.Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Версия\" value={atlas?.AtlasVersion}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={atlas?.XilibsVersion}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={atlas?.ComplexType}></CardRow>\r\n        <CardRow descr=\"Язык\" value={atlas?.Language}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const isEquipConnected = allEquipsState.connectedEquips?.includes(equipInfo);\r\n  const lastSeen = currEquipState.lastSeen;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard equipInfo={equipInfo} isConnected={isEquipConnected} lastSeen={lastSeen}></EquipImageCard>\r\n        <SystemCard system={currEquipState.system} volatile={systemVolatileState.currentVolatile}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <ImagesCard images={currEquipState.images}></ImagesCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo} remoteaccess={currEquipState.remoteaccess} token={usersState.token}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software} volatile={systemVolatileState.currentVolatile}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: 40,\r\n    maxHeight: '100%',\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  },\r\n  boldCell:{\r\n    wordWrap: 'break-word',\r\n    fontWeight: 'bolder',\r\n    fontSize: 'larger',\r\n  },  \r\n  checkBox:{\r\n    color: 'green',\r\n  },  \r\n});\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const rows = props.rows ? props.rows : [];\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n  const isRowBold = props.isRowBold;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowInd) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={rowInd} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    const checked = column.format ? column.format(row) : value;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={\r\n                          column.hasErrors && column.hasErrors(value) ? \r\n                            classes.errorCell : \r\n                            isRowBold && isRowBold(row) ?\r\n                              classes.boldCell :\r\n                              classes.simpleCell\r\n                        }\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            style ={{\r\n                              color: checked ? 'green' : 'gray', //\"#00e676\",\r\n                            }}\r\n                            checked={checked}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts', 'data-column' : column.id }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"285px\",\r\n    backgroundColor: 'white',\r\n    maxHeight: \"900px\",\r\n    overflowY: 'auto',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  const getColumn = (key) => { \r\n    if(key.toLowerCase() === 'active')\r\n    {\r\n      return { \r\n        id: key, label: key, minWidth: 100, maxWidth: 100,\r\n        format: (value) => value ? '+' : '-'\r\n      }\r\n    }\r\n\r\n    return { id: key, label: key, minWidth: 100, maxWidth: 300 }\r\n  }\r\n\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(usersState.token, currEquipState.equipInfo, type, text);\r\n    let values = []\r\n    if(Array.isArray(content)){\r\n      values = content.map(c => JSON.parse(c)).flat(1);\r\n    }\r\n    else{\r\n      values = content? JSON.parse(content) : null;\r\n    }\r\n    \r\n    setTableContent(values);\r\n  };\r\n\r\n  const isRowBold = (row) =>\r\n  {\r\n    return row.Active\r\n  }\r\n  \r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = currEquipState.allDBTables?.Hospital;\r\n  const systemTableMenu = currEquipState.allDBTables?.System;\r\n  const softwareTableMenu = currEquipState.allDBTables?.Software;\r\n  const atlasTableMenu = currEquipState.allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.listPanel}>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <main className={classes.content}>\r\n        <>  \r\n                   <CommonTable \r\n                     columns={columns} \r\n                     rows={rows} \r\n                     isRowBold = {isRowBold}></CommonTable>\r\n        </>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  equip: {\r\n    width: '10%',\r\n  },\r\n  isImportant:{\r\n    backgroundColor: 'red',\r\n  },\r\n  collapse:{\r\n    textAlign:'left',\r\n  }\r\n}));\r\n\r\nexport default function TimeLineItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isImportant = props.isImportant;\r\n  const equipName = props.equipName;\r\n  const time = props.time;\r\n  const title = props.title;\r\n  const text = props.text;\r\n  const details = props.details;\r\n  return (\r\n    <div>\r\n        <ListItem alignItems=\"flex-start\" button onClick={handleClick}>\r\n            <ListItemAvatar >\r\n                <Avatar className={isImportant ? classes.isImportant : null} alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            {/* <ListItemText className={classes.equip} primary={equipName} secondary={time} /> */}\r\n            <ListItemText\r\n                primary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {equipName}\r\n                        </Typography>\r\n                        {\" \" + time}\r\n                    </React.Fragment>\r\n                }\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        {\" - \" + text}\r\n                    </React.Fragment>\r\n                }                \r\n            />\r\n            {details && open ? <ExpandLess /> : \r\n              details && !open ? <ExpandMore /> : <></>}\r\n        </ListItem>\r\n        \r\n            {details ? \r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.collapse}>\r\n                {details}\r\n              </Collapse>: <></>}\r\n        </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {parseLocalString, isToday} from '../../utilities/utils'\r\nimport TimeLineItem from './TimeLineItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommonTimeLine(props) {\r\n  const classes = useStyles();\r\n\r\n  const equipName = props.equipName;\r\n  const showImportantOnly = props.showImportantOnly;\r\n  const  rows = props.rows;\r\n  return (\r\n    <List className={classes.root}>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Сегодня\r\n        </Typography>\r\n        { rows?.filter(i => isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            const isOffline=i.Type?.includes('Offline');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title + (isOffline ? '(Offline)' : '')} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n        <Divider />\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Все время\r\n        </Typography>\r\n        { rows?.filter(i => !isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n    </List>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {SearchPeriod} from '../../../model/constants'\r\nimport {getUSFullDate} from '../../../utilities/utils'\r\n\r\nimport SystemTable from '../../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../../tables/historyTables/DetectorTable'\r\nimport StandTable from '../../tables/historyTables/StandTable'\r\nimport DicomTable from '../../tables/historyTables/DicomTable'\r\nimport CommonTimeLine from '../../timelines/CommonTimeLine'\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { EventsContext } from '../../../context/events-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryHistoryTabPanel(props) {\r\n  console.log(\"render SummaryHistoryTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  // const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  \r\n  // const [events, setEvents] = useState([]);  \r\n  const [importantOnly, setImportantOnly] = useState(false);  \r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  // const handleNameChange = (ev) => {\r\n  //   setEquipName(ev.target.value);\r\n  // };  \r\n\r\n  const equipName = props.equipName; // currEquipState?.equipInfo;\r\n  const events = eventsState.currentEvents;\r\n  const token = usersState.token;\r\n\r\n  const onSearch = async () => {    \r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipName, startDate, endDate);\r\n    // setEvents(data);\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  };\r\n\r\n  const onSelect = async (event) => {\r\n    setImportantOnly(!importantOnly);\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n                checked={importantOnly}\r\n                onChange={onSelect}\r\n            />\r\n          }\r\n          label=\"Только важные\"\r\n        />\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n      <CommonTimeLine equipName={equipName} rows={events} showImportantOnly={importantOnly}></CommonTimeLine>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"50%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  fullRow:{\r\n    width: '100%',\r\n    textAlign: 'left',\r\n  },\r\n  textField:{\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n\r\n  } ,\r\n  noteTitle:{\r\n    width: '100%',\r\n    fontWeight: 'bolder',\r\n    textAlign: 'left',\r\n    display: 'inline',\r\n  }\r\n}));\r\n\r\nexport default function SummaryChatPanel(props) {\r\n  console.log(\"render SummaryChatPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [newNote, setNewNote] = useState('');\r\n\r\n  const equipName = props.equipName;\r\n  const token = usersState.token;\r\n\r\n  const onNoteChange = async (val)  => {\r\n    setNewNote(val);\r\n  }\r\n\r\n  const onSend = async () => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, 'Note', newNote);    \r\n    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n    setNewNote('');\r\n  };\r\n\r\n  const notes = communicationState.notes;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">Заметки</Typography>\r\n        {notes?.length ? \r\n          notes.map((i, ind) => (\r\n            <div key={ind.toString()} className={classes.fullRow}>\r\n              <Typography variant=\"body1\" align='left' color='primary' className={classes.noteTitle}>\r\n                  {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n              </Typography> \r\n              {i.Message}\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newNote}\r\n          onChange={e => onNoteChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSend}>\r\n              Послать\r\n        </Button>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">Чат</Typography>\r\n      </div>    \r\n    </div>\r\n  );\r\n}\r\n  ","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\nimport SummaryChatPanel from './summaryPanels/SummaryChatPanel'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  const equipName = currEquipState?.equipInfo;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel equipName={equipName}/> : <></>}\r\n      {tabPanelIndex === SummaryHistoryTabPanelIndex ? <SummaryHistoryTabPanel equipName={equipName}/> : <></>}      \r\n      {tabPanelIndex === SummaryChatTabPanelIndex ? <SummaryChatPanel equipName={equipName}/> : <></>}      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n  const equipName = '';\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <SummaryHistoryTabPanel equipName={equipName}/>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const token = usersState.token;\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(token, currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst columns = [\r\n  { id: 'Login', label: 'Логин', minWidth: 170 },\r\n  { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n  { id: 'Email', label: 'Почта', minWidth: 100 },\r\n  { id: 'Role', label: 'Роль', minWidth: 100 },\r\n  { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n];\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const token = usersState.token;\r\n    const data = await AdminWorker.UpdateUser(newRow, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport { Roles, UserRole } from '../../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AdminMainTabPanel(props) {\r\n  console.log(\"render AdminMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    const token = usersState.token\r\n    const data = await AdminWorker.UpdateUser({id: '', login, password, surname, email, role, disabled: false}, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" defaultValue={''} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl className={classes.text}>\r\n              <InputLabel htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onAdd}>\r\n              Добавить\r\n        </Button>\r\n      </div>\r\n      <UserTable data={usersState.users}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MainTabPanelIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport AdminMainTabPanel from './adminPanels/AdminMainTabPanel'\r\nimport AdminLogTabPanel from './adminPanels/AdminLogTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <AdminMainTabPanel/> : <></>}\r\n      {tabPanelIndex === AdminLogTabPanelIndex ? <AdminLogTabPanel/> : <></>}     \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n/*\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { Roles, UserRole } from '../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\n// flex-direction: row;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    const token = usersState.token\r\n    const data = await AdminWorker.UpdateUser({id: '', login, password, surname, email, role, disabled: false}, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" defaultValue={''} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>\r\n        <FormControl className={classes.text}>\r\n              <InputLabel htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onAdd}>\r\n              Добавить\r\n        </Button>\r\n      </div>\r\n      <UserTable data={usersState.users}></UserTable>\r\n    </div>\r\n  );\r\n}\r\n*/","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {AdminRole} from '../../../model/constants'\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function EquipTable(props) {\r\n  console.log(\"render EquipTable\");\r\n  const classes = useStyles();\r\n\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n  const [visibleOnly, setVisibleOnly] = useState(true);  \r\n  const [filtrate, setFiltrate] = useState(false);  \r\n  const [filters, setFilters] = React.useState({\r\n    byEquip: '',\r\n    byHospital: '',\r\n    byAddress:''\r\n  });\r\n\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50,\r\n      format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170,\r\n      format: (value) => parseLocalString(value)\r\n    },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100 },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100 },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    \r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n  if(isAdmin){\r\n    columns.push({ id: 'Disabled', label: 'Скрыт', checked: true, minWidth: 100,\r\n        format: (row) => row.Disabled\r\n      });\r\n  }\r\n\r\n  const onFilter = async ()  => {\r\n    setFiltrate(!filtrate);\r\n  }\r\n\r\n  let rows = visibleOnly ? props.data?.filter(p => !p.Disabled) : props.data;\r\n  if(filters.byEquip){\r\n    rows = rows?.filter(p => p.EquipName.includes(filters.byEquip));\r\n  }\r\n\r\n  if(filters.byHospital){\r\n    rows = rows?.filter(p => p.HospitalName.includes(filters.byHospital));\r\n  }\r\n\r\n  if(filters.byAddress){\r\n    rows = rows?.filter(p => p.HospitalAddress.includes(filters.byAddress));\r\n  }\r\n\r\n  const handleRowClick = async (event, row) => {\r\n\r\n    var dataColumn = event.target.getAttribute(\"data-column\");\r\n\r\n    if(dataColumn === \"Disabled\")\r\n    {\r\n      return;\r\n    }\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const equipInfo = row.EquipName;\r\n    row.Disabled = !row.Disabled\r\n    await EquipWorker.DisableEquipInfo(usersState.token, equipInfo, row.Disabled);\r\n    allEquipsDispatch({ type: 'UPDATEALLEQUIPS', payload: row }); \r\n  };\r\n\r\n  const onVisibleOnly = async (event) => {\r\n    const value = !visibleOnly;\r\n    setVisibleOnly(value);\r\n    const allEquips = await EquipWorker.GetAllEquips(usersState.token, visibleOnly);\r\n    allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips }); \r\n  };\r\n\r\n  const onEquipFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byEquip: val.target?.value}});\r\n  }\r\n\r\n  const onHospFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byHospital: val.target?.value}});\r\n  }\r\n\r\n  const onAddressFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byAddress: val.target?.value}});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={visibleOnly}\r\n                    onChange={onVisibleOnly}\r\n                />\r\n              }\r\n              label=\"Только нескрытые\"\r\n            />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onEquipFilterChange} label=\"По комплексу\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onHospFilterChange} label=\"По ЛПУ\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onAddressFilterChange} label=\"По адресу\" variant=\"outlined\" />\r\n        {/* <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onFilter}>\r\n            Фильтровать\r\n        </Button> */}\r\n      </div>\r\n      <div className={classes.root}>\r\n        <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleRowClick} onSelect={handleSelect}></CommonTable>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex,AdminTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {/* {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>} */}\r\n      {tabIndex === AdminTabIndex ? <AdminTab panel={tabPanelIndex}></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, EventsTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport {AdminRole} from '../../model/constants'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nconst drawerWidth = 240;\r\nconst menuItems = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий']; // , 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n        const token = usersState.token;\r\n          if(!token)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers(token);\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.token]);\r\n\r\n  const token = usersState.token;\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;  \r\n  }\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips(token);\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n    else if(index === EventsTabIndex)\r\n    {\r\n      const endDate = new Date();\r\n      const allEvents = await EquipWorker.SearchEquip(token, 'Events', '', getUSFullDate(endDate), getUSFullDate(endDate));\r\n      eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const mainMenu = isAdmin ? [...menuItems, 'Администрирование'] : menuItems; // , ];\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\n\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em',\r\n    backgroundColor: theme.palette.background.default,  \r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const parseJwt = (token) => {\r\n      try {\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n    //const data = await AdminWorker.Login({login: 'sa', password: 'medtex', email});\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    const claims = parseJwt(data);\r\n    if(data){\r\n      usersDispatch({ type: 'SETUSER', payload: {Token: data, Claims: claims} }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { UseDarkTheme } from './model/constants'\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: !UseDarkTheme ? \"light\" : \"dark\",\r\n  }\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (  \r\n    <>  \r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={AuthComponent} />\r\n          <Route path=\"/auth\" component={AuthComponent}/>\r\n          <Route path=\"/info\" component={MainComponent} />    \r\n          {/* <MainComponent></MainComponent> */}\r\n        </div>    \r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { EventsContextProvider} from './context/events-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\nimport { CommunicationContextProvider} from './context/communication-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AppContextProvider>\r\n        <UsersContextProvider>\r\n          <AllEquipsContextProvider>\r\n            <CurrentEquipContextProvider>\r\n              <SystemVolatileContextProvider>\r\n                <EventsContextProvider>\r\n                  <CommunicationContextProvider>\r\n                    <BrowserRouter>\r\n                      <App />\r\n                    </BrowserRouter>\r\n                  </CommunicationContextProvider>\r\n                </EventsContextProvider>\r\n              </SystemVolatileContextProvider>\r\n            </CurrentEquipContextProvider>\r\n          </AllEquipsContextProvider>\r\n        </UsersContextProvider>\r\n      </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}