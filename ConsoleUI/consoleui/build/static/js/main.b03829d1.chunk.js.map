{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/events-context.js","context/currentEquip-context.js","context/users-context.js","context/communication-context.js","context/systemVolatile-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","workers/adminWorker.js","components/tabs/adminPanels/AdminLogTabPanel.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/SofwareTable.js","components/timelines/TimeLineItem.js","components/timelines/CommonTimeLine.js","components/tabs/summaryPanels/SummaryHistoryTabPanel.js","components/tabs/summaryPanels/subpanels/SummaryChatSubpanel.js","components/tabs/summaryPanels/SummaryChatPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tabs/HistoryTab.js","components/tables/adminTables/UserTable.js","components/tabs/adminPanels/AdminMainTabPanel.js","components/tabs/AdminTab.js","components/dialogs/ConfirmDlg.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","context/controlState-context.js","components/cards/controlCards/ServerStateCard.js","components/cards/controlCards/UnasweredEquipsCard.js","components/tabs/ControlTab.js","components/mainComponents/MainInfoComponent.js","workers/controlWorker.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","ComplexTypeImages","UseDarkTheme","UserRole","AdminRole","Roles","CommonChat","ChatMessageType","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","oldRow","EquipName","Disabled","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","EventsContext","currentEvents","EventsContextProvider","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","lastSeen","undefined","locationInfo","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","SystemInfo","SoftwareInfo","LastSeen","LocationInfo","CurrentEquipContextProvider","UsersContext","currentUser","token","users","Token","Claims","Surname","UsersContextProvider","CommunicationContext","logs","notes","commonNotes","oldNote","n","ID","length","Message","CommunicationContextProvider","SystemVolatileContext","currentVolatile","SimpleMsgType","AtlasStatus","SystemVolatileContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","GetTokenHeader","headers","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","isToday","today","setHours","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","GetAllEquips","withDisabled","GetAllTables","GetTableContent","tableType","tableName","UpdateDBInfo","DisableEquipInfo","disabled","GetCommunications","SendNewNote","msgType","id","message","encodeURIComponent","DeleteNote","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","systemVolatileDispatch","allEquipsState","usersState","EquipWorker","fullInfo","AdminController","GetAllUsers","header","UpdateUser","user","Login","login","GetServerLogs","useStyles","makeStyles","theme","root","width","borderColor","AdminLogTabPanel","classes","communicationState","TextareaAutosize","className","rowsMax","aria-label","defaultValue","appBar","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","button","marginRight","MainToolBar","appState","appDispatch","allEquipsDispatch","eventsDispatch","communicationDispatch","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","getEvents","allEvents","getLogs","AdminWorker","getChats","useEffect","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","close","onmessage","JSON","parse","topic","Topic","startsWith","Events","note","Data","equip","topicParts","split","getEquipFromTopic","replace","values","useWebSocket","selectedTab","selectedTabPanel","onTabIndexChange","newValue","allTables","onUpdateDBInfo","isDBInfoStateUpdating","DBInfoStateUpdating","isValidSummaryTab","AppBar","position","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","Tab","label","Button","onClick","align","useCardsStyles","marginBottom","bullet","transform","title","pos","descr","textAlign","fontWeight","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","buttonColor","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","heatStatus","HeatStatus","Mas","Kv","Workstation","Focus","PedalPressed","Code","Description","SystemCard","volatile","logicalDisks","LogicalDisks","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","dimmed","EquipImageCard","equipClasses","pathKey","Object","keys","find","k","some","v","isConnected","hospital","address","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","dbStates","DBStates","Software","atlas","Array","isArray","Atlas","atlasUser","AtlasUser","osInfo","OsInfos","sql","SqlServices","databases","SqlDatabases","atlasRunning","AtlasRunning","OsCaption","OsVersion","SqlName","SqlVersion","CurrentUser","Status","AtlasVersion","XilibsVersion","ComplexType","Language","Multimonitor","User","Role","AtlasErrorDescriptions","ImagesCard","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","isEquipConnected","HospitalName","HospitalAddress","container","minHeight","maxHeight","errorCell","background","wordWrap","simpleCell","boldCell","checkBox","descendingComparator","b","orderBy","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","setOrderBy","order","setOrder","rows","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","columns","selectedRow","onRowClick","ev","row","isRowBold","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","sortDirection","sortable","TableSortLabel","active","direction","property","TableBody","slice","rowInd","selected","hover","role","tabIndex","format","hasErrors","Checkbox","onSelect","formatArray","commonSpacing","onEdit","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","palette","paper","overflowY","content","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","c","flat","key","toLowerCase","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","atlasTableMenu","Box","List","ListItem","ListItemText","primary","Active","inline","isImportant","collapse","outerLabel","ordinaryLabel","borderRadius","importantLabel","innerLabel","alignItems","justifyContent","TimeLineItem","handleClick","time","details","Fragment","secondary","Collapse","in","timeout","unmountOnExit","CommonTimeLine","showImportantOnly","todayRows","DateTime","todayCount","othersCount","isOffline","Title","Details","Divider","textField","SummaryHistoryTabPanel","eventsState","curDate","setDate","setStartDate","setEndDate","importantOnly","setImportantOnly","byTitle","byDescr","filters","setFilters","events","onSearch","onTitleFilterChange","onDescrFilterChange","TextField","InputLabelProps","shrink","FormControlLabel","control","fullRow","gridTemplateColumns","noteTitle","notesArea","overflowWrap","SummaryChatSubpanel","newNote","setNewNote","anchorEl","setAnchorEl","openEditMenu","Boolean","handleMenuClick","currentTarget","handleMenuClose","onNoteChange","onSendNote","handleDeleteNote","noteId","onDeleteNote","canSubmit","handleEditNote","multiline","IconButton","aria-controls","aria-haspopup","Menu","keepMounted","s","divider","SummaryChatPanel","noteType","chatType","onSendNoteNote","onSendChatNote","newnote","chats","orientation","flexItem","SummaryTab","tabPanelIndex","MapTab","EventsTab","UserTable","usersDispatch","handleSelect","newRow","flexDirection","AdminMainTabPanel","userId","setUserId","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","options","selectedIndex","onSubmit","onCancel","Email","required","InputLabel","htmlFor","NativeSelect","AdminTab","ConfirmDlg","handleClose","aria-describedby","DialogContent","DialogContentText","сonfirmMessage","DialogActions","context","autoFocus","EquipTable","visibleOnly","setVisibleOnly","byEquip","byHospital","byAddress","Result","openConfirm","setOpenConfirm","push","handleRowClick","getAttribute","Context","onVisibleOnly","onEquipFilterChange","onHospFilterChange","onAddressFilterChange","onConfirmClose","result","readonly","EquipsTab","ControlStateContext","serverState","ControlStateContextProvider","ServerStateCard","DBUsedSize","DiskTotalSpace","DiskUsedSpace","UnasweredEquipsCard","hdd","ControlTab","controlState","MainInfoComponent","ControlController","GetServerState","drawerWidth","menuItems","drawer","flexShrink","drawerPaper","toolbar","mixins","flexGrow","padding","MainComponent","controlDispatch","to","ControlWorker","mainMenu","CssBaseline","Drawer","anchor","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","onMouseDown","preventDefault","alert","AuthComponent","redirect","setRedirect","showError","setShowError","onLogin","parseJwt","atob","claims","createMuiTheme","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b03829d1.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\nexport const ComplexTypeImages = window.ComplexTypeImages;\r\nexport const UseDarkTheme = window.UseDarkTheme;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\n// export const HistoryTabIndex = 4;\r\nexport const ControlTabIndex = 4; //5;\r\nexport const AdminTabIndex = 5; //5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;\r\nexport const SummaryHistoryTabPanelIndex = 2;\r\nexport const SummaryChatTabPanelIndex = 3;\r\n\r\nexport const AdminLogTabPanelIndex = 4;\r\nexport const CommonChat = 'CommonChat';\r\nexport const ChatMessageType = 'Chat';","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'UPDATEALLEQUIPS': {\r\n      const oldRow = state.selectedEquips.filter(p => p.EquipName === action.payload.EquipName)\r\n      if(oldRow){\r\n        oldRow.Disabled = action.payload.Disabled\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        allEquips: [...state.allEquips]\r\n      };\r\n    }    \r\n    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const EventsContext = createContext();\r\n\r\nconst initialState = {\r\n  currentEvents: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEVENTS': {\r\n      return {\r\n        ...state,\r\n        currentEvents: action.payload\r\n      };\r\n    }   \r\n    case 'ADDEVENT': {\r\n      return {\r\n        ...state,\r\n        currentEvents: [...action.payload, ...state.currentEvents]\r\n      };\r\n    }   \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const EventsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <EventsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EventsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n  lastSeen:undefined,\r\n  locationInfo: '',\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n\r\n    case 'SETLASTSEEN': {\r\n      return {\r\n        ...state,\r\n        lastSeen: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    case 'SETFULLINFO': {\r\n      return {\r\n        ...state,\r\n        system: action.payload?.SystemInfo[0],\r\n        software: action.payload?.SoftwareInfo[0],\r\n        lastSeen: action.payload?.LastSeen,\r\n        locationInfo: action.payload?.LocationInfo\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  token: null,\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        token: action.payload.Token,\r\n        currentUser: {...action.payload.Claims, Surname: action.payload.Surname}\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CommunicationContext = createContext();\r\n\r\nconst initialState = {\r\n  logs: [],\r\n  notes: [],\r\n  commonNotes: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETLOGS': {\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n    } \r\n    case 'SETCHATS': {\r\n      return {\r\n        ...state,\r\n        notes: action.payload\r\n      };\r\n    } \r\n    case 'SETCOMMONCHAT': {\r\n      return {\r\n        ...state,\r\n        commonNotes: action.payload\r\n      };\r\n    } \r\n    case 'ADDNOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes]\r\n      };\r\n    }\r\n    case 'ADDCOMMONNOTE': {\r\n      return {\r\n        ...state,\r\n        commonNotes: [action.payload, ...state.commonNotes]\r\n      };\r\n    }\r\n    case 'CHANGENOTE': {\r\n      const oldNote = state.notes.filter(n => n.ID === action.payload.ID);\r\n      if(oldNote?.length > 0){\r\n        oldNote[0].Message = action.payload.Message;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes]\r\n      };\r\n    }\r\n    case 'DELETENOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes.filter(n => n.ID !== action.payload)]\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CommunicationContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CommunicationContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CommunicationContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      const newState = {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n\r\n      if(action.payload.SimpleMsgType === \"AtlasExited\") {\r\n        newState.currentVolatile.AtlasStatus = null;\r\n      }\r\n      \r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}\r\n\r\nexport function GetTokenHeader(token) {\r\n    return  {\r\n        headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + token  // передача токена в заголовке\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => new Date(value).toLocaleString();\r\n\r\nexport const isToday = (value) =>\r\n{\r\n    const today = new Date();\r\n    const date = new Date(value);\r\n    return date.setHours(0,0,0,0) == today.setHours(0,0,0,0);\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\nexport async function GetConnectedEquips(token) {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(token, activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(token, currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(token, currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(token, activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips(token, withDisabled = false) {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(\r\n            EquipsServiceAddress + EquipsController + '/GetAllEquips?withDisabled='+withDisabled,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(token, equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(token, equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateDBInfo(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('UpdateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/UpdateDBInfo?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DisableEquipInfo(token, equipName, disabled) {\r\n    return await HandlerWrapper('DisableEquipInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DisableEquipInfo?equipName=' + equipName+\r\n            '&disabled=' + disabled,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetCommunications(token, equipName) {\r\n    return await HandlerWrapper('GetCommunicationsData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetCommunicationsData?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendNewNote(token, equipName, msgType, id, message) {\r\n    return await HandlerWrapper('SendNewNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendNewNote?equipName=' + equipName+\r\n            '&msgType=' + encodeURIComponent(msgType)+\r\n            '&id=' + id, // +\r\n            // '&message=' + encodeURIComponent(message),\r\n            message, // null, \r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DeleteNote(token, equipName, msgType, id) {\r\n    return await HandlerWrapper('DeleteNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DeleteNote?equipName=' + equipName+\r\n            '&msgType=' + encodeURIComponent(msgType)+\r\n            '&id=' + id,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n    const token = usersState.token;\r\n    const connectedEquip = allEquipsState.connectedEquips?.includes(equipInfo)\r\n\r\n    systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    const fullInfo = await EquipWorker.GetPermanentData(token, \"FullInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETFULLINFO', payload: fullInfo }); \r\n    // if(connectedEquip){\r\n      await EquipWorker.Activate(token, equipInfo, currEquipState.equipInfo);\r\n    // }\r\n  };\r\n\r\n  return setEquipInfo;\r\n}\r\n","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers(token) {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user, token) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetServerLogs(token) {\r\n    return await HandlerWrapper('GetServerLogs', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetServerLogs';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n}));\r\n\r\nexport default function AdminLogTabPanel(props) {\r\n  console.log(\"render AdminLogTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n\r\n  return (\r\n    <div>\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={communicationState.logs}\r\n      />\r\n        {/* <Typography variant=\"body2\" gutterBottom>\r\n            {communicationState.logs}\r\n        </Typography> */}\r\n    </div>\r\n  );\r\n}\r\n  ","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex,\r\n  ControlTabIndex, CommonChat,\r\n  AdminTabIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\nimport {getUSFullDate} from '../../utilities/utils'\r\nimport AdminLogTabPanel from '../tabs/adminPanels/AdminLogTabPanel';\r\n  \r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 640,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n  },\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  \r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const token = usersState.token;\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    getEvents(equipInfo);\r\n  }\r\n\r\n  const getEvents = async (equipInfo) =>\r\n  {\r\n    const endDate = new Date();\r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipInfo, getUSFullDate(endDate), getUSFullDate(endDate));\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  }\r\n\r\n  const getLogs = async () =>\r\n  {\r\n    const logs = await AdminWorker.GetServerLogs(token);\r\n    communicationDispatch({ type: 'SETLOGS', payload: logs }); \r\n  }\r\n\r\n  const getChats = async (equipInfo) =>\r\n  {\r\n    const notes = await EquipWorker.GetCommunications(token, equipInfo);\r\n    communicationDispatch({ \r\n      type: 'SETCHATS', \r\n      payload: notes \r\n    }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryTabIndex === selectedTab && SummaryDBTabPanelIndex === newValue && equipInfo){\r\n      const allTables = await EquipWorker.GetAllTables(token, equipInfo);\r\n      currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryHistoryTabPanelIndex === newValue){        \r\n      getEvents(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryChatTabPanelIndex === newValue){        \r\n      getChats(equipInfo);\r\n    }\r\n    else if(AdminTabIndex === selectedTab && AdminLogTabPanelIndex === newValue){        \r\n      getLogs();\r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  const onUpdateDBInfo = async () =>{\r\n    if(equipInfo){\r\n      const res = await EquipWorker.UpdateDBInfo(token, equipInfo);\r\n    }\r\n  }\r\n\r\n  const isDBInfoStateUpdating = currEquipState.remoteaccess?.DBInfoStateUpdating;\r\n  const isValidSummaryTab = selectedTab === SummaryTabIndex && equipInfo;\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" />\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"БД\" id= \"dbTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"История\" id= \"histTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"Коммуникации\" id= \"chatTabPanel\" /> : <></>\r\n              }\r\n              {selectedTab === AdminTabIndex?\r\n                  <Tab label=\"Логи\" id= \"logsTabPanel\" /> : <></>              \r\n              }              \r\n            </Tabs>\r\n            {selectedTab === SummaryTabIndex?\r\n                <Button variant=\"contained\" \r\n                    color={isDBInfoStateUpdating ? \"secondary\" : \"primary\"}\r\n                    className={classes.button} \r\n                    onClick={onUpdateDBInfo} \r\n                >\r\n                  {isDBInfoStateUpdating ? 'Обновляется' : 'Обновить'}\r\n                </Button> : <></>\r\n            }\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport { EventsContext } from '../context/events-context';\r\nimport { CommunicationContext } from '../context/communication-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [usersState, usersDispatch] = useContext(UsersContext);\r\n    const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!usersState.token){\r\n           return;\r\n        }\r\n\r\n        createSocket();\r\n    }, [usersState.token]);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips(usersState.token);\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n                else if(topic.startsWith('Events'))\r\n                {\r\n                    eventsDispatch({ type: 'ADDEVENT', payload: data.Events }); \r\n                    return;\r\n                }  \r\n                else if(topic.startsWith('CommonChat'))\r\n                {\r\n                    const note = data? JSON.parse(data.Data) : null;\r\n                    communicationDispatch({ type: 'ADDCOMMONNOTE', payload: note}); \r\n                    return;\r\n                }                  \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    // currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/chat'))\r\n                {\r\n                    const note = data? JSON.parse(data.Data) : null;\r\n                    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n                }\r\n               \r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    // width:'10%',\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n    fontWeight: 'bold',\r\n    marginRight: '0.5em',\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  const heatStatus = generator?.State?.HeatStatus;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={heatStatus === 2 ? \"Высокий\" : heatStatus === 3 ? \"Критический\" : heatStatus === 1 ? \"Норм\" : \"\"}\r\n          rightColor={heatStatus === 2 ? \"yellow\" : heatStatus === 3 ? \"red\" :  heatStatus === 1 ? \"green\" : \"gray\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ generator?.State?.PedalPressed === 1 ? \"Графия\" : generator?.State?.PedalPressed === 2 ? \"Скопия\" : \"Не нажата\"} \r\n          rightColor={generator?.State?.PedalPressed === 1 || generator?.State?.PedalPressed === 2? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = system?.LogicalDisks; // HDD\r\n  const physicalDisks = system?.HardDrives;  // PhysicalDisks\r\n  const lans = system?.Lans; // Network\r\n  const vgas = system?.VideoAdapters; // VGA\r\n  const monitors = system?.Monitors; // Monitor\r\n  const printers = system?.Printers; //Printer\r\n  const processor = system?.Motherboards ? system?.Motherboards[0] : undefined; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad || volatile?.Processor?.CPULoad === 0? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport {parseLocalString} from '../../utilities/utils'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\nimport { ComplexTypeImages } from '../../model/constants'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n  },\r\n  dimmed:{\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n    filter: 'brightness(40%)',\r\n  }\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const pathKey = Object.keys(ComplexTypeImages).find(k => \r\n    {\r\n      return ComplexTypeImages[k].some(v => equipInfo?.startsWith(v));\r\n    });\r\n  \r\n  const isConnected = props.isConnected;\r\n  const lastSeen = props.lastSeen;\r\n  const hospital = props.hospital;\r\n  const address = props.address;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={isConnected ? equipClasses.media : equipClasses.dimmed}\r\n        // image=\"./girl.jpg\"\r\n        image={\"./\" + pathKey}\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n          {hospital? <div>ЛПУ: {hospital} </div>: <></>}\r\n          {address? <div>Адрес: {address} </div>: <></>}\r\n          {lastSeen? <div>Посл. сообщение: {parseLocalString(lastSeen)} </div>: <></>}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"#f50057\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const token = props.token;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(token, equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(token, equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(token, equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(token, equipInfo, detailedXilib, verboseXilib);\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const volatile = props.volatile;\r\n  const dbStates = volatile?.DBStates;\r\n  const software = props.software?.Software;\r\n  const atlas = Array.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;\r\n  const atlasUser = volatile?.AtlasUser || volatile?.AtlasStatus?.AtlasUser;\r\n  const osInfo = Array.isArray(software?.OsInfos) ? software?.OsInfos[0] : null; \r\n  const sql = Array.isArray(software?.SqlServices) ? software?.SqlServices[0] : null; \r\n  const databases = dbStates ?? software?.SqlDatabases;\r\n  const atlasRunning = volatile?.AtlasStatus?.AtlasRunning;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={osInfo?.OsCaption} value={osInfo?.OsVersion}></CardRow>\r\n        <CardRow descr={sql?.SqlName} value={sql?.SqlVersion}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={osInfo?.CurrentUser}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {volatile?.ErrorDescriptions?.length ? \r\n          volatile.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {databases?.length ? \r\n          databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.Name} value={i.Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n              value={atlasRunning? \"запущен\" : \"не запущен\"}\r\n              rightColor={!atlasRunning? \"red\" : \"green\"}></CardRow>\r\n        <CardRow descr=\"Версия\" value={atlas?.AtlasVersion}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={atlas?.XilibsVersion}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={atlas?.ComplexType}></CardRow>\r\n        <CardRow descr=\"Язык\" value={atlas?.Language}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const isEquipConnected = allEquipsState.connectedEquips?.includes(equipInfo);\r\n  const lastSeen = currEquipState.lastSeen;\r\n  const hospital = currEquipState.locationInfo?.HospitalName;\r\n  const address = currEquipState.locationInfo?.HospitalAddress;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard \r\n          equipInfo={equipInfo} \r\n          isConnected={isEquipConnected} \r\n          lastSeen={lastSeen}\r\n          hospital={hospital}\r\n          address={address}\r\n        ></EquipImageCard>\r\n        <SystemCard system={currEquipState.system} volatile={systemVolatileState.currentVolatile}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <ImagesCard images={currEquipState.images}></ImagesCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo} remoteaccess={currEquipState.remoteaccess} token={usersState.token}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software} volatile={systemVolatileState.currentVolatile}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: 40,\r\n    maxHeight: '100%',\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  },\r\n  boldCell:{\r\n    wordWrap: 'break-word',\r\n    fontWeight: 'bolder',\r\n    fontSize: 'larger',\r\n  },  \r\n  checkBox:{\r\n    color: 'green',\r\n  },  \r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\r\n  const [orderBy, setOrderBy] = React.useState('');\r\n  const [order, setOrder] = React.useState('asc');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRequestSort = (property) => () => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const rows = stableSort(props.rows ? props.rows : [], getComparator(order, orderBy)) ?? [];\r\n  if(rows.length < page * rowsPerPage){\r\n    setPage(0);\r\n  }\r\n\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n  const isRowBold = props.isRowBold;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                // <TableCell\r\n                //   key={column.id}\r\n                //   align={column.align}\r\n                //   style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                // >\r\n                //   {column.label}\r\n                // </TableCell>\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                  sortDirection={orderBy === column.id ? order : false}\r\n                >\r\n                  {!column.sortable? \r\n                    column.label:\r\n                    <TableSortLabel\r\n                      active={orderBy === column.id}\r\n                      direction={orderBy === column.id ? order : 'asc'}\r\n                      onClick={handleRequestSort(column.id)}\r\n                    >\r\n                      {column.label}                    \r\n                    </TableSortLabel>\r\n                  }\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowInd) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={rowInd} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    const checked = column.format ? column.format(row) : value;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={\r\n                          column.hasErrors && column.hasErrors(value) ? \r\n                            classes.errorCell : \r\n                            isRowBold && isRowBold(row) ?\r\n                              classes.boldCell :\r\n                              classes.simpleCell\r\n                        }\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            style ={{\r\n                              color: checked ? 'green' : 'gray', //\"#00e676\",\r\n                            }}\r\n                            checked={checked}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts', 'data-column' : column.id }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : \r\n\r\n                            column.button ? \r\n                              <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={() => column.onEdit(row)}>\r\n                                    {column.label}\r\n                              </Button> :\r\n                              value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"table\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"285px\",\r\n    // backgroundColor: 'white',\r\n    backgroundColor: theme.palette.background.paper,\r\n    // maxHeight: \"900px\",\r\n    overflowY: 'auto',\r\n    display: 'table-cell',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    // flexGrow: 1,\r\n    width: '100%', \r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n    display: 'table-cell',\r\n  },\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  const getColumn = (key) => { \r\n    if(key.toLowerCase() === 'active')\r\n    {\r\n      return { \r\n        id: key, label: key, minWidth: 100, maxWidth: 100,\r\n        format: (value) => value ? '+' : '-'\r\n      }\r\n    }\r\n\r\n    return { id: key, label: key, minWidth: 100, maxWidth: 300 }\r\n  }\r\n\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(usersState.token, currEquipState.equipInfo, type, text);\r\n    let values = []\r\n    if(Array.isArray(content)){\r\n      values = content.map(c => JSON.parse(c)).flat(1);\r\n    }\r\n    else{\r\n      values = content? JSON.parse(content) : null;\r\n    }\r\n    \r\n    setTableContent(values);\r\n  };\r\n\r\n  const isRowBold = (row) =>\r\n  {\r\n    return row.Active\r\n  }\r\n  \r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = currEquipState.allDBTables?.Hospital;\r\n  const systemTableMenu = currEquipState.allDBTables?.System;\r\n  const softwareTableMenu = currEquipState.allDBTables?.Software;\r\n  const atlasTableMenu = currEquipState.allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <div className={classes.listPanel}> */}\r\n      {/* <Box className={classes.listPanel} height={'calc(100% - 500px)'}> */}\r\n      <Box className={classes.listPanel} height={'100%'}>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      {/* </div> */}\r\n      </Box>\r\n      <Box className={classes.content} height=\"100%\">\r\n        {/* <main className={classes.content} >\r\n          <>   */}\r\n                    <CommonTable \r\n                      columns={columns} \r\n                      rows={rows} \r\n                      isRowBold = {isRowBold}></CommonTable>\r\n          {/* </>\r\n        </main> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  equip: {\r\n    width: '10%',\r\n  },\r\n  isImportant:{\r\n    backgroundColor: 'red',\r\n  },\r\n  collapse:{\r\n    textAlign:'left',\r\n  },\r\n  outerLabel:{\r\n    marginTop:'6px',\r\n    marginRight:'12px',\r\n  },\r\n  ordinaryLabel:{\r\n    borderRadius:'50%',\r\n    backgroundColor: 'gray',\r\n  },\r\n  importantLabel:{    \r\n    borderRadius:'50%',\r\n    backgroundColor: 'red',\r\n  },\r\n  innerLabel:{\r\n    width:'40px',\r\n    height:'40px',\r\n    display: 'flex',\r\n    fontSize: '1.25rem',\r\n    color: '#303030',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function TimeLineItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isImportant = props.isImportant;\r\n  const equipName = props.equipName;\r\n  const time = props.time;\r\n  const title = props.title;\r\n  const text = props.text;\r\n  const details = props.details;\r\n  return (\r\n    <div>\r\n        <ListItem alignItems=\"flex-start\" button>\r\n            <div className={classes.outerLabel}>\r\n              <div className={isImportant ? classes.importantLabel : classes.ordinaryLabel}>\r\n                <div className={classes.innerLabel}>\r\n                  {isImportant ? '!' : 'O'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <ListItemAvatar >\r\n                <Avatar className={isImportant ? classes.isImportant : null} alt={isImportant ? \"!\" : \"\"} src={'xz'}/>\r\n            </ListItemAvatar>  */}\r\n            <ListItemText\r\n                primary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {equipName}\r\n                        </Typography>\r\n                        {\" \" + time}\r\n                    </React.Fragment>\r\n                }\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        {\" - \" + text}\r\n                    </React.Fragment>\r\n                }                \r\n            />\r\n            {details && open ? <ExpandLess onClick={handleClick}/> : \r\n              details && !open ? <ExpandMore onClick={handleClick}/> : <></>}\r\n        </ListItem>\r\n        \r\n            {details ? \r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.collapse}>\r\n                {details}\r\n              </Collapse>: <></>}\r\n        </div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {parseLocalString, isToday} from '../../utilities/utils'\r\nimport TimeLineItem from './TimeLineItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommonTimeLine(props) {\r\n  const classes = useStyles();\r\n  \r\n  const equipName = props.equipName;\r\n  const showImportantOnly = props.showImportantOnly;\r\n  const  rows = props.rows;\r\n  const todayRows = rows?.filter(i => isToday(i.DateTime)) ?? [];\r\n  const todayCount = todayRows.length;\r\n  const othersCount = rows.length - todayCount;\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Сегодня ({todayCount} сообщений)\r\n        </Typography>\r\n        { todayRows?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            const isOffline=i.Type?.includes('Offline');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title + (isOffline ? '(Offline)' : '')} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n        <Divider />\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Все время ({othersCount} сообщений)\r\n        </Typography>\r\n        { rows?.filter(i => !isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n    </List>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {SearchPeriod} from '../../../model/constants'\r\nimport {getUSFullDate} from '../../../utilities/utils'\r\n\r\nimport SystemTable from '../../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../../tables/historyTables/DetectorTable'\r\nimport StandTable from '../../tables/historyTables/StandTable'\r\nimport DicomTable from '../../tables/historyTables/DicomTable'\r\nimport CommonTimeLine from '../../timelines/CommonTimeLine'\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { EventsContext } from '../../../context/events-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryHistoryTabPanel(props) {\r\n  console.log(\"render SummaryHistoryTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  // const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  \r\n  // const [events, setEvents] = useState([]);  \r\n  const [importantOnly, setImportantOnly] = useState(false);  \r\n  const [filters, setFilters] = useState({\r\n    byTitle: '',\r\n    byDescr: ''\r\n  });\r\n\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  // const handleNameChange = (ev) => {\r\n  //   setEquipName(ev.target.value);\r\n  // };  \r\n\r\n  const equipName = props.equipName; // currEquipState?.equipInfo;\r\n  let events = eventsState.currentEvents;\r\n  const token = usersState.token;\r\n\r\n  const onSearch = async () => {    \r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipName, startDate, endDate);\r\n    // setEvents(data);\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  };\r\n\r\n  const onSelect = async (event) => {\r\n    setImportantOnly(!importantOnly);\r\n  };\r\n\r\n  \r\n  if(filters.byTitle){\r\n    events = events?.filter(p => p.Description.includes(filters.byTitle));\r\n  }\r\n\r\n  if(filters.byDescr){\r\n    events = events?.filter(p => p.Details.includes(filters.byDescr));\r\n  }\r\n\r\n  const onTitleFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byTitle: val.target?.value}});\r\n  }\r\n\r\n  const onDescrFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byDescr: val.target?.value}});\r\n  }\r\n\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n                checked={importantOnly}\r\n                onChange={onSelect}\r\n            />\r\n          }\r\n          label=\"Только важные\"\r\n        />\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onTitleFilterChange} label=\"По названию\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onDescrFilterChange} label=\"По описанию\" variant=\"outlined\" />\r\n        \r\n    </div>\r\n    <div className={classes.root}>        \r\n      <CommonTimeLine equipName={equipName} rows={events} showImportantOnly={importantOnly}></CommonTimeLine>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport {parseLocalString} from '../../../../utilities/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"calc(50% - 6px)\",\r\n    marginRight: \"12px\",\r\n  },\r\n  fullRow:{\r\n    display: 'grid',\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    gridTemplateColumns: '40px 1fr',\r\n    // maxWidth: 'calc(50% - 46px)',\r\n    // overflowWrap: 'break-word',\r\n  },\r\n  textField:{\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n\r\n  } ,\r\n  noteTitle:{\r\n    width: '100%',\r\n    fontWeight: 'bolder',\r\n    textAlign: 'left',\r\n    display: 'inline',\r\n  },\r\n  notesArea:{\r\n    // maxWidth: 'calc(50% - 0px)',\r\n    overflowWrap: 'break-word',\r\n    alignSelf: 'center',\r\n    width: '100%',\r\n    margin: '0',\r\n    display: 'block',\r\n  }\r\n}));\r\n\r\nexport default function SummaryChatSubpanel(props) {\r\n  console.log(\"render SummaryChatSubpanel\");\r\n\r\n  const classes = useStyles();\r\n  const [newNote, setNewNote] = useState({id: '', note:''});\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openEditMenu = Boolean(anchorEl);\r\n\r\n  const handleMenuClick = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onNoteChange = async (val)  => {\r\n    setNewNote({id: newNote.id, note: val});\r\n  }\r\n\r\n  const type = props.type;\r\n  const onSendNote = async () => {\r\n    if(props.onSendNote){\r\n      await props.onSendNote(type, newNote);\r\n      setNewNote({id: '', note:''});\r\n    }\r\n  };\r\n\r\n  const handleDeleteNote = async (ev) => {\r\n    const noteId = anchorEl.id;\r\n    if(props.onDeleteNote){\r\n      await props.onDeleteNote(type, noteId);\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  const title = props.title;\r\n  const notes = props.notes;\r\n  const currentUser = props.currentUser;\r\n  const canSubmit = !!newNote?.note;\r\n  const handleEditNote = async (ev) => {\r\n    const noteId = anchorEl.id; // ev.target.id;\r\n    const note = notes.find(n => n.ID == noteId);\r\n    if(note){\r\n      setNewNote({id: noteId, note:note.Message});\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  return (\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">{title}</Typography>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newNote?.note}\r\n          onChange={e => onNoteChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSendNote} disabled={!canSubmit}>\r\n              Послать\r\n        </Button>\r\n        <div className={classes.fullRow}>\r\n          {notes?.length ?\r\n            notes.map((i, ind) => \r\n            {\r\n              const row = i;\r\n              return (\r\n              <>\r\n                <div key={ind.toString()}>\r\n                    {\r\n                      currentUser === i.User?\r\n                            <>\r\n                              <IconButton\r\n                                id={i.ID}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenuClick}\r\n                              >\r\n                                <MoreVertIcon />\r\n                              </IconButton>\r\n                              <Menu\r\n                                id=\"long-menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={openEditMenu}\r\n                                onClose={handleMenuClose}\r\n                              >\r\n                                  <MenuItem onClick={handleEditNote}>Редактировать</MenuItem>\r\n                                  <MenuItem onClick={handleDeleteNote}>Удалить</MenuItem>\r\n                              </Menu>\r\n                            </>\r\n                            : <></>\r\n                    }\r\n                </div>\r\n                 <div className={classes.notesArea}>\r\n                    <Typography variant=\"body1\" align='left' color={currentUser === i.User? 'secondary' : 'primary'} className={classes.noteTitle}>\r\n                        {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n                     </Typography>\r\n                     {\r\n                       i.Message?.split(\"\\n\")?.map((s, ind) =>\r\n                       {\r\n                         return ind === 0? s : <Typography>{s}</Typography>\r\n                       })\r\n                     }\r\n                 </div> \r\n               </>\r\n              )})\r\n              :\r\n              <></>\r\n          }\r\n        </div>\r\n        {/* <div className={classes.notesArea}>\r\n          {notes?.length ?\r\n            notes.map((i, ind) => (\r\n              <div key={ind.toString()} className={classes.fullRow}>\r\n                {currentUser === i.User?\r\n                    <IconButton\r\n                      aria-label=\"more\"\r\n                      aria-controls=\"long-menu\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMenuClick}\r\n                    >\r\n                      <MoreVertIcon />\r\n                    </IconButton>\r\n                  : <></>\r\n                }\r\n                <Typography variant=\"body1\" align='left' color={currentUser === i.User? 'secondary' : 'primary'} className={classes.noteTitle}>\r\n                    {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n                </Typography>\r\n                {\r\n                  i.Message?.split(\"\\n\")?.map((s, ind) =>\r\n                  {\r\n                    return ind === 0? s : <Typography>{s}</Typography>\r\n                  })\r\n                }\r\n              </div>\r\n              ))\r\n              :\r\n              <></>\r\n          }\r\n        </div>  */}\r\n      </div>\r\n      );\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport {ChatMessageType} from '../../../model/constants'\r\n\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\nimport SummaryChatSubpanel from './subpanels/SummaryChatSubpanel'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  divider: {\r\n    marginRight: \"12px\"\r\n  },\r\n}));\r\n\r\nexport default function SummaryChatPanel(props) {\r\n  console.log(\"render SummaryChatPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const equipName = props.equipName;\r\n  const token = usersState.token;\r\n\r\n  const noteType = 'Note';\r\n  const chatType = ChatMessageType;\r\n\r\n  const onSendNote = async (type, note) => {\r\n    if(type === noteType){\r\n      await onSendNoteNote(note);\r\n    }\r\n    else if(type === chatType){\r\n      await onSendChatNote(note);\r\n    }\r\n  };\r\n\r\n  const onDeleteNote = async (type, noteId) => {\r\n    await EquipWorker.DeleteNote(token, equipName, chatType, noteId); \r\n    communicationDispatch({ type: 'DELETENOTE', payload: noteId}); \r\n  };\r\n\r\n  const onSendNoteNote = async (newnote) => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, noteType, newnote.id, newnote.note);    \r\n    communicationDispatch({ type: newnote.id? 'CHANGENOTE' : 'ADDNOTE', payload: note}); \r\n  };\r\n\r\n  const onSendChatNote = async (newnote) => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, chatType, newnote.id, newnote.note);  \r\n    if(newnote.id){\r\n      communicationDispatch({ type: 'CHANGENOTE', payload: note}); \r\n    } \r\n  };\r\n\r\n  const notes = communicationState.notes?.filter(n => n.Type === noteType);\r\n  const chats = communicationState.notes?.filter(n => n.Type === chatType);\r\n  return (\r\n    <div className={classes.root}>     \r\n      <SummaryChatSubpanel\r\n        type={noteType}\r\n        title='Заметки'\r\n        notes={notes}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n      <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\r\n      <SummaryChatSubpanel\r\n        type={chatType}\r\n        title='Чат'\r\n        notes={chats}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n    </div>\r\n  );\r\n}\r\n  ","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\nimport SummaryChatPanel from './summaryPanels/SummaryChatPanel'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  const equipName = currEquipState?.equipInfo;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel equipName={equipName}/> : <></>}\r\n      {tabPanelIndex === SummaryHistoryTabPanelIndex ? <SummaryHistoryTabPanel equipName={equipName}/> : <></>}      \r\n      {tabPanelIndex === SummaryChatTabPanelIndex ? <SummaryChatPanel equipName={equipName}/> : <></>}      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n  const equipName = '';\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <SummaryHistoryTabPanel equipName={equipName}/>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const token = usersState.token;\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(token, currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const columns = [\r\n    { id: 'Login', label: 'Логин', minWidth: 170, sortable: true },\r\n    { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n    { id: 'Email', label: 'Почта', minWidth: 100 },\r\n    { id: 'Role', label: 'Роль', minWidth: 100 },\r\n    { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n    { id: 'Edit', label: 'Редактировать', button: true, onEdit:props.onEdit, minWidth: 100 },\r\n  ];\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const token = usersState.token;\r\n    const data = await AdminWorker.UpdateUser(newRow, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport { Roles, UserRole } from '../../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AdminMainTabPanel(props) {\r\n  console.log(\"render AdminMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [userId, setUserId] = useState('');\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const token = usersState.token\r\n    const data = await AdminWorker.UpdateUser({id: userId, login, password, surname, email, role, disabled: false}, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n\r\n    onCancel();\r\n  };\r\n\r\n  const onEdit = async (user) => {\r\n    setUserId(user.ID);\r\n    setLogin(user.Login);\r\n    setPassword('');\r\n    setSurname(user.Surname);\r\n    setEmail(user.Email);\r\n    setRole(user.Role);\r\n  };\r\n\r\n  const onCancel = async () => {\r\n    setUserId('');\r\n    setLogin('');\r\n    setPassword('');\r\n    setSurname('');\r\n    setEmail('');\r\n    setRole(UserRole);\r\n  };\r\n\r\n  const canSubmit = login && surname && (userId ? true : password);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" value={login} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" value={password} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" value={surname} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" value={email} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl required={true} className={classes.text}>\r\n              <InputLabel required={true} htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSubmit} disabled={!canSubmit}>\r\n                Готово\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onCancel}>\r\n                Отменить\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <UserTable data={usersState.users} onEdit={onEdit}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MainTabPanelIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport AdminMainTabPanel from './adminPanels/AdminMainTabPanel'\r\nimport AdminLogTabPanel from './adminPanels/AdminLogTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <AdminMainTabPanel/> : <></>}\r\n      {tabPanelIndex === AdminLogTabPanelIndex ? <AdminLogTabPanel/> : <></>}     \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport default function ConfirmDlg(props){\r\n  const handleClose = () => {\r\n    props?.onClose(false);\r\n  };\r\n\r\n  const handleCloseOK = () => {\r\n    props?.onClose(true, props.context);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Подтверждение</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {props.сonfirmMessage}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCloseOK} autoFocus>\r\n          Да\r\n        </Button>\r\n        <Button onClick={handleClose} >\r\n          Нет\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {AdminRole} from '../../../model/constants'\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\nimport ConfirmDlg from '../../dialogs/ConfirmDlg'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function EquipTable(props) {\r\n  console.log(\"render EquipTable\");\r\n  const classes = useStyles();\r\n\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n  const [visibleOnly, setVisibleOnly] = useState(true);  \r\n  const [filtrate, setFiltrate] = useState(false);  \r\n  const [filters, setFilters] = React.useState({\r\n    byEquip: '',\r\n    byHospital: '',\r\n    byAddress:''\r\n  });\r\n  const [openConfirm, setOpenConfirm] = React.useState({Result: false});\r\n\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50,\r\n      format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170, sortable: true },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170,\r\n      format: (value) => parseLocalString(value)\r\n    },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100, sortable: true },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100, sortable: true },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    \r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n  if(isAdmin){\r\n    columns.push({ id: 'Disabled', label: 'Скрыт', checked: true, minWidth: 100,\r\n        format: (row) => row.Disabled\r\n      });\r\n  }\r\n\r\n  const onFilter = async ()  => {\r\n    setFiltrate(!filtrate);\r\n  }\r\n\r\n  let rows = visibleOnly ? props.data?.filter(p => !p.Disabled) : props.data;\r\n  if(filters.byEquip){\r\n    rows = rows?.filter(p => p.EquipName.includes(filters.byEquip));\r\n  }\r\n\r\n  if(filters.byHospital){\r\n    rows = rows?.filter(p => p.HospitalName.includes(filters.byHospital));\r\n  }\r\n\r\n  if(filters.byAddress){\r\n    rows = rows?.filter(p => p.HospitalAddress.includes(filters.byAddress));\r\n  }\r\n\r\n  const handleRowClick = async (event, row) => {\r\n\r\n    var dataColumn = event.target.getAttribute(\"data-column\");\r\n\r\n    if(dataColumn === \"Disabled\")\r\n    {\r\n      return;\r\n    }\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  const handleSelect = async (event, row) => {\r\n    setOpenConfirm({Result: true, Context: row});\r\n    /* */\r\n  };\r\n\r\n  const onVisibleOnly = async (event) => {\r\n    const value = !visibleOnly;\r\n    setVisibleOnly(value);\r\n    const allEquips = await EquipWorker.GetAllEquips(usersState.token, visibleOnly);\r\n    allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips }); \r\n  };\r\n\r\n  const onEquipFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byEquip: val.target?.value}});\r\n  }\r\n\r\n  const onHospFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byHospital: val.target?.value}});\r\n  }\r\n\r\n  const onAddressFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byAddress: val.target?.value}});\r\n  }\r\n\r\n  const onConfirmClose = async (result, context) => {\r\n    if(result){\r\n      const row = context;\r\n      const equipInfo = row.EquipName;\r\n      row.Disabled = !row.Disabled\r\n      await EquipWorker.DisableEquipInfo(usersState.token, equipInfo, row.Disabled);\r\n      allEquipsDispatch({ type: 'UPDATEALLEQUIPS', payload: row });\r\n    }\r\n    setOpenConfirm({Result: false});\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={visibleOnly}\r\n                    onChange={onVisibleOnly}\r\n                />\r\n              }\r\n              label=\"Только нескрытые\"\r\n            />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onEquipFilterChange} label=\"По комплексу\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onHospFilterChange} label=\"По ЛПУ\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onAddressFilterChange} label=\"По адресу\" variant=\"outlined\" />\r\n        {/* <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onFilter}>\r\n            Фильтровать\r\n        </Button> */}\r\n      </div>\r\n      <div className={classes.root}>\r\n        <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleRowClick} onSelect={handleSelect}></CommonTable>\r\n      </div>\r\n      <ConfirmDlg \r\n        open={openConfirm.Result} \r\n        сonfirmMessage={'Вы действительно хотите '+(openConfirm.Context?.Disabled ? 'открыть' : 'скрыть')+' комплекс?'}\r\n        onClose={onConfirmClose}\r\n        context={openConfirm.Context}\r\n        >          \r\n      </ConfirmDlg>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const ControlStateContext = createContext();\r\n\r\nconst initialState = {\r\n  serverState: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETSRVSTATE': {\r\n      return {\r\n        ...state,\r\n        serverState: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const ControlStateContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <ControlStateContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </ControlStateContext.Provider>\r\n  );\r\n};","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from '../CommonCard'\r\nimport CardRow, {CardErrorRow} from '../CardRow'\r\n\r\nexport default function ServerStateCard(props) {\r\n  console.log(`! render ServerStateCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const state = props.serverState;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>       \r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сервер\r\n        </Typography> \r\n        <CardRow descr=\"Всего БД\" value={state?.DBUsedSize}></CardRow>\r\n        <CardRow descr=\"Всего диск\" value={state?.DiskTotalSpace}></CardRow>\r\n        <CardRow descr=\"Занято диск\" value={state?.DiskUsedSpace}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from '../CommonCard'\r\n\r\nexport default function UnasweredEquipsCard(props) {\r\n  console.log(`! render UnasweredEquipsCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const hdd = props.hdd;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>        \r\n        {hdd?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              Свободно: {i.FreeSize}Гб, Всего: {i.TotalSize}Гб\r\n            </Typography>\r\n          </div>\r\n          ))\r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {CommonChat, ChatMessageType} from '../../model/constants'\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { ControlStateContext } from '../../context/controlState-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\n\r\nimport ServerStateCard from '../cards/controlCards/ServerStateCard'\r\nimport UnasweredEquipsCard from '../cards/controlCards/UnasweredEquipsCard'\r\n\r\nimport SummaryChatSubpanel from './summaryPanels/subpanels/SummaryChatSubpanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function ControlTab(props) {\r\n  console.log(\"render ControlTab\");\r\n\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext);\r\n\r\n  const chatType = ChatMessageType;\r\n  const classes = useStyles();\r\n\r\n  const equipName = CommonChat;\r\n  const token = usersState.token;\r\n\r\n  const onSendNote = async (type, newnote) => {\r\n    if(type === chatType){\r\n      const note = await EquipWorker.SendNewNote(token, equipName, chatType, newnote.id, newnote.note);  \r\n      if(newnote.id){\r\n        communicationDispatch({ type: 'CHANGENOTE', payload: note}); \r\n      } \r\n    }\r\n  };\r\n\r\n  const onDeleteNote = async (type, noteId) => {\r\n    await EquipWorker.DeleteNote(token, equipName, chatType, noteId); \r\n    communicationDispatch({ type: 'DELETENOTE', payload: noteId}); \r\n  };\r\n\r\n  const chats = communicationState.commonNotes?.filter(n => n.Type === chatType);\r\n  const serverState = controlState.serverState;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <ServerStateCard serverState={serverState}></ServerStateCard>\r\n        <UnasweredEquipsCard></UnasweredEquipsCard>\r\n      </div>\r\n      <SummaryChatSubpanel\r\n        type={chatType}\r\n        title='Чат'\r\n        notes={chats}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser=''\r\n      >\r\n      </SummaryChatSubpanel>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex,AdminTabIndex, MainTabPanelIndex,\r\n  ControlTabIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\nimport ControlTab from '../tabs/ControlTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {/* {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>} */}\r\n      {tabIndex === ControlTabIndex ? <ControlTab panel={tabPanelIndex}></ControlTab> : <></>} \r\n      {tabIndex === AdminTabIndex ? <AdminTab panel={tabPanelIndex}></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst ControlController = '/equips';\r\n\r\nexport async function GetServerState(token) {\r\n    return await HandlerWrapper('GetServerState', async () => {\r\n        const path = EquipsServiceAddress + ControlController + '/GetServerState';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, EventsTabIndex, MainTabPanelIndex,\r\n  ControlTabIndex, CommonChat } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport {AdminRole} from '../../model/constants'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport { ControlStateContext} from '../../context/controlState-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as ControlWorker from '../../workers/controlWorker'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nconst drawerWidth = 240;\r\nconst menuItems = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий', 'Панель управления']; // , 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n    minWidth: '1300px',\r\n    // width: `calc(100% - ${drawerWidth}px)`,\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();  \r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n        const token = usersState.token;\r\n          if(!token)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers(token);\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.token]);\r\n\r\n  const token = usersState.token;\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;  \r\n  }\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips(token);\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n    else if(index === EventsTabIndex)\r\n    {\r\n      const endDate = new Date();\r\n      const allEvents = await EquipWorker.SearchEquip(token, 'Events', '', getUSFullDate(endDate), getUSFullDate(endDate));\r\n      eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n    }    \r\n    else if(index === ControlTabIndex){  \r\n      const state = await ControlWorker.GetServerState(token);\r\n      controlDispatch({ type: 'SETSRVSTATE', payload: state });  \r\n\r\n      const notes = await EquipWorker.GetCommunications(token, CommonChat);\r\n      communicationDispatch({ type: 'SETCOMMONCHAT', payload: notes });     \r\n    }\r\n  \r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const mainMenu = isAdmin ? [...menuItems, 'Администрирование'] : menuItems; // , ];\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\n\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em',\r\n    backgroundColor: theme.palette.background.default,  \r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const parseJwt = (token) => {\r\n      try {\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n    // const data = await AdminWorker.Login({login: 'se', password: '1', email});\r\n    // const data = await AdminWorker.Login({login: 'sa', password: 'medtex', email});\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    \r\n    if(data && data.Token){\r\n      const claims = parseJwt(data.Token);      \r\n      usersDispatch({ type: 'SETUSER', payload: {Token: data.Token, Claims: claims, Surname: data.Surname} }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { UseDarkTheme } from './model/constants'\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: !UseDarkTheme ? \"light\" : \"dark\",\r\n  }\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (  \r\n    <>  \r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={AuthComponent} />\r\n          <Route path=\"/auth\" component={AuthComponent}/>\r\n          <Route path=\"/info\" component={MainComponent} />    \r\n          {/* <MainComponent></MainComponent> */}\r\n        </div>    \r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { EventsContextProvider} from './context/events-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\nimport { CommunicationContextProvider} from './context/communication-context';\r\nimport { ControlStateContextProvider} from './context/controlState-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AppContextProvider>\r\n        <UsersContextProvider>\r\n          <AllEquipsContextProvider>\r\n            <CurrentEquipContextProvider>\r\n              <SystemVolatileContextProvider>\r\n                <EventsContextProvider>\r\n                  <CommunicationContextProvider>\r\n                    <ControlStateContextProvider>\r\n                      <BrowserRouter>\r\n                        <App />\r\n                      </BrowserRouter>\r\n                    </ControlStateContextProvider>\r\n                  </CommunicationContextProvider>\r\n                </EventsContextProvider>\r\n              </SystemVolatileContextProvider>\r\n            </CurrentEquipContextProvider>\r\n          </AllEquipsContextProvider>\r\n        </UsersContextProvider>\r\n      </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}