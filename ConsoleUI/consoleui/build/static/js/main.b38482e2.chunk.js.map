{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/events-context.js","context/currentEquip-context.js","context/users-context.js","context/communication-context.js","context/systemVolatile-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","workers/adminWorker.js","components/tabs/adminPanels/AdminLogTabPanel.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/SofwareTable.js","components/timelines/TimeLineItem.js","components/timelines/CommonTimeLine.js","components/tabs/summaryPanels/SummaryHistoryTabPanel.js","components/tabs/summaryPanels/subpanels/SummaryChatSubpanel.js","components/tabs/summaryPanels/SummaryChatPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tabs/HistoryTab.js","components/tables/adminTables/UserTable.js","components/tabs/adminPanels/AdminMainTabPanel.js","components/tabs/AdminTab.js","components/dialogs/ConfirmDlg.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","ComplexTypeImages","UseDarkTheme","UserRole","AdminRole","Roles","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","oldRow","EquipName","Disabled","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","EventsContext","currentEvents","EventsContextProvider","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","lastSeen","undefined","locationInfo","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","SystemInfo","SoftwareInfo","LastSeen","LocationInfo","CurrentEquipContextProvider","UsersContext","currentUser","token","users","Token","Claims","Surname","UsersContextProvider","CommunicationContext","logs","notes","CommunicationContextProvider","SystemVolatileContext","currentVolatile","SimpleMsgType","AtlasStatus","SystemVolatileContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","GetTokenHeader","headers","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","isToday","today","setHours","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","GetAllEquips","withDisabled","GetAllTables","GetTableContent","tableType","tableName","UpdateDBInfo","DisableEquipInfo","disabled","GetCommunications","SendNewNote","msgType","message","encodeURIComponent","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","systemVolatileDispatch","allEquipsState","usersState","connectedEquip","EquipWorker","fullInfo","AdminController","GetAllUsers","header","UpdateUser","user","Login","login","GetServerLogs","useStyles","makeStyles","theme","root","width","borderColor","AdminLogTabPanel","classes","communicationState","TextareaAutosize","className","rowsMax","aria-label","defaultValue","appBar","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","button","marginRight","MainToolBar","appState","appDispatch","allEquipsDispatch","eventsDispatch","communicationDispatch","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","getEvents","allEvents","getLogs","AdminWorker","getChats","useEffect","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","close","onmessage","JSON","parse","topic","Topic","startsWith","Events","equip","topicParts","split","length","getEquipFromTopic","replace","values","Data","note","useWebSocket","selectedTab","selectedTabPanel","onTabIndexChange","newValue","allTables","onUpdateDBInfo","isDBInfoStateUpdating","DBInfoStateUpdating","isValidSummaryTab","AppBar","position","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","id","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","Tab","label","Button","onClick","align","useCardsStyles","marginBottom","bullet","transform","title","pos","descr","textAlign","fontWeight","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","buttonColor","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","heatStatus","HeatStatus","Mas","Kv","Workstation","Focus","PedalPressed","Code","Description","SystemCard","volatile","logicalDisks","LogicalDisks","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","dimmed","EquipImageCard","equipClasses","pathKey","Object","keys","find","k","some","v","isConnected","hospital","address","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","dbStates","DBStates","Software","atlas","Array","isArray","Atlas","atlasUser","AtlasUser","osInfo","OsInfos","sql","SqlServices","databases","SqlDatabases","atlasRunning","AtlasRunning","OsCaption","OsVersion","SqlName","SqlVersion","CurrentUser","Status","AtlasVersion","XilibsVersion","ComplexType","Language","Multimonitor","User","Role","AtlasErrorDescriptions","ImagesCard","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","isEquipConnected","HospitalName","HospitalAddress","container","minHeight","maxHeight","errorCell","background","wordWrap","simpleCell","boldCell","checkBox","descendingComparator","b","orderBy","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","setOrderBy","order","setOrder","rows","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","columns","selectedRow","onRowClick","ev","row","isRowBold","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","sortDirection","sortable","TableSortLabel","active","direction","property","TableBody","slice","rowInd","selected","hover","role","tabIndex","format","hasErrors","Checkbox","onSelect","formatArray","commonSpacing","onEdit","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","palette","paper","overflowY","content","flexGrow","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","c","flat","key","toLowerCase","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","atlasTableMenu","List","ListItem","ListItemText","primary","Active","inline","isImportant","collapse","TimeLineItem","handleClick","time","details","alignItems","ListItemAvatar","Avatar","alt","src","Fragment","secondary","Collapse","in","timeout","unmountOnExit","CommonTimeLine","showImportantOnly","DateTime","isOffline","Title","Details","Divider","textField","SummaryHistoryTabPanel","eventsState","curDate","setDate","setStartDate","setEndDate","importantOnly","setImportantOnly","byTitle","byDescr","filters","setFilters","events","onSearch","onTitleFilterChange","onDescrFilterChange","TextField","InputLabelProps","shrink","FormControlLabel","control","fullRow","noteTitle","notesArea","overflowWrap","SummaryChatSubpanel","newNote","setNewNote","onNoteChange","onSendNote","canSubmit","multiline","Message","s","SummaryChatPanel","noteType","chatType","onSendNoteNote","onSendChatNote","newnote","n","chats","SummaryTab","tabPanelIndex","MapTab","EventsTab","UserTable","usersDispatch","handleSelect","newRow","flexDirection","justifyContent","AdminMainTabPanel","userId","setUserId","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","options","selectedIndex","onSubmit","onCancel","ID","Email","required","InputLabel","htmlFor","NativeSelect","AdminTab","ConfirmDlg","handleClose","aria-describedby","DialogContent","DialogContentText","сonfirmMessage","DialogActions","context","autoFocus","EquipTable","visibleOnly","setVisibleOnly","byEquip","byHospital","byAddress","Result","openConfirm","setOpenConfirm","push","handleRowClick","getAttribute","Context","onVisibleOnly","onEquipFilterChange","onHospFilterChange","onAddressFilterChange","onConfirmClose","result","readonly","EquipsTab","MainInfoComponent","drawerWidth","menuItems","drawer","flexShrink","drawerPaper","toolbar","mixins","padding","MainComponent","to","mainMenu","CssBaseline","Drawer","anchor","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","alert","borderRadius","AuthComponent","redirect","setRedirect","showError","setShowError","onLogin","parseJwt","atob","claims","createMuiTheme","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b38482e2.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\nexport const ComplexTypeImages = window.ComplexTypeImages;\r\nexport const UseDarkTheme = window.UseDarkTheme;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\n// export const HistoryTabIndex = 4;\r\nexport const AdminTabIndex = 4; //5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;\r\nexport const SummaryHistoryTabPanelIndex = 2;\r\nexport const SummaryChatTabPanelIndex = 3;\r\n\r\nexport const AdminLogTabPanelIndex = 4;","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'UPDATEALLEQUIPS': {\r\n      const oldRow = state.selectedEquips.filter(p => p.EquipName === action.payload.EquipName)\r\n      if(oldRow){\r\n        oldRow.Disabled = action.payload.Disabled\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        allEquips: [...state.allEquips]\r\n      };\r\n    }    \r\n    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const EventsContext = createContext();\r\n\r\nconst initialState = {\r\n  currentEvents: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEVENTS': {\r\n      return {\r\n        ...state,\r\n        currentEvents: action.payload\r\n      };\r\n    }   \r\n    case 'ADDEVENT': {\r\n      return {\r\n        ...state,\r\n        currentEvents: [...action.payload, ...state.currentEvents]\r\n      };\r\n    }   \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const EventsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <EventsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EventsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n  lastSeen:undefined,\r\n  locationInfo: '',\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n\r\n    case 'SETLASTSEEN': {\r\n      return {\r\n        ...state,\r\n        lastSeen: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    case 'SETFULLINFO': {\r\n      return {\r\n        ...state,\r\n        system: action.payload?.SystemInfo[0],\r\n        software: action.payload?.SoftwareInfo[0],\r\n        lastSeen: action.payload?.LastSeen,\r\n        locationInfo: action.payload?.LocationInfo\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  token: null,\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        token: action.payload.Token,\r\n        currentUser: {...action.payload.Claims, Surname: action.payload.Surname}\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CommunicationContext = createContext();\r\n\r\nconst initialState = {\r\n  logs: [],\r\n  notes: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETLOGS': {\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n    } \r\n    case 'SETCHATS': {\r\n      return {\r\n        ...state,\r\n        notes: action.payload\r\n      };\r\n    } \r\n    case 'ADDNOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes]\r\n      };\r\n    }\r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CommunicationContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CommunicationContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CommunicationContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      const newState = {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n\r\n      if(action.payload.SimpleMsgType === \"AtlasExited\") {\r\n        newState.currentVolatile.AtlasStatus = null;\r\n      }\r\n      \r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}\r\n\r\nexport function GetTokenHeader(token) {\r\n    return  {\r\n        headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + token  // передача токена в заголовке\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => new Date(value).toLocaleString();\r\n\r\nexport const isToday = (value) =>\r\n{\r\n    const today = new Date();\r\n    const date = new Date(value);\r\n    return date.setHours(0,0,0,0) == today.setHours(0,0,0,0);\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\nexport async function GetConnectedEquips(token) {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(token, activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(token, currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(token, currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(token, activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips(token, withDisabled = false) {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(\r\n            EquipsServiceAddress + EquipsController + '/GetAllEquips?withDisabled='+withDisabled,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(token, equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(token, equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateDBInfo(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('UpdateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/UpdateDBInfo?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DisableEquipInfo(token, equipName, disabled) {\r\n    return await HandlerWrapper('DisableEquipInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DisableEquipInfo?equipName=' + equipName+\r\n            '&disabled=' + disabled,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetCommunications(token, equipName) {\r\n    return await HandlerWrapper('GetCommunicationsData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetCommunicationsData?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendNewNote(token, equipName, msgType, message) {\r\n    return await HandlerWrapper('SendNewNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendNewNote?equipName=' + equipName+\r\n            '&msgType=' + encodeURIComponent(msgType)+\r\n            '&message=' + encodeURIComponent(message),\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n    const token = usersState.token;\r\n    const connectedEquip = allEquipsState.connectedEquips?.includes(equipInfo)\r\n\r\n    systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    // new software & system info come very slowly\r\n    /*const sysInfo = await EquipWorker.GetPermanentData(token, \"SystemInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSYSTEM', payload: sysInfo[0] }); \r\n\r\n    const swInfo = await EquipWorker.GetPermanentData(token, \"Software\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSOFTWARE', \r\n      payload: {\r\n        Atlas: swInfo.Atlas ? swInfo.Atlas[0] : undefined, \r\n        Software: swInfo.Software ? swInfo.Software[0] : undefined} }); \r\n\r\n    if(!connectedEquip){\r\n      const lastSeen = await EquipWorker.GetPermanentData(token, \"LastSeen\", equipInfo);\r\n      currEquipDispatch({ type: 'SETLASTSEEN', payload: lastSeen }); \r\n    }\r\n    else {\r\n      await EquipWorker.Activate(token, equipInfo, currEquipState.equipInfo);\r\n    }\r\n    */\r\n    const fullInfo = await EquipWorker.GetPermanentData(token, \"FullInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETFULLINFO', payload: fullInfo }); \r\n    if(connectedEquip){\r\n      await EquipWorker.Activate(token, equipInfo, currEquipState.equipInfo);\r\n    }\r\n  };\r\n\r\n  return setEquipInfo;\r\n}\r\n","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers(token) {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user, token) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetServerLogs(token) {\r\n    return await HandlerWrapper('GetServerLogs', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetServerLogs';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n}));\r\n\r\nexport default function AdminLogTabPanel(props) {\r\n  console.log(\"render AdminLogTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n\r\n  return (\r\n    <div>\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={communicationState.logs}\r\n      />\r\n        {/* <Typography variant=\"body2\" gutterBottom>\r\n            {communicationState.logs}\r\n        </Typography> */}\r\n    </div>\r\n  );\r\n}\r\n  ","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex,\r\n  AdminTabIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\nimport {getUSFullDate} from '../../utilities/utils'\r\nimport AdminLogTabPanel from '../tabs/adminPanels/AdminLogTabPanel';\r\n  \r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 640,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n  },\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  \r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const token = usersState.token;\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    getEvents(equipInfo);\r\n  }\r\n\r\n  const getEvents = async (equipInfo) =>\r\n  {\r\n    const endDate = new Date();\r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipInfo, getUSFullDate(endDate), getUSFullDate(endDate));\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  }\r\n\r\n  const getLogs = async () =>\r\n  {\r\n    const logs = await AdminWorker.GetServerLogs(token);\r\n    communicationDispatch({ type: 'SETLOGS', payload: logs }); \r\n  }\r\n\r\n  const getChats = async () =>\r\n  {\r\n    const notes = await EquipWorker.GetCommunications(token, equipInfo);\r\n    communicationDispatch({ type: 'SETCHATS', payload: notes }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryTabIndex === selectedTab && SummaryDBTabPanelIndex === newValue && equipInfo){\r\n      const allTables = await EquipWorker.GetAllTables(token, equipInfo);\r\n      currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryHistoryTabPanelIndex === newValue){        \r\n      getEvents(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryChatTabPanelIndex === newValue){        \r\n      getChats(equipInfo);\r\n    }\r\n    else if(AdminTabIndex === selectedTab && AdminLogTabPanelIndex === newValue){        \r\n      getLogs();\r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  const onUpdateDBInfo = async () =>{\r\n    if(equipInfo){\r\n      const res = await EquipWorker.UpdateDBInfo(token, equipInfo);\r\n    }\r\n  }\r\n\r\n  const isDBInfoStateUpdating = currEquipState.remoteaccess?.DBInfoStateUpdating;\r\n  const isValidSummaryTab = selectedTab === SummaryTabIndex && equipInfo;\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" />\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"БД\" id= \"dbTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"История\" id= \"histTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"Коммуникации\" id= \"chatTabPanel\" /> : <></>\r\n              }\r\n              {selectedTab === AdminTabIndex?\r\n                  <Tab label=\"Логи\" id= \"logsTabPanel\" /> : <></>              \r\n              }              \r\n            </Tabs>\r\n            {selectedTab === SummaryTabIndex?\r\n                <Button variant=\"contained\" \r\n                    color={isDBInfoStateUpdating ? \"secondary\" : \"primary\"}\r\n                    className={classes.button} \r\n                    onClick={onUpdateDBInfo} \r\n                >\r\n                  {isDBInfoStateUpdating ? 'Обновляется' : 'Обновить'}\r\n                </Button> : <></>\r\n            }\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport { EventsContext } from '../context/events-context';\r\nimport { CommunicationContext } from '../context/communication-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [usersState, usersDispatch] = useContext(UsersContext);\r\n    const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!usersState.token){\r\n           return;\r\n        }\r\n\r\n        createSocket();\r\n    }, [usersState.token]);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips(usersState.token);\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n                else if(topic.startsWith('Events'))\r\n                {\r\n                    eventsDispatch({ type: 'ADDEVENT', payload: data.Events }); \r\n                    return;\r\n                }  \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    // currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/chat'))\r\n                {\r\n                    const note = data? JSON.parse(data.Data) : null;\r\n                    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n                }\r\n               \r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    // width:'10%',\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n    fontWeight: 'bold',\r\n    marginRight: '0.5em',\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  const heatStatus = generator?.State?.HeatStatus;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={heatStatus === 2 ? \"Высокий\" : heatStatus === 3 ? \"Критический\" : heatStatus === 1 ? \"Норм\" : \"\"}\r\n          rightColor={heatStatus === 2 ? \"yellow\" : heatStatus === 3 ? \"red\" :  heatStatus === 1 ? \"green\" : \"gray\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ generator?.State?.PedalPressed === 1 ? \"Графия\" : generator?.State?.PedalPressed === 2 ? \"Скопия\" : \"Не нажата\"} \r\n          rightColor={generator?.State?.PedalPressed === 1 || generator?.State?.PedalPressed === 2? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = system?.LogicalDisks; // HDD\r\n  const physicalDisks = system?.HardDrives;  // PhysicalDisks\r\n  const lans = system?.Lans; // Network\r\n  const vgas = system?.VideoAdapters; // VGA\r\n  const monitors = system?.Monitors; // Monitor\r\n  const printers = system?.Printers; //Printer\r\n  const processor = system?.Motherboards ? system?.Motherboards[0] : undefined; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad || volatile?.Processor?.CPULoad === 0? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport {parseLocalString} from '../../utilities/utils'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\nimport { ComplexTypeImages } from '../../model/constants'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n  },\r\n  dimmed:{\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n    filter: 'brightness(40%)',\r\n  }\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const pathKey = Object.keys(ComplexTypeImages).find(k => \r\n    {\r\n      return ComplexTypeImages[k].some(v => equipInfo?.startsWith(v));\r\n    });\r\n  \r\n  const isConnected = props.isConnected;\r\n  const lastSeen = props.lastSeen;\r\n  const hospital = props.hospital;\r\n  const address = props.address;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={isConnected ? equipClasses.media : equipClasses.dimmed}\r\n        // image=\"./girl.jpg\"\r\n        image={\"./\" + pathKey}\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n          {hospital? <div>ЛПУ: {hospital} </div>: <></>}\r\n          {address? <div>Адрес: {address} </div>: <></>}\r\n          {lastSeen? <div>Посл. сообщение: {parseLocalString(lastSeen)} </div>: <></>}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"#f50057\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const token = props.token;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(token, equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(token, equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(token, equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(token, equipInfo, detailedXilib, verboseXilib);\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const volatile = props.volatile;\r\n  const dbStates = volatile?.DBStates;\r\n  const software = props.software?.Software;\r\n  const atlas = Array.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;\r\n  const atlasUser = volatile?.AtlasUser || volatile?.AtlasStatus?.AtlasUser;\r\n  const osInfo = Array.isArray(software?.OsInfos) ? software?.OsInfos[0] : null; \r\n  const sql = Array.isArray(software?.SqlServices) ? software?.SqlServices[0] : null; \r\n  const databases = dbStates ?? software?.SqlDatabases;\r\n  const atlasRunning = volatile?.AtlasStatus?.AtlasRunning;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={osInfo?.OsCaption} value={osInfo?.OsVersion}></CardRow>\r\n        <CardRow descr={sql?.SqlName} value={sql?.SqlVersion}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={osInfo?.CurrentUser}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {volatile?.ErrorDescriptions?.length ? \r\n          volatile.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {databases?.length ? \r\n          databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.Name} value={i.Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n              value={atlasRunning? \"запущен\" : \"не запущен\"}\r\n              rightColor={!atlasRunning? \"red\" : \"green\"}></CardRow>\r\n        <CardRow descr=\"Версия\" value={atlas?.AtlasVersion}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={atlas?.XilibsVersion}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={atlas?.ComplexType}></CardRow>\r\n        <CardRow descr=\"Язык\" value={atlas?.Language}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const isEquipConnected = allEquipsState.connectedEquips?.includes(equipInfo);\r\n  const lastSeen = currEquipState.lastSeen;\r\n  const hospital = currEquipState.locationInfo?.HospitalName;\r\n  const address = currEquipState.locationInfo?.HospitalAddress;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard \r\n          equipInfo={equipInfo} \r\n          isConnected={isEquipConnected} \r\n          lastSeen={lastSeen}\r\n          hospital={hospital}\r\n          address={address}\r\n        ></EquipImageCard>\r\n        <SystemCard system={currEquipState.system} volatile={systemVolatileState.currentVolatile}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <ImagesCard images={currEquipState.images}></ImagesCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo} remoteaccess={currEquipState.remoteaccess} token={usersState.token}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software} volatile={systemVolatileState.currentVolatile}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: 40,\r\n    maxHeight: '100%',\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  },\r\n  boldCell:{\r\n    wordWrap: 'break-word',\r\n    fontWeight: 'bolder',\r\n    fontSize: 'larger',\r\n  },  \r\n  checkBox:{\r\n    color: 'green',\r\n  },  \r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\r\n  const [orderBy, setOrderBy] = React.useState('');\r\n  const [order, setOrder] = React.useState('asc');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRequestSort = (property) => () => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const rows = stableSort(props.rows ? props.rows : [], getComparator(order, orderBy)) ;\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n  const isRowBold = props.isRowBold;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                // <TableCell\r\n                //   key={column.id}\r\n                //   align={column.align}\r\n                //   style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                // >\r\n                //   {column.label}\r\n                // </TableCell>\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                  sortDirection={orderBy === column.id ? order : false}\r\n                >\r\n                  {!column.sortable? \r\n                    column.label:\r\n                    <TableSortLabel\r\n                      active={orderBy === column.id}\r\n                      direction={orderBy === column.id ? order : 'asc'}\r\n                      onClick={handleRequestSort(column.id)}\r\n                    >\r\n                      {column.label}                    \r\n                    </TableSortLabel>\r\n                  }\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowInd) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={rowInd} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    const checked = column.format ? column.format(row) : value;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={\r\n                          column.hasErrors && column.hasErrors(value) ? \r\n                            classes.errorCell : \r\n                            isRowBold && isRowBold(row) ?\r\n                              classes.boldCell :\r\n                              classes.simpleCell\r\n                        }\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            style ={{\r\n                              color: checked ? 'green' : 'gray', //\"#00e676\",\r\n                            }}\r\n                            checked={checked}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts', 'data-column' : column.id }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : \r\n\r\n                            column.button ? \r\n                              <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={() => column.onEdit(row)}>\r\n                                    {column.label}\r\n                              </Button> :\r\n                              value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"285px\",\r\n    // backgroundColor: 'white',\r\n    backgroundColor: theme.palette.background.paper,\r\n    maxHeight: \"900px\",\r\n    overflowY: 'auto',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  const getColumn = (key) => { \r\n    if(key.toLowerCase() === 'active')\r\n    {\r\n      return { \r\n        id: key, label: key, minWidth: 100, maxWidth: 100,\r\n        format: (value) => value ? '+' : '-'\r\n      }\r\n    }\r\n\r\n    return { id: key, label: key, minWidth: 100, maxWidth: 300 }\r\n  }\r\n\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(usersState.token, currEquipState.equipInfo, type, text);\r\n    let values = []\r\n    if(Array.isArray(content)){\r\n      values = content.map(c => JSON.parse(c)).flat(1);\r\n    }\r\n    else{\r\n      values = content? JSON.parse(content) : null;\r\n    }\r\n    \r\n    setTableContent(values);\r\n  };\r\n\r\n  const isRowBold = (row) =>\r\n  {\r\n    return row.Active\r\n  }\r\n  \r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = currEquipState.allDBTables?.Hospital;\r\n  const systemTableMenu = currEquipState.allDBTables?.System;\r\n  const softwareTableMenu = currEquipState.allDBTables?.Software;\r\n  const atlasTableMenu = currEquipState.allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.listPanel}>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <main className={classes.content}>\r\n        <>  \r\n                   <CommonTable \r\n                     columns={columns} \r\n                     rows={rows} \r\n                     isRowBold = {isRowBold}></CommonTable>\r\n        </>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  equip: {\r\n    width: '10%',\r\n  },\r\n  isImportant:{\r\n    backgroundColor: 'red',\r\n  },\r\n  collapse:{\r\n    textAlign:'left',\r\n  }\r\n}));\r\n\r\nexport default function TimeLineItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isImportant = props.isImportant;\r\n  const equipName = props.equipName;\r\n  const time = props.time;\r\n  const title = props.title;\r\n  const text = props.text;\r\n  const details = props.details;\r\n  return (\r\n    <div>\r\n        <ListItem alignItems=\"flex-start\" button>\r\n            <ListItemAvatar >\r\n                <Avatar className={isImportant ? classes.isImportant : null} alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            {/* <ListItemText className={classes.equip} primary={equipName} secondary={time} /> */}\r\n            <ListItemText\r\n                primary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {equipName}\r\n                        </Typography>\r\n                        {\" \" + time}\r\n                    </React.Fragment>\r\n                }\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        {\" - \" + text}\r\n                    </React.Fragment>\r\n                }                \r\n            />\r\n            {details && open ? <ExpandLess onClick={handleClick}/> : \r\n              details && !open ? <ExpandMore onClick={handleClick}/> : <></>}\r\n        </ListItem>\r\n        \r\n            {details ? \r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.collapse}>\r\n                {details}\r\n              </Collapse>: <></>}\r\n        </div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {parseLocalString, isToday} from '../../utilities/utils'\r\nimport TimeLineItem from './TimeLineItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommonTimeLine(props) {\r\n  const classes = useStyles();\r\n  \r\n  const equipName = props.equipName;\r\n  const showImportantOnly = props.showImportantOnly;\r\n  const  rows = props.rows;\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Сегодня\r\n        </Typography>\r\n        { rows?.filter(i => isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            const isOffline=i.Type?.includes('Offline');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title + (isOffline ? '(Offline)' : '')} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n        <Divider />\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Все время\r\n        </Typography>\r\n        { rows?.filter(i => !isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n    </List>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {SearchPeriod} from '../../../model/constants'\r\nimport {getUSFullDate} from '../../../utilities/utils'\r\n\r\nimport SystemTable from '../../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../../tables/historyTables/DetectorTable'\r\nimport StandTable from '../../tables/historyTables/StandTable'\r\nimport DicomTable from '../../tables/historyTables/DicomTable'\r\nimport CommonTimeLine from '../../timelines/CommonTimeLine'\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { EventsContext } from '../../../context/events-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryHistoryTabPanel(props) {\r\n  console.log(\"render SummaryHistoryTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  // const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  \r\n  // const [events, setEvents] = useState([]);  \r\n  const [importantOnly, setImportantOnly] = useState(false);  \r\n  const [filters, setFilters] = useState({\r\n    byTitle: '',\r\n    byDescr: ''\r\n  });\r\n\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  // const handleNameChange = (ev) => {\r\n  //   setEquipName(ev.target.value);\r\n  // };  \r\n\r\n  const equipName = props.equipName; // currEquipState?.equipInfo;\r\n  let events = eventsState.currentEvents;\r\n  const token = usersState.token;\r\n\r\n  const onSearch = async () => {    \r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipName, startDate, endDate);\r\n    // setEvents(data);\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  };\r\n\r\n  const onSelect = async (event) => {\r\n    setImportantOnly(!importantOnly);\r\n  };\r\n\r\n  \r\n  if(filters.byTitle){\r\n    events = events?.filter(p => p.Description.includes(filters.byTitle));\r\n  }\r\n\r\n  if(filters.byDescr){\r\n    events = events?.filter(p => p.Details.includes(filters.byDescr));\r\n  }\r\n\r\n  const onTitleFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byTitle: val.target?.value}});\r\n  }\r\n\r\n  const onDescrFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byDescr: val.target?.value}});\r\n  }\r\n\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n                checked={importantOnly}\r\n                onChange={onSelect}\r\n            />\r\n          }\r\n          label=\"Только важные\"\r\n        />\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onTitleFilterChange} label=\"По названию\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onDescrFilterChange} label=\"По описанию\" variant=\"outlined\" />\r\n        \r\n    </div>\r\n    <div className={classes.root}>        \r\n      <CommonTimeLine equipName={equipName} rows={events} showImportantOnly={importantOnly}></CommonTimeLine>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {parseLocalString} from '../../../../utilities/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"50%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  fullRow:{\r\n    width: '100%',\r\n    textAlign: 'left',\r\n  },\r\n  textField:{\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n\r\n  } ,\r\n  noteTitle:{\r\n    width: '100%',\r\n    fontWeight: 'bolder',\r\n    textAlign: 'left',\r\n    display: 'inline',\r\n  },\r\n  notesArea:{\r\n    maxWidth: '100%',\r\n    // overflowX: 'auto',\r\n    overflowWrap: 'break-word',\r\n  }\r\n}));\r\n\r\nexport default function SummaryChatSubpanel(props) {\r\n  console.log(\"render SummaryChatSubpanel\");\r\n\r\n  const classes = useStyles();\r\n  const [newNote, setNewNote] = useState('');\r\n\r\n  const onNoteChange = async (val)  => {\r\n    setNewNote(val);\r\n  }\r\n\r\n  const type = props.type;\r\n  const onSendNote = async () => {\r\n    if(props.onSendNote){\r\n      await props.onSendNote(type, newNote);\r\n      setNewNote('');\r\n    }\r\n  };\r\n\r\n  const title = props.title;\r\n  const notes = props.notes;\r\n  const currentUser = props.currentUser;\r\n  const canSubmit = !!newNote;\r\n  return (\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">{title}</Typography>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newNote}\r\n          onChange={e => onNoteChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSendNote} disabled={!canSubmit}>\r\n              Послать\r\n        </Button>\r\n        <div className={classes.notesArea}>\r\n          {notes?.length ? \r\n            notes.map((i, ind) => (\r\n              <div key={ind.toString()} className={classes.fullRow}>\r\n                <Typography variant=\"body1\" align='left' color={currentUser === i.User? 'secondary' : 'primary'} className={classes.noteTitle}>\r\n                    {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n                </Typography> \r\n                {\r\n                  i.Message?.split(\"\\n\")?.map((s, ind) => \r\n                  {\r\n                    return ind === 0? s : <Typography>{s}</Typography>\r\n                  }\r\n                  )\r\n                }              \r\n              </div>\r\n              ))\r\n              :\r\n              <></>          \r\n          }  \r\n        </div>      \r\n      </div>\r\n      );\r\n}\r\n  ","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\nimport SummaryChatSubpanel from './subpanels/SummaryChatSubpanel'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function SummaryChatPanel(props) {\r\n  console.log(\"render SummaryChatPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const equipName = props.equipName;\r\n  const token = usersState.token;\r\n\r\n  const noteType = 'Note';\r\n  const chatType = 'Chat';\r\n\r\n  const onSendNote = async (type, note) => {\r\n    if(type === noteType){\r\n      await onSendNoteNote(note);\r\n    }\r\n    else if(type === chatType){\r\n      await onSendChatNote(note);\r\n    }\r\n  };\r\n\r\n  const onSendNoteNote = async (newnote) => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, noteType, newnote);    \r\n    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n  };\r\n\r\n  const onSendChatNote = async (newnote) => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, chatType, newnote);   \r\n  };\r\n\r\n  const notes = communicationState.notes?.filter(n => n.Type === noteType);\r\n  const chats = communicationState.notes?.filter(n => n.Type === chatType);\r\n  return (\r\n    <div className={classes.root}>     \r\n      <SummaryChatSubpanel\r\n        type={noteType}\r\n        title='Заметки'\r\n        notes={notes}\r\n        onSendNote={onSendNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n      <SummaryChatSubpanel\r\n        type={chatType}\r\n        title='Чат'\r\n        notes={chats}\r\n        onSendNote={onSendNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n    </div>\r\n  );\r\n}\r\n  \r\n/*\r\nexport default function SummaryChatPanel(props) {\r\n  console.log(\"render SummaryChatPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [newChat, setNewChat] = useState('');\r\n\r\n  const equipName = props.equipName;\r\n  const token = usersState.token;\r\n\r\n  const onNoteChange = async (val)  => {\r\n    setNewNote(val);\r\n  }\r\n\r\n  const onChatChange = async (val)  => {\r\n    setNewChat(val);\r\n  }\r\n\r\n  const noteType = 'Note';\r\n  const chatType = 'Chat';\r\n  const onSendNote = async () => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, noteType, newNote);    \r\n    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n    setNewNote('');\r\n  };\r\n\r\n  const onSendChat = async () => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, chatType, newChat);   \r\n    setNewChat('');\r\n  };\r\n\r\n  const notes = communicationState.notes?.filter(n => n.Type === noteType);\r\n  const chats = communicationState.notes?.filter(n => n.Type === chatType);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">Заметки</Typography>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newNote}\r\n          onChange={e => onNoteChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSendNote}>\r\n              Послать\r\n        </Button>\r\n        {notes?.length ? \r\n          notes.map((i, ind) => (\r\n            <div key={ind.toString()} className={classes.fullRow}>\r\n              <Typography variant=\"body1\" align='left' color='primary' className={classes.noteTitle}>\r\n                  {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n              </Typography> \r\n              {\r\n                i.Message?.split(\"\\n\")?.map(s => \r\n                    <Typography >{s}</Typography>\r\n                  )\r\n              }              \r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }        \r\n      </div>\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">Чат</Typography>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newChat}\r\n          onChange={e => onChatChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSendChat}>\r\n              Послать\r\n        </Button>\r\n        {chats?.length ? \r\n          chats.map((i, ind) => (\r\n            <div key={ind.toString()} className={classes.fullRow}>\r\n              <Typography variant=\"body1\" align='left' color='primary' className={classes.noteTitle}>\r\n                  {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n              </Typography> \r\n              {i.Message}\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </div>    \r\n    </div>\r\n  );\r\n}\r\n  */","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\nimport SummaryChatPanel from './summaryPanels/SummaryChatPanel'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  const equipName = currEquipState?.equipInfo;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel equipName={equipName}/> : <></>}\r\n      {tabPanelIndex === SummaryHistoryTabPanelIndex ? <SummaryHistoryTabPanel equipName={equipName}/> : <></>}      \r\n      {tabPanelIndex === SummaryChatTabPanelIndex ? <SummaryChatPanel equipName={equipName}/> : <></>}      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n  const equipName = '';\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <SummaryHistoryTabPanel equipName={equipName}/>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const token = usersState.token;\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(token, currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const columns = [\r\n    { id: 'Login', label: 'Логин', minWidth: 170, sortable: true },\r\n    { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n    { id: 'Email', label: 'Почта', minWidth: 100 },\r\n    { id: 'Role', label: 'Роль', minWidth: 100 },\r\n    { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n    { id: 'Edit', label: 'Редактировать', button: true, onEdit:props.onEdit, minWidth: 100 },\r\n  ];\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const token = usersState.token;\r\n    const data = await AdminWorker.UpdateUser(newRow, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport { Roles, UserRole } from '../../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AdminMainTabPanel(props) {\r\n  console.log(\"render AdminMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [userId, setUserId] = useState('');\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const token = usersState.token\r\n    const data = await AdminWorker.UpdateUser({id: userId, login, password, surname, email, role, disabled: false}, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n\r\n    onCancel();\r\n  };\r\n\r\n  const onEdit = async (user) => {\r\n    setUserId(user.ID);\r\n    setLogin(user.Login);\r\n    setPassword('');\r\n    setSurname(user.Surname);\r\n    setEmail(user.Email);\r\n    setRole(user.Role);\r\n  };\r\n\r\n  const onCancel = async () => {\r\n    setUserId('');\r\n    setLogin('');\r\n    setPassword('');\r\n    setSurname('');\r\n    setEmail('');\r\n    setRole(UserRole);\r\n  };\r\n\r\n  const canSubmit = login && surname && (userId ? true : password);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" value={login} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" value={password} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" value={surname} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" value={email} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl required={true} className={classes.text}>\r\n              <InputLabel required={true} htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSubmit} disabled={!canSubmit}>\r\n                Готово\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onCancel}>\r\n                Отменить\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <UserTable data={usersState.users} onEdit={onEdit}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MainTabPanelIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport AdminMainTabPanel from './adminPanels/AdminMainTabPanel'\r\nimport AdminLogTabPanel from './adminPanels/AdminLogTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <AdminMainTabPanel/> : <></>}\r\n      {tabPanelIndex === AdminLogTabPanelIndex ? <AdminLogTabPanel/> : <></>}     \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport default function ConfirmDlg(props){\r\n  const handleClose = () => {\r\n    props?.onClose(false);\r\n  };\r\n\r\n  const handleCloseOK = () => {\r\n    props?.onClose(true, props.context);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Подтверждение</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {props.сonfirmMessage}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCloseOK} autoFocus>\r\n          Да\r\n        </Button>\r\n        <Button onClick={handleClose} >\r\n          Нет\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {AdminRole} from '../../../model/constants'\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\nimport ConfirmDlg from '../../dialogs/ConfirmDlg'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function EquipTable(props) {\r\n  console.log(\"render EquipTable\");\r\n  const classes = useStyles();\r\n\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n  const [visibleOnly, setVisibleOnly] = useState(true);  \r\n  const [filtrate, setFiltrate] = useState(false);  \r\n  const [filters, setFilters] = React.useState({\r\n    byEquip: '',\r\n    byHospital: '',\r\n    byAddress:''\r\n  });\r\n  const [openConfirm, setOpenConfirm] = React.useState({Result: false});\r\n\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50,\r\n      format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170, sortable: true },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170,\r\n      format: (value) => parseLocalString(value)\r\n    },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100, sortable: true },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100, sortable: true },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    \r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n  if(isAdmin){\r\n    columns.push({ id: 'Disabled', label: 'Скрыт', checked: true, minWidth: 100,\r\n        format: (row) => row.Disabled\r\n      });\r\n  }\r\n\r\n  const onFilter = async ()  => {\r\n    setFiltrate(!filtrate);\r\n  }\r\n\r\n  let rows = visibleOnly ? props.data?.filter(p => !p.Disabled) : props.data;\r\n  if(filters.byEquip){\r\n    rows = rows?.filter(p => p.EquipName.includes(filters.byEquip));\r\n  }\r\n\r\n  if(filters.byHospital){\r\n    rows = rows?.filter(p => p.HospitalName.includes(filters.byHospital));\r\n  }\r\n\r\n  if(filters.byAddress){\r\n    rows = rows?.filter(p => p.HospitalAddress.includes(filters.byAddress));\r\n  }\r\n\r\n  const handleRowClick = async (event, row) => {\r\n\r\n    var dataColumn = event.target.getAttribute(\"data-column\");\r\n\r\n    if(dataColumn === \"Disabled\")\r\n    {\r\n      return;\r\n    }\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  const handleSelect = async (event, row) => {\r\n    setOpenConfirm({Result: true, Context: row});\r\n    /* */\r\n  };\r\n\r\n  const onVisibleOnly = async (event) => {\r\n    const value = !visibleOnly;\r\n    setVisibleOnly(value);\r\n    const allEquips = await EquipWorker.GetAllEquips(usersState.token, visibleOnly);\r\n    allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips }); \r\n  };\r\n\r\n  const onEquipFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byEquip: val.target?.value}});\r\n  }\r\n\r\n  const onHospFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byHospital: val.target?.value}});\r\n  }\r\n\r\n  const onAddressFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byAddress: val.target?.value}});\r\n  }\r\n\r\n  const onConfirmClose = async (result, context) => {\r\n    if(result){\r\n      const row = context;\r\n      const equipInfo = row.EquipName;\r\n      row.Disabled = !row.Disabled\r\n      await EquipWorker.DisableEquipInfo(usersState.token, equipInfo, row.Disabled);\r\n      allEquipsDispatch({ type: 'UPDATEALLEQUIPS', payload: row });\r\n    }\r\n    setOpenConfirm({Result: false});\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={visibleOnly}\r\n                    onChange={onVisibleOnly}\r\n                />\r\n              }\r\n              label=\"Только нескрытые\"\r\n            />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onEquipFilterChange} label=\"По комплексу\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onHospFilterChange} label=\"По ЛПУ\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onAddressFilterChange} label=\"По адресу\" variant=\"outlined\" />\r\n        {/* <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onFilter}>\r\n            Фильтровать\r\n        </Button> */}\r\n      </div>\r\n      <div className={classes.root}>\r\n        <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleRowClick} onSelect={handleSelect}></CommonTable>\r\n      </div>\r\n      <ConfirmDlg \r\n        open={openConfirm.Result} \r\n        сonfirmMessage={'Вы действительно хотите '+(openConfirm.Context?.Disabled ? 'открыть' : 'скрыть')+' комплекс?'}\r\n        onClose={onConfirmClose}\r\n        context={openConfirm.Context}\r\n        >          \r\n      </ConfirmDlg>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex,AdminTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {/* {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>} */}\r\n      {tabIndex === AdminTabIndex ? <AdminTab panel={tabPanelIndex}></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, EventsTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport {AdminRole} from '../../model/constants'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nconst drawerWidth = 240;\r\nconst menuItems = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий']; // , 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n        const token = usersState.token;\r\n          if(!token)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers(token);\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.token]);\r\n\r\n  const token = usersState.token;\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;  \r\n  }\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips(token);\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n    else if(index === EventsTabIndex)\r\n    {\r\n      const endDate = new Date();\r\n      const allEvents = await EquipWorker.SearchEquip(token, 'Events', '', getUSFullDate(endDate), getUSFullDate(endDate));\r\n      eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const mainMenu = isAdmin ? [...menuItems, 'Администрирование'] : menuItems; // , ];\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\n\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em',\r\n    backgroundColor: theme.palette.background.default,  \r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const parseJwt = (token) => {\r\n      try {\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n    //const data = await AdminWorker.Login({login: 'sa', password: 'medtex', email});\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    \r\n    if(data && data.Token){\r\n      const claims = parseJwt(data.Token);      \r\n      usersDispatch({ type: 'SETUSER', payload: {Token: data.Token, Claims: claims, Surname: data.Surname} }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { UseDarkTheme } from './model/constants'\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: !UseDarkTheme ? \"light\" : \"dark\",\r\n  }\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (  \r\n    <>  \r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={AuthComponent} />\r\n          <Route path=\"/auth\" component={AuthComponent}/>\r\n          <Route path=\"/info\" component={MainComponent} />    \r\n          {/* <MainComponent></MainComponent> */}\r\n        </div>    \r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { EventsContextProvider} from './context/events-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\nimport { CommunicationContextProvider} from './context/communication-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AppContextProvider>\r\n        <UsersContextProvider>\r\n          <AllEquipsContextProvider>\r\n            <CurrentEquipContextProvider>\r\n              <SystemVolatileContextProvider>\r\n                <EventsContextProvider>\r\n                  <CommunicationContextProvider>\r\n                    <BrowserRouter>\r\n                      <App />\r\n                    </BrowserRouter>\r\n                  </CommunicationContextProvider>\r\n                </EventsContextProvider>\r\n              </SystemVolatileContextProvider>\r\n            </CurrentEquipContextProvider>\r\n          </AllEquipsContextProvider>\r\n        </UsersContextProvider>\r\n      </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}