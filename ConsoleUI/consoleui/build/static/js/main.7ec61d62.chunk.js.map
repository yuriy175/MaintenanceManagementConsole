{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/events-context.js","context/currentEquip-context.js","context/users-context.js","context/systemVolatile-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/SofwareTable.js","components/timelines/TimeLineItem.js","components/timelines/CommonTimeLine.js","components/tabs/summaryPanels/SummaryHistoryTabPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tabs/HistoryTab.js","workers/adminWorker.js","components/tables/adminTables/UserTable.js","components/tabs/AdminTab.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","UserRole","Roles","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","EventsContext","currentEvents","EventsContextProvider","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","CurrentEquipContextProvider","UsersContext","currentUser","users","UsersContextProvider","SystemVolatileContext","currentVolatile","SystemVolatileContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","isToday","today","setHours","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","GetAllEquips","GetAllTables","GetTableContent","tableType","tableName","UpdateDBInfo","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","systemVolatileDispatch","EquipWorker","sysInfo","swInfo","Atlas","undefined","Software","useStyles","makeStyles","theme","appBar","width","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","button","marginRight","MainToolBar","classes","appState","appDispatch","allEquipsState","eventsDispatch","usersState","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","getEvents","allEvents","useEffect","Surname","allEquipsDispatch","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","message","close","onmessage","JSON","parse","topic","Topic","startsWith","Events","equip","topicParts","split","length","getEquipFromTopic","replace","values","Data","useWebSocket","selectedTab","selectedTabPanel","onTabIndexChange","newValue","allTables","onUpdateDBInfo","isDBInfoStateUpdating","DBInfoStateUpdating","AppBar","position","className","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","id","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","aria-label","Tab","label","Button","onClick","align","useCardsStyles","root","marginBottom","bullet","transform","title","pos","descr","textAlign","fontWeight","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","buttonColor","disabled","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","heatStatus","HeatStatus","Mas","Kv","Workstation","Focus","PedalPressed","Code","Description","SystemCard","volatile","logicalDisks","LogicalDisks","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","EquipImageCard","equipClasses","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","dbStates","DBStates","atlas","Array","isArray","atlasUser","Atlas_User","osInfo","OsInfos","sql","SqlServices","databases","SqlDatabases","OsCaption","OsVersion","SqlName","SqlVersion","CurrentUser","Status","AtlasVersion","XilibsVersion","ComplexType","Language","Multimonitor","User","Role","AtlasErrorDescriptions","ImagesCard","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","container","minHeight","maxHeight","errorCell","background","wordWrap","simpleCell","boldCell","checkBox","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","selectedRow","onRowClick","ev","row","isRowBold","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","TableBody","slice","selected","EquipName","hover","role","tabIndex","format","hasErrors","Checkbox","onSelect","formatArray","v","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","overflowY","content","flexGrow","palette","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","index","c","flat","Object","keys","k","key","toLowerCase","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","atlasTableMenu","List","ListItem","ListItemText","primary","Active","paper","inline","isImportant","collapse","TimeLineItem","time","details","alignItems","ListItemAvatar","Avatar","alt","src","Fragment","secondary","Collapse","in","timeout","unmountOnExit","CommonTimeLine","showImportantOnly","DateTime","Title","Details","Divider","commonSpacing","textField","SummaryHistoryTabPanel","eventsState","curDate","setDate","setStartDate","setEndDate","importantOnly","setImportantOnly","events","onSearch","TextField","defaultValue","InputLabelProps","shrink","FormControlLabel","control","SummaryTab","tabPanelIndex","MapTab","EventsTab","AdminController","GetAllUsers","UpdateUser","user","headers","Login","login","UserTable","usersDispatch","handleSelect","Disabled","newRow","AdminWorker","flexDirection","justifyContent","AdminTab","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","options","selectedIndex","onAdd","required","InputLabel","htmlFor","NativeSelect","EquipTable","readonly","EquipsTab","MainInfoComponent","drawerWidth","mainMenu","drawer","flexShrink","drawerPaper","toolbar","mixins","padding","MainComponent","CssBaseline","Drawer","anchor","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","alert","borderRadius","AuthComponent","redirect","setRedirect","showError","setShowError","to","onLogin","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ec61d62.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\n// export const HistoryTabIndex = 4;\r\nexport const AdminTabIndex = 4; //5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;\r\nexport const SummaryHistoryTabPanelIndex = 2;","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const EventsContext = createContext();\r\n\r\nconst initialState = {\r\n  currentEvents: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEVENTS': {\r\n      return {\r\n        ...state,\r\n        currentEvents: action.payload\r\n      };\r\n    }   \r\n    case 'ADDEVENT': {\r\n      return {\r\n        ...state,\r\n        currentEvents: [...action.payload, ...state.currentEvents]\r\n      };\r\n    }   \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const EventsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <EventsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EventsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      return {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => new Date(value).toLocaleString();\r\n\r\nexport const isToday = (value) =>\r\n{\r\n    const today = new Date();\r\n    const date = new Date(value);\r\n    return date.setHours(0,0,0,0) == today.setHours(0,0,0,0);\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\n/*export async function GetStudyList(filter) {\r\n    return await HandlerWrapper('StudyList', async () => {\r\n        const response = await axios.post(JournalServiceAddress + JournalController +\r\n            '/StudyList',\r\n            JSON.stringify(filter),\r\n            GetJsonHeader());\r\n        return response.data;\r\n    });\r\n};*/\r\n\r\nexport async function GetConnectedEquips() {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips() {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + '/GetAllEquips');\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateDBInfo(activatedEquipInfo) {\r\n    return await HandlerWrapper('UpdateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/UpdateDBInfo?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n\r\n    //const equipInfo = row.EquipName;\r\n    systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    // new software & system info come very slowly\r\n    const sysInfo = await EquipWorker.GetPermanentData(\"SystemInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSYSTEM', payload: sysInfo[0] }); \r\n\r\n    const swInfo = await EquipWorker.GetPermanentData(\"Software\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSOFTWARE', \r\n      payload: {\r\n        Atlas: swInfo.Atlas ? swInfo.Atlas[0] : undefined, \r\n        Software: swInfo.Software ? swInfo.Software[0] : undefined} }); \r\n\r\n    await EquipWorker.Activate(equipInfo, currEquipState.equipInfo);\r\n  };\r\n\r\n  return setEquipInfo;\r\n}\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 500,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n  },\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    getEvents(equipInfo);\r\n  }\r\n\r\n  const getEvents = async (equipInfo) =>\r\n  {\r\n    const endDate = new Date();\r\n    const allEvents = await EquipWorker.SearchEquip('Events', equipInfo, getUSFullDate(endDate), getUSFullDate(endDate));\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryDBTabPanelIndex === newValue && equipInfo){\r\n      const allTables = await EquipWorker.GetAllTables(equipInfo);\r\n      currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n    }\r\n    else if(SummaryHistoryTabPanelIndex === newValue){        \r\n      getEvents(equipInfo);\r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  const onUpdateDBInfo = async () =>{\r\n    if(equipInfo){\r\n      const res = await EquipWorker.UpdateDBInfo(equipInfo);\r\n    }\r\n  }\r\n\r\n  const isDBInfoStateUpdating = currEquipState.remoteaccess?.DBInfoStateUpdating;\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" />\r\n              {selectedTab === SummaryTabIndex?\r\n                  <Tab label=\"БД\" id= \"dbTabPanel\" /> : <></>\r\n              }\r\n              {selectedTab === SummaryTabIndex?\r\n                  <Tab label=\"История\" id= \"histTabPanel\" /> : <></>\r\n              }\r\n            </Tabs>\r\n            {selectedTab === SummaryTabIndex?\r\n                <Button variant=\"contained\" \r\n                    color={isDBInfoStateUpdating ? \"secondary\" : \"primary\"}\r\n                    className={classes.button} \r\n                    onClick={onUpdateDBInfo} \r\n                >\r\n                  {isDBInfoStateUpdating ? 'Обновляется' : 'Обновить'}\r\n                </Button> : <></>\r\n            }\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { EventsContext } from '../context/events-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        createSocket();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips();\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n                else if(topic.startsWith('Events'))\r\n                {\r\n                    eventsDispatch({ type: 'ADDEVENT', payload: data.Events }); \r\n                    return;\r\n                }  \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    // currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    // width:'10%',\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n    fontWeight: 'bold',\r\n    marginRight: '0.5em',\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  const heatStatus = generator?.State?.HeatStatus;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={heatStatus === 2 ? \"Высокий\" : heatStatus === 3 ? \"Критический\" : heatStatus === 1 ? \"Норм\" : \"\"}\r\n          rightColor={heatStatus === 2 ? \"yellow\" : heatStatus === 3 ? \"red\" :  heatStatus === 1 ? \"green\" : \"gray\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ generator?.State?.PedalPressed === 1 ? \"Графия\" : generator?.State?.PedalPressed === 2 ? \"Скопия\" : \"Не нажата\"} \r\n          rightColor={generator?.State?.PedalPressed === 1 || generator?.State?.PedalPressed === 2? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = system?.LogicalDisks; // HDD\r\n  const physicalDisks = system?.HardDrives;  // PhysicalDisks\r\n  const lans = system?.Lans; // Network\r\n  const vgas = system?.VideoAdapters; // VGA\r\n  const monitors = system?.Monitors; // Monitor\r\n  const printers = system?.Printers; //Printer\r\n  const processor = system?.Motherboards ? system?.Motherboards[0] : undefined; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad ? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n  },\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={equipClasses.media}\r\n        image=\"./girl.jpg\"\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"#f50057\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(equipInfo, detailedXilib, verboseXilib);\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const volatile = props.volatile;\r\n  const dbStates = volatile?.DBStates;\r\n  const software = props.software?.Software;\r\n  const atlas = Array.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;\r\n  const atlasUser = software?.Atlas?.Atlas_User;\r\n  const osInfo = Array.isArray(software?.OsInfos) ? software?.OsInfos[0] : null; \r\n  const sql = Array.isArray(software?.SqlServices) ? software?.SqlServices[0] : null; \r\n  const databases = dbStates ?? software?.SqlDatabases;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={osInfo?.OsCaption} value={osInfo?.OsVersion}></CardRow>\r\n        <CardRow descr={sql?.SqlName} value={sql?.SqlVersion}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={osInfo?.CurrentUser}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {volatile?.ErrorDescriptions?.length ? \r\n          volatile.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {databases?.length ? \r\n          databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.Name} value={i.Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Версия\" value={atlas?.AtlasVersion}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={atlas?.XilibsVersion}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={atlas?.ComplexType}></CardRow>\r\n        <CardRow descr=\"Язык\" value={atlas?.Language}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard equipInfo={currEquipState.equipInfo}></EquipImageCard>\r\n        <SystemCard system={currEquipState.system} volatile={systemVolatileState.currentVolatile}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <ImagesCard images={currEquipState.images}></ImagesCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo} remoteaccess={currEquipState.remoteaccess}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software} volatile={systemVolatileState.currentVolatile}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: 40,\r\n    maxHeight: '100%',\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  },\r\n  boldCell:{\r\n    wordWrap: 'break-word',\r\n    fontWeight: 'bolder',\r\n    fontSize: 'larger',\r\n  },  \r\n  checkBox:{\r\n    color: 'green',\r\n  },  \r\n});\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const rows = props.rows ? props.rows : [];\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n  const isRowBold = props.isRowBold;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={row.code} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    const checked = column.format ? column.format(row) : value;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={\r\n                          column.hasErrors && column.hasErrors(value) ? \r\n                            classes.errorCell : \r\n                            isRowBold && isRowBold(row) ?\r\n                              classes.boldCell :\r\n                              classes.simpleCell\r\n                        }\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            style ={{\r\n                              color: checked ? 'green' : 'gray', //\"#00e676\",\r\n                            }}\r\n                            checked={checked}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts' }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"285px\",\r\n    backgroundColor: 'white',\r\n    maxHeight: \"900px\",\r\n    overflowY: 'auto',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  const getColumn = (key) => { \r\n    if(key.toLowerCase() === 'active')\r\n    {\r\n      return { \r\n        id: key, label: key, minWidth: 100, maxWidth: 100,\r\n        format: (value) => value ? '+' : '-'\r\n      }\r\n    }\r\n\r\n    return { id: key, label: key, minWidth: 100, maxWidth: 300 }\r\n  }\r\n\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(currEquipState.equipInfo, type, text);\r\n    let values = []\r\n    if(Array.isArray(content)){\r\n      values = content.map(c => JSON.parse(c)).flat(1);\r\n    }\r\n    else{\r\n      values = content? JSON.parse(content) : null;\r\n    }\r\n    \r\n    setTableContent(values);\r\n  };\r\n\r\n  const isRowBold = (row) =>\r\n  {\r\n    return row.Active\r\n  }\r\n  \r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = currEquipState.allDBTables?.Hospital;\r\n  const systemTableMenu = currEquipState.allDBTables?.System;\r\n  const softwareTableMenu = currEquipState.allDBTables?.Software;\r\n  const atlasTableMenu = currEquipState.allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.listPanel}>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <main className={classes.content}>\r\n        <>  \r\n                   <CommonTable \r\n                     columns={columns} \r\n                     rows={rows} \r\n                     isRowBold = {isRowBold}></CommonTable>\r\n        </>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  equip: {\r\n    width: '10%',\r\n  },\r\n  isImportant:{\r\n    backgroundColor: 'red',\r\n  },\r\n  collapse:{\r\n    textAlign:'left',\r\n  }\r\n}));\r\n\r\nexport default function TimeLineItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isImportant = props.isImportant;\r\n  const equipName = props.equipName;\r\n  const time = props.time;\r\n  const title = props.title;\r\n  const text = props.text;\r\n  const details = props.details;\r\n  return (\r\n    <div>\r\n        <ListItem alignItems=\"flex-start\" button onClick={handleClick}>\r\n            <ListItemAvatar >\r\n                <Avatar className={isImportant ? classes.isImportant : null} alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            {/* <ListItemText className={classes.equip} primary={equipName} secondary={time} /> */}\r\n            <ListItemText\r\n                primary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {equipName}\r\n                        </Typography>\r\n                        {\" \" + time}\r\n                    </React.Fragment>\r\n                }\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        {\" - \" + text}\r\n                    </React.Fragment>\r\n                }                \r\n            />\r\n            {details && open ? <ExpandLess /> : \r\n              details && !open ? <ExpandMore /> : <></>}\r\n        </ListItem>\r\n        \r\n            {details ? \r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.collapse}>\r\n                {details}\r\n              </Collapse>: <></>}\r\n        </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {parseLocalString, isToday} from '../../utilities/utils'\r\nimport TimeLineItem from './TimeLineItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommonTimeLine(props) {\r\n  const classes = useStyles();\r\n\r\n  const equipName = props.equipName;\r\n  const showImportantOnly = props.showImportantOnly;\r\n  const  rows = props.rows;\r\n  return (\r\n    <List className={classes.root}>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Сегодня\r\n        </Typography>\r\n        { rows?.filter(i => isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n        <Divider />\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Все время\r\n        </Typography>\r\n        { rows?.filter(i => !isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n    </List>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {SearchPeriod} from '../../../model/constants'\r\nimport {getUSFullDate} from '../../../utilities/utils'\r\n\r\nimport SystemTable from '../../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../../tables/historyTables/DetectorTable'\r\nimport StandTable from '../../tables/historyTables/StandTable'\r\nimport DicomTable from '../../tables/historyTables/DicomTable'\r\nimport CommonTimeLine from '../../timelines/CommonTimeLine'\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { EventsContext } from '../../../context/events-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryHistoryTabPanel(props) {\r\n  console.log(\"render SummaryHistoryTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  // const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  \r\n  // const [events, setEvents] = useState([]);  \r\n  const [importantOnly, setImportantOnly] = useState(false);  \r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  // const handleNameChange = (ev) => {\r\n  //   setEquipName(ev.target.value);\r\n  // };  \r\n\r\n  const equipName = props.equipName; // currEquipState?.equipInfo;\r\n  const events = eventsState.currentEvents;\r\n\r\n  const onSearch = async () => {    \r\n    const allEvents = await EquipWorker.SearchEquip('Events', equipName, startDate, endDate);\r\n    // setEvents(data);\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  };\r\n\r\n  const onSelect = async (event) => {\r\n    setImportantOnly(!importantOnly);\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n                checked={importantOnly}\r\n                onChange={onSelect}\r\n            />\r\n          }\r\n          label=\"Только важные\"\r\n        />\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n      <CommonTimeLine equipName={equipName} rows={events} showImportantOnly={importantOnly}></CommonTimeLine>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  const equipName = currEquipState?.equipInfo;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel equipName={equipName}/> : <></>}\r\n      {tabPanelIndex === SummaryHistoryTabPanelIndex ? <SummaryHistoryTabPanel equipName={equipName}/> : <></>}      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n  const equipName = '';\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <SummaryHistoryTabPanel equipName={equipName}/>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers() {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst columns = [\r\n  { id: 'Login', label: 'Логин', minWidth: 170 },\r\n  { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n  { id: 'Email', label: 'Почта', minWidth: 100 },\r\n  { id: 'Role', label: 'Роль', minWidth: 100 },\r\n  { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n];\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const data = await AdminWorker.UpdateUser(newRow);\r\n    const users = await AdminWorker.GetAllUsers();\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { Roles, UserRole } from '../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\n// flex-direction: row;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    const data = await AdminWorker.UpdateUser({id: '', login, password, surname, email, role, disabled: false});\r\n    const users = await AdminWorker.GetAllUsers();\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" defaultValue={''} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl className={classes.text}>\r\n              <InputLabel htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onAdd}>\r\n              Добавить\r\n        </Button>\r\n      </div>\r\n      <UserTable data={usersState.users}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\n\r\nexport default function EquipTable(props) {\r\n  console.log(\"render EquipTable\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50,\r\n      format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170 },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100 },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100 },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex,AdminTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {/* {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>} */}\r\n      {tabIndex === AdminTabIndex ? <AdminTab></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, EventsTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nconst drawerWidth = 240;\r\nconst mainMenu = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий', 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n          if(usersState.users)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers();\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.users]);\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips();\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n    else if(index === EventsTabIndex)\r\n    {\r\n      const endDate = new Date();\r\n      const allEvents = await EquipWorker.SearchEquip('Events', '', getUSFullDate(endDate), getUSFullDate(endDate));\r\n      eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    if(data){\r\n      usersDispatch({ type: 'SETUSER', payload: data }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path=\"/\" component={AuthComponent} />\r\n      <Route path=\"/auth\" component={AuthComponent}/>\r\n      <Route path=\"/info\" component={MainComponent} />    \r\n      {/* <MainComponent></MainComponent> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { EventsContextProvider} from './context/events-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContextProvider>\r\n      <UsersContextProvider>\r\n        <AllEquipsContextProvider>\r\n          <CurrentEquipContextProvider>\r\n            <SystemVolatileContextProvider>\r\n              <EventsContextProvider>\r\n                <BrowserRouter>\r\n                  <App />\r\n                </BrowserRouter>\r\n              </EventsContextProvider>\r\n            </SystemVolatileContextProvider>\r\n          </CurrentEquipContextProvider>\r\n        </AllEquipsContextProvider>\r\n      </UsersContextProvider>\r\n    </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}