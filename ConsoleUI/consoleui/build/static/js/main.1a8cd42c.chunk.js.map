{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/events-context.js","context/currentEquip-context.js","context/users-context.js","context/communication-context.js","context/controlState-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","workers/adminWorker.js","workers/controlWorker.js","context/systemVolatile-context.js","components/tabs/adminPanels/AdminLogTabPanel.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/SofwareTable.js","components/timelines/TimeLineItem.js","components/timelines/CommonTimeLine.js","components/tabs/summaryPanels/SummaryHistoryTabPanel.js","components/tabs/summaryPanels/subpanels/SummaryChatSubpanel.js","components/tabs/summaryPanels/SummaryChatPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tabs/HistoryTab.js","components/tables/adminTables/UserTable.js","components/tabs/adminPanels/AdminMainTabPanel.js","components/tabs/AdminTab.js","components/dialogs/ConfirmDlg.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","components/cards/controlCards/ServerStateCard.js","components/cards/controlCards/UnasweredEquipsCard.js","components/tabs/controlPanels/ControlMainTabPanel.js","components/tabs/controlPanels/ControlDiagnosticTabPanel.js","components/tabs/ControlTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","ComplexTypeImages","UseDarkTheme","UserRole","AdminRole","Roles","CommonChat","ChatMessageType","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","oldRow","EquipName","Disabled","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","EventsContext","currentEvents","EventsContextProvider","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","lastSeen","undefined","locationInfo","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","SystemInfo","SoftwareInfo","LastSeen","LocationInfo","CurrentEquipContextProvider","UsersContext","currentUser","token","users","Token","Claims","Surname","UsersContextProvider","CommunicationContext","logs","notes","commonNotes","oldNote","n","ID","length","Message","CommunicationContextProvider","ControlStateContext","serverState","diagnostic","ControlStateContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","GetTokenHeader","headers","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","isToday","today","setHours","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","GetAllEquips","withDisabled","GetAllTables","GetTableContent","tableType","tableName","UpdateDBInfo","DisableEquipInfo","disabled","GetCommunications","SendNewNote","msgType","id","message","encodeURIComponent","DeleteNote","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","allEquipsState","usersState","EquipWorker","fullInfo","AdminController","GetAllUsers","header","UpdateUser","user","Login","login","GetServerLogs","ControlController","GetServerState","GetServerMetrics","SystemVolatileContext","currentVolatile","SimpleMsgType","AtlasStatus","SystemVolatileContextProvider","useStyles","makeStyles","theme","root","width","borderColor","AdminLogTabPanel","classes","communicationState","TextareaAutosize","className","rowsMax","aria-label","defaultValue","appBar","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","button","marginRight","MainToolBar","appState","appDispatch","allEquipsDispatch","eventsDispatch","communicationDispatch","controlDispatch","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","getEvents","allEvents","getLogs","AdminWorker","getDiagnostics","ControlWorker","metrics","getChats","useEffect","systemVolatileDispatch","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","close","onmessage","JSON","parse","topic","Topic","startsWith","Events","note","Data","equip","topicParts","split","getEquipFromTopic","replace","values","useWebSocket","selectedTab","selectedTabPanel","onTabIndexChange","newValue","allTables","onUpdateDBInfo","isDBInfoStateUpdating","DBInfoStateUpdating","isValidSummaryTab","AppBar","position","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","Tab","label","Button","onClick","align","useCardsStyles","marginBottom","bullet","transform","title","pos","descr","textAlign","fontWeight","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","buttonColor","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","DetectorFrameRate","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","generatorState","heatStatus","HeatStatus","mas","Post_mas","Mas","kv","Post_kv","Kv","ma","Post_ma","Ma","ms","Post_time","Ms","scopyKv","Scopy_post_mas","Scopy_mas","Scopy_post_kv","Scopy_kv","scopyMa","Scopy_post_ma","Scopy_ma","scopyMs","Scopy_post_ms","Scopy_ms","Workstation","Focus","PedalPressed","Points_mode","Scopy_mode","Code","Description","SystemCard","volatile","logicalDisks","LogicalDisks","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","dimmed","EquipImageCard","equipClasses","pathKey","Object","keys","find","k","some","v","isConnected","hospital","address","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","dbStates","DBStates","Software","atlas","Array","isArray","Atlas","atlasUser","AtlasUser","osInfo","OsInfos","sql","SqlServices","databases","SqlDatabases","atlasRunning","AtlasRunning","OsCaption","OsVersion","SqlName","SqlVersion","CurrentUser","Status","AtlasVersion","XilibsVersion","ComplexType","Language","Multimonitor","User","Role","AtlasErrorDescriptions","ImagesCard","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","isEquipConnected","HospitalName","HospitalAddress","container","minHeight","maxHeight","errorCell","background","wordWrap","simpleCell","boldCell","checkBox","descendingComparator","b","orderBy","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","defaultSort","setOrderBy","defaultSortOrder","order","setOrder","rows","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","columns","selectedRow","onRowClick","ev","row","isRowBold","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","sortDirection","sortable","TableSortLabel","active","direction","property","TableBody","slice","rowInd","selected","hover","role","tabIndex","format","hasErrors","Checkbox","onSelect","formatArray","commonSpacing","onEdit","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","palette","paper","overflowY","content","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","c","flat","key","toLowerCase","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","atlasTableMenu","Box","List","ListItem","ListItemText","primary","Active","inline","isImportant","collapse","outerLabel","ordinaryLabel","borderRadius","importantLabel","innerLabel","alignItems","justifyContent","TimeLineItem","handleClick","time","details","Fragment","secondary","Collapse","in","timeout","unmountOnExit","CommonTimeLine","showImportantOnly","todayRows","DateTime","todayCount","othersCount","isOffline","Title","Details","Divider","textField","SummaryHistoryTabPanel","eventsState","curDate","setDate","setStartDate","setEndDate","importantOnly","setImportantOnly","byTitle","byDescr","filters","setFilters","events","onSearch","onTitleFilterChange","onDescrFilterChange","TextField","InputLabelProps","shrink","FormControlLabel","control","fullRow","gridTemplateColumns","noteTitle","notesArea","overflowWrap","SummaryChatSubpanel","newNote","setNewNote","anchorEl","setAnchorEl","openEditMenu","Boolean","handleMenuClick","currentTarget","handleMenuClose","onNoteChange","onSendNote","handleDeleteNote","noteId","onDeleteNote","canSubmit","handleEditNote","multiline","IconButton","aria-controls","aria-haspopup","Menu","keepMounted","s","divider","SummaryChatPanel","noteType","chatType","onSendNoteNote","onSendChatNote","newnote","chats","orientation","flexItem","SummaryTab","tabPanelIndex","MapTab","EventsTab","UserTable","usersDispatch","handleSelect","newRow","flexDirection","AdminMainTabPanel","userId","setUserId","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","options","selectedIndex","onSubmit","onCancel","Email","required","InputLabel","htmlFor","NativeSelect","AdminTab","ConfirmDlg","handleClose","aria-describedby","DialogContent","DialogContentText","сonfirmMessage","DialogActions","context","autoFocus","EquipTable","visibleOnly","setVisibleOnly","activeOnly","setActiveOnly","byEquip","byHospital","byAddress","Result","openConfirm","setOpenConfirm","push","IsActive","forEach","handleRowClick","getAttribute","Context","onVisibleOnly","onActiveOnly","onEquipFilterChange","onHospFilterChange","onAddressFilterChange","onConfirmClose","result","readonly","EquipsTab","ServerStateCard","DBUsedSize","DiskTotalSpace","DiskUsedSpace","UnasweredEquipsCard","hdd","ControlMainTabPanel","controlState","ControlDiagnosticTabPanel","ControlTab","MainInfoComponent","drawerWidth","menuItems","drawer","flexShrink","drawerPaper","toolbar","mixins","flexGrow","padding","MainComponent","to","mainMenu","CssBaseline","Drawer","anchor","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","onMouseDown","preventDefault","alert","AuthComponent","redirect","setRedirect","showError","setShowError","onLogin","parseJwt","atob","claims","createMuiTheme","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a8cd42c.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\nexport const ComplexTypeImages = window.ComplexTypeImages;\r\nexport const UseDarkTheme = window.UseDarkTheme;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\n// export const HistoryTabIndex = 4;\r\nexport const ControlTabIndex = 4; //5;\r\nexport const AdminTabIndex = 5; //5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;\r\nexport const SummaryHistoryTabPanelIndex = 2;\r\nexport const SummaryChatTabPanelIndex = 3;\r\n\r\nexport const AdminLogTabPanelIndex = 4;\r\n\r\nexport const ControlDiagnosticTabPanelIndex = 5;\r\n\r\nexport const CommonChat = 'CommonChat';\r\nexport const ChatMessageType = 'Chat';","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'UPDATEALLEQUIPS': {\r\n      const oldRow = state.selectedEquips.filter(p => p.EquipName === action.payload.EquipName)\r\n      if(oldRow){\r\n        oldRow.Disabled = action.payload.Disabled\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        allEquips: [...state.allEquips]\r\n      };\r\n    }    \r\n    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const EventsContext = createContext();\r\n\r\nconst initialState = {\r\n  currentEvents: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEVENTS': {\r\n      return {\r\n        ...state,\r\n        currentEvents: action.payload\r\n      };\r\n    }   \r\n    case 'ADDEVENT': {\r\n      return {\r\n        ...state,\r\n        currentEvents: [...action.payload, ...state.currentEvents]\r\n      };\r\n    }   \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const EventsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <EventsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EventsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n  lastSeen:undefined,\r\n  locationInfo: '',\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n\r\n    case 'SETLASTSEEN': {\r\n      return {\r\n        ...state,\r\n        lastSeen: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    case 'SETFULLINFO': {\r\n      return {\r\n        ...state,\r\n        system: action.payload?.SystemInfo[0],\r\n        software: action.payload?.SoftwareInfo[0],\r\n        lastSeen: action.payload?.LastSeen,\r\n        locationInfo: action.payload?.LocationInfo\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  token: null,\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        token: action.payload.Token,\r\n        currentUser: {...action.payload.Claims, Surname: action.payload.Surname}\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CommunicationContext = createContext();\r\n\r\nconst initialState = {\r\n  logs: [],\r\n  notes: [],\r\n  commonNotes: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETLOGS': {\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n    } \r\n    case 'SETCHATS': {\r\n      return {\r\n        ...state,\r\n        notes: action.payload\r\n      };\r\n    } \r\n    case 'SETCOMMONCHAT': {\r\n      return {\r\n        ...state,\r\n        commonNotes: action.payload\r\n      };\r\n    } \r\n    case 'ADDNOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes]\r\n      };\r\n    }\r\n    case 'ADDCOMMONNOTE': {\r\n      return {\r\n        ...state,\r\n        commonNotes: [action.payload, ...state.commonNotes]\r\n      };\r\n    }\r\n    case 'CHANGENOTE': {\r\n      const oldNote = state.notes.filter(n => n.ID === action.payload.ID);\r\n      if(oldNote?.length > 0){\r\n        oldNote[0].Message = action.payload.Message;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes]\r\n      };\r\n    }\r\n    case 'DELETENOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes.filter(n => n.ID !== action.payload)]\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CommunicationContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CommunicationContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CommunicationContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const ControlStateContext = createContext();\r\n\r\nconst initialState = {\r\n  serverState: {},\r\n  diagnostic: {}\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETSRVSTATE': {\r\n      return {\r\n        ...state,\r\n        serverState: action.payload\r\n      };\r\n    }\r\n    case 'SETDIAGNOSTIC': {\r\n      return {\r\n        ...state,\r\n        diagnostic: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const ControlStateContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <ControlStateContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </ControlStateContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}\r\n\r\nexport function GetTokenHeader(token) {\r\n    return  {\r\n        headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + token  // передача токена в заголовке\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => value ? new Date(value).toLocaleString() : value;\r\n\r\nexport const isToday = (value) =>\r\n{\r\n    const today = new Date();\r\n    const date = new Date(value);\r\n    return date.setHours(0,0,0,0) == today.setHours(0,0,0,0);\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\nexport async function GetConnectedEquips(token) {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(token, activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(token, currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(token, currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(token, activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips(token, withDisabled = false) {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(\r\n            EquipsServiceAddress + EquipsController + '/GetAllEquips?withDisabled='+withDisabled,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(token, equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(token, equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateDBInfo(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('UpdateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/UpdateDBInfo?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DisableEquipInfo(token, equipName, disabled) {\r\n    return await HandlerWrapper('DisableEquipInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DisableEquipInfo?equipName=' + equipName+\r\n            '&disabled=' + disabled,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetCommunications(token, equipName) {\r\n    return await HandlerWrapper('GetCommunicationsData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetCommunicationsData?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendNewNote(token, equipName, msgType, id, message) {\r\n    return await HandlerWrapper('SendNewNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendNewNote?equipName=' + equipName+\r\n            '&msgType=' + encodeURIComponent(msgType)+\r\n            '&id=' + id, // +\r\n            // '&message=' + encodeURIComponent(message),\r\n            message, // null, \r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DeleteNote(token, equipName, msgType, id) {\r\n    return await HandlerWrapper('DeleteNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DeleteNote?equipName=' + equipName+\r\n            '&msgType=' + encodeURIComponent(msgType)+\r\n            '&id=' + id,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\n//import { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  // const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n    const token = usersState.token;\r\n    const connectedEquip = allEquipsState.connectedEquips?.includes(equipInfo)\r\n\r\n    // systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    const fullInfo = await EquipWorker.GetPermanentData(token, \"FullInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETFULLINFO', payload: fullInfo }); \r\n    // if(connectedEquip){\r\n      await EquipWorker.Activate(token, equipInfo, currEquipState.equipInfo);\r\n    // }\r\n  };\r\n\r\n  return setEquipInfo;\r\n}\r\n","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers(token) {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user, token) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetServerLogs(token) {\r\n    return await HandlerWrapper('GetServerLogs', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetServerLogs';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst ControlController = '/equips';\r\n\r\nexport async function GetServerState(token) {\r\n    return await HandlerWrapper('GetServerState', async () => {\r\n        const path = EquipsServiceAddress + ControlController + '/GetServerState';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetServerMetrics(token) {\r\n    return await HandlerWrapper('GetServerState', async () => {\r\n        const path = EquipsServiceAddress + ControlController + '/metrics';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      const newState = {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n\r\n      if(action.payload.SimpleMsgType === \"AtlasExited\") {\r\n        newState.currentVolatile.AtlasStatus = null;\r\n      }\r\n      \r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n}));\r\n\r\nexport default function AdminLogTabPanel(props) {\r\n  console.log(\"render AdminLogTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n\r\n  return (\r\n    <div>\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={communicationState.logs}\r\n      />\r\n        {/* <Typography variant=\"body2\" gutterBottom>\r\n            {communicationState.logs}\r\n        </Typography> */}\r\n    </div>\r\n  );\r\n}\r\n  ","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex,\r\n  CommonChat,\r\n  AdminTabIndex, AdminLogTabPanelIndex,\r\n  ControlTabIndex, ControlDiagnosticTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport { ControlStateContext } from '../../context/controlState-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as ControlWorker from '../../workers/controlWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\nimport {getUSFullDate} from '../../utilities/utils'\r\nimport AdminLogTabPanel from '../tabs/adminPanels/AdminLogTabPanel';\r\n  \r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 640,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n  },\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext);  \r\n  \r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const token = usersState.token;\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    getEvents(equipInfo);\r\n  }\r\n\r\n  const getEvents = async (equipInfo) =>\r\n  {\r\n    const endDate = new Date();\r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipInfo, getUSFullDate(endDate), getUSFullDate(endDate));\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  }\r\n\r\n  const getLogs = async () =>\r\n  {\r\n    const logs = await AdminWorker.GetServerLogs(token);\r\n    communicationDispatch({ type: 'SETLOGS', payload: logs }); \r\n  }\r\n\r\n  const getDiagnostics = async () =>\r\n  {\r\n    const metrics = await ControlWorker.GetServerMetrics(token);\r\n    controlDispatch({ type: 'SETDIAGNOSTIC', payload: metrics }); \r\n  }\r\n\r\n  const getChats = async (equipInfo) =>\r\n  {\r\n    const notes = await EquipWorker.GetCommunications(token, equipInfo);\r\n    communicationDispatch({ \r\n      type: 'SETCHATS', \r\n      payload: notes \r\n    }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryTabIndex === selectedTab && SummaryDBTabPanelIndex === newValue && equipInfo){\r\n      const allTables = await EquipWorker.GetAllTables(token, equipInfo);\r\n      currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryHistoryTabPanelIndex === newValue){        \r\n      getEvents(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryChatTabPanelIndex === newValue){        \r\n      getChats(equipInfo);\r\n    }\r\n    else if(AdminTabIndex === selectedTab && AdminLogTabPanelIndex === newValue){        \r\n      getLogs();\r\n    }\r\n    else if(ControlTabIndex === selectedTab && ControlDiagnosticTabPanelIndex === newValue){        \r\n      getDiagnostics();\r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  const onUpdateDBInfo = async () =>{\r\n    if(equipInfo){\r\n      const res = await EquipWorker.UpdateDBInfo(token, equipInfo);\r\n    }\r\n  }\r\n\r\n  const isDBInfoStateUpdating = currEquipState.remoteaccess?.DBInfoStateUpdating;\r\n  const isValidSummaryTab = selectedTab === SummaryTabIndex && equipInfo;\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" />\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"БД\" id= \"dbTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"История\" id= \"histTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"Коммуникации\" id= \"chatTabPanel\" /> : <></>\r\n              }\r\n              {selectedTab === AdminTabIndex?\r\n                  <Tab label=\"Логи\" id= \"logsTabPanel\" /> : <></>              \r\n              }            \r\n              {selectedTab === ControlTabIndex?\r\n                  <Tab label=\"Диагностика\" id= \"diagnosticTabPanel\" /> : <></>              \r\n              }           \r\n            </Tabs>\r\n            {selectedTab === SummaryTabIndex?\r\n                <Button variant=\"contained\" \r\n                    color={isDBInfoStateUpdating ? \"secondary\" : \"primary\"}\r\n                    className={classes.button} \r\n                    onClick={onUpdateDBInfo} \r\n                >\r\n                  {isDBInfoStateUpdating ? 'Обновляется' : 'Обновить'}\r\n                </Button> : <></>\r\n            }\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport { EventsContext } from '../context/events-context';\r\nimport { CommunicationContext } from '../context/communication-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [usersState, usersDispatch] = useContext(UsersContext);\r\n    const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!usersState.token){\r\n           return;\r\n        }\r\n\r\n        createSocket();\r\n    }, [usersState.token]);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips(usersState.token);\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n                else if(topic.startsWith('Events'))\r\n                {\r\n                    eventsDispatch({ type: 'ADDEVENT', payload: data.Events }); \r\n                    return;\r\n                }  \r\n                else if(topic.startsWith('CommonChat'))\r\n                {\r\n                    const note = data? JSON.parse(data.Data) : null;\r\n                    communicationDispatch({ type: 'ADDCOMMONNOTE', payload: note}); \r\n                    return;\r\n                }                  \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    // currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/chat'))\r\n                {\r\n                    const note = data? JSON.parse(data.Data) : null;\r\n                    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n                }\r\n               \r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    // width:'10%',\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n    fontWeight: 'bold',\r\n    marginRight: '0.5em',\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>            \r\n            <CardRow descr=\"Скорость\" value={i.DetectorFrameRate ? i?.DetectorFrameRate + ' к/сек' : ''}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  const generatorState = generator?.State;\r\n  const heatStatus = generator?.State?.HeatStatus;\r\n  \r\n  const mas = generatorState?.Post_mas || generatorState?.Mas;\r\n  const kv = generatorState?.Post_kv || generatorState?.Kv;\r\n  const ma = generatorState?.Post_ma || generatorState?.Ma;\r\n  const ms = generatorState?.Post_time || generatorState?.Ms;\r\n\r\n  const scopyMas = generatorState?.Scopy_post_mas || generatorState?.Scopy_mas;\r\n  const scopyKv = generatorState?.Scopy_post_kv || generatorState?.Scopy_kv;\r\n  const scopyMa = generatorState?.Scopy_post_ma || generatorState?.Scopy_ma;\r\n  const scopyMs = generatorState?.Scopy_post_ms || generatorState?.Scopy_ms;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={heatStatus === 2 ? \"Высокий\" : heatStatus === 3 ? \"Критический\" : heatStatus === 1 ? \"Норм\" : \"\"}\r\n          rightColor={heatStatus === 2 ? \"yellow\" : heatStatus === 3 ? \"red\" :  heatStatus === 1 ? \"green\" : \"gray\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ \r\n            generatorState?.PedalPressed === 1 ? \"Графия\" : \r\n            generatorState?.PedalPressed === 2 || generatorState?.PedalPressed === 4 ? \"Скопия\" : \r\n            generatorState?.PedalPressed === 3 ? \"Графия на копии\" :\r\n            \"Не нажата\"} \r\n          rightColor={generatorState?.PedalPressed >= 1 && generatorState?.PedalPressed <= 4? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Техника\" value={\r\n          generatorState?.Points_mode === 2 ? \"2х точка\" : generatorState?.Points_mode === 3 ? \"3х точка\" : \"\"\r\n        }></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Графия\r\n        </Typography>        \r\n        <CardRow descr=\"Количество электричества\" value={mas ? mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={kv ? kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Сила тока\" value={ma ? ma + ' мА' : ''}></CardRow>\r\n        <CardRow descr=\"Время\" value={ms ? ms + ' мс' : ''}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Скопия\r\n        </Typography>\r\n        <CardRow descr=\"Режим\" value={generatorState?.Scopy_mode}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={scopyKv ? scopyKv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Сила тока\" value={scopyMa ? scopyMa + ' мА' : ''}></CardRow>\r\n        <CardRow descr=\"Время\" value={scopyMs ? scopyMs + ' мс' : ''}></CardRow>\r\n\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = system?.LogicalDisks; // HDD\r\n  const physicalDisks = system?.HardDrives;  // PhysicalDisks\r\n  const lans = system?.Lans; // Network\r\n  const vgas = system?.VideoAdapters; // VGA\r\n  const monitors = system?.Monitors; // Monitor\r\n  const printers = system?.Printers; //Printer\r\n  const processor = system?.Motherboards ? system?.Motherboards[0] : undefined; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad || volatile?.Processor?.CPULoad === 0? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport {parseLocalString} from '../../utilities/utils'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\nimport { ComplexTypeImages } from '../../model/constants'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n  },\r\n  dimmed:{\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n    filter: 'brightness(40%)',\r\n  }\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const pathKey = Object.keys(ComplexTypeImages).find(k => \r\n    {\r\n      return ComplexTypeImages[k].some(v => equipInfo?.startsWith(v));\r\n    });\r\n  \r\n  const isConnected = props.isConnected;\r\n  const lastSeen = props.lastSeen;\r\n  const hospital = props.hospital;\r\n  const address = props.address;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={isConnected ? equipClasses.media : equipClasses.dimmed}\r\n        // image=\"./girl.jpg\"\r\n        image={\"./\" + pathKey}\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n          {hospital? <div>ЛПУ: {hospital} </div>: <></>}\r\n          {address? <div>Адрес: {address} </div>: <></>}\r\n          {lastSeen? <div>Посл. сообщение: {parseLocalString(lastSeen)} </div>: <></>}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"#f50057\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const token = props.token;\r\n  const onRunTeamViewer = async () => {\r\n    if(equipInfo)\r\n    {\r\n      const res = await EquipWorker.RunTeamViewer(token, equipInfo);\r\n    }\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    if(equipInfo)\r\n    {\r\n      const res = await EquipWorker.RunTaskManager(token, equipInfo);\r\n    }\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    if(equipInfo)\r\n    {\r\n      const res = await EquipWorker.SendAtlasLogs(token, equipInfo);\r\n    }\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    if(equipInfo)\r\n    {\r\n      const res = await EquipWorker.XilibLogsOn(token, equipInfo, detailedXilib, verboseXilib);\r\n    }\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const volatile = props.volatile;\r\n  const dbStates = volatile?.DBStates;\r\n  const software = props.software?.Software;\r\n  const atlas = Array.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;\r\n  const atlasUser = volatile?.AtlasUser || volatile?.AtlasStatus?.AtlasUser;\r\n  const osInfo = Array.isArray(software?.OsInfos) ? software?.OsInfos[0] : null; \r\n  const sql = Array.isArray(software?.SqlServices) ? software?.SqlServices[0] : null; \r\n  const databases = dbStates ?? software?.SqlDatabases;\r\n  const atlasRunning = volatile?.AtlasStatus?.AtlasRunning;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={osInfo?.OsCaption} value={osInfo?.OsVersion}></CardRow>\r\n        <CardRow descr={sql?.SqlName} value={sql?.SqlVersion}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={osInfo?.CurrentUser}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {volatile?.ErrorDescriptions?.length ? \r\n          volatile.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {databases?.length ? \r\n          databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.Name} value={i.Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n              value={atlasRunning? \"запущен\" : \"не запущен\"}\r\n              rightColor={!atlasRunning? \"red\" : \"green\"}></CardRow>\r\n        <CardRow descr=\"Версия\" value={atlas?.AtlasVersion}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={atlas?.XilibsVersion}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={atlas?.ComplexType}></CardRow>\r\n        <CardRow descr=\"Язык\" value={atlas?.Language}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const isEquipConnected = allEquipsState.connectedEquips?.includes(equipInfo);\r\n  const lastSeen = currEquipState.lastSeen;\r\n  const hospital = currEquipState.locationInfo?.HospitalName;\r\n  const address = currEquipState.locationInfo?.HospitalAddress;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard \r\n          equipInfo={equipInfo} \r\n          isConnected={isEquipConnected} \r\n          lastSeen={lastSeen}\r\n          hospital={hospital}\r\n          address={address}\r\n        ></EquipImageCard>\r\n        <SystemCard \r\n          system={currEquipState.system} \r\n          volatile={isEquipConnected ? systemVolatileState.currentVolatile : null}></SystemCard>\r\n        \r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={isEquipConnected ? currEquipState.organAuto : null}></OrganAutoCard>\r\n        <ImagesCard images={isEquipConnected ? currEquipState.images : null}></ImagesCard>\r\n        <GeneratorCard generator={isEquipConnected ? currEquipState.generator : null}></GeneratorCard>\r\n        <DetectorCard detectors={isEquipConnected ? currEquipState.detectors : null} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={isEquipConnected ? currEquipState.stand : null}></StandCard>\r\n        <DosimeterCard dosimeter={isEquipConnected ? currEquipState.dosimeter : null}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={isEquipConnected ? currEquipState.equipInfo : null} remoteaccess={currEquipState.remoteaccess} token={usersState.token}></RemoteAccessCard>\r\n        <DicomCard dicom={isEquipConnected ? currEquipState.dicom : null}></DicomCard>\r\n        <SoftwareCard \r\n          software={isEquipConnected ? currEquipState.software : null} \r\n          volatile={isEquipConnected ? systemVolatileState.currentVolatile : null}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: 40,\r\n    maxHeight: '100%',\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  },\r\n  boldCell:{\r\n    wordWrap: 'break-word',\r\n    fontWeight: 'bolder',\r\n    fontSize: 'larger',\r\n  },  \r\n  checkBox:{\r\n    color: 'green',\r\n  },  \r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\r\n  const [orderBy, setOrderBy] = React.useState(props.defaultSort ?? '');\r\n  const [order, setOrder] = React.useState( props.defaultSortOrder ?? 'asc');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRequestSort = (property) => () => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const rows = stableSort(props.rows ? props.rows : [], getComparator(order, orderBy)) ?? [];\r\n  if(rows.length < page * rowsPerPage){\r\n    setPage(0);\r\n  }\r\n\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n  const isRowBold = props.isRowBold;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                // <TableCell\r\n                //   key={column.id}\r\n                //   align={column.align}\r\n                //   style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                // >\r\n                //   {column.label}\r\n                // </TableCell>\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                  sortDirection={orderBy === column.id ? order : false}\r\n                >\r\n                  {!column.sortable? \r\n                    column.label:\r\n                    <TableSortLabel\r\n                      active={orderBy === column.id}\r\n                      direction={orderBy === column.id ? order : 'asc'}\r\n                      onClick={handleRequestSort(column.id)}\r\n                    >\r\n                      {column.label}                    \r\n                    </TableSortLabel>\r\n                  }\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowInd) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={rowInd} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    const checked = column.format ? column.format(row) : value;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={\r\n                          column.hasErrors && column.hasErrors(value) ? \r\n                            classes.errorCell : \r\n                            isRowBold && isRowBold(row) ?\r\n                              classes.boldCell :\r\n                              classes.simpleCell\r\n                        }\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            style ={{\r\n                              color: checked ? 'green' : 'gray', //\"#00e676\",\r\n                            }}\r\n                            checked={checked}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts', 'data-column' : column.id }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : \r\n\r\n                            column.button ? \r\n                              <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={() => column.onEdit(row)}>\r\n                                    {column.label}\r\n                              </Button> :\r\n                              value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"table\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"285px\",\r\n    // backgroundColor: 'white',\r\n    backgroundColor: theme.palette.background.paper,\r\n    // maxHeight: \"900px\",\r\n    overflowY: 'auto',\r\n    display: 'table-cell',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    // flexGrow: 1,\r\n    width: '100%', \r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n    display: 'table-cell',\r\n  },\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  const getColumn = (key) => { \r\n    if(key.toLowerCase() === 'active')\r\n    {\r\n      return { \r\n        id: key, label: key, minWidth: 100, maxWidth: 100,\r\n        format: (value) => value ? '+' : '-'\r\n      }\r\n    }\r\n\r\n    return { id: key, label: key, minWidth: 100, maxWidth: 300 }\r\n  }\r\n\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(usersState.token, currEquipState.equipInfo, type, text);\r\n    let values = []\r\n    if(Array.isArray(content)){\r\n      values = content.map(c => JSON.parse(c)).flat(1);\r\n    }\r\n    else{\r\n      values = content? JSON.parse(content) : null;\r\n    }\r\n    \r\n    setTableContent(values);\r\n  };\r\n\r\n  const isRowBold = (row) =>\r\n  {\r\n    return row.Active\r\n  }\r\n  \r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = currEquipState.allDBTables?.Hospital;\r\n  const systemTableMenu = currEquipState.allDBTables?.System;\r\n  const softwareTableMenu = currEquipState.allDBTables?.Software;\r\n  const atlasTableMenu = currEquipState.allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <div className={classes.listPanel}> */}\r\n      {/* <Box className={classes.listPanel} height={'calc(100% - 500px)'}> */}\r\n      <Box className={classes.listPanel} height={'100%'}>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      {/* </div> */}\r\n      </Box>\r\n      <Box className={classes.content} height=\"100%\">\r\n        {/* <main className={classes.content} >\r\n          <>   */}\r\n                    <CommonTable \r\n                      columns={columns} \r\n                      rows={rows} \r\n                      isRowBold = {isRowBold}></CommonTable>\r\n          {/* </>\r\n        </main> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  equip: {\r\n    width: '10%',\r\n  },\r\n  isImportant:{\r\n    backgroundColor: 'red',\r\n  },\r\n  collapse:{\r\n    textAlign:'left',\r\n  },\r\n  outerLabel:{\r\n    marginTop:'6px',\r\n    marginRight:'12px',\r\n  },\r\n  ordinaryLabel:{\r\n    borderRadius:'50%',\r\n    backgroundColor: 'gray',\r\n  },\r\n  importantLabel:{    \r\n    borderRadius:'50%',\r\n    backgroundColor: 'red',\r\n  },\r\n  innerLabel:{\r\n    width:'40px',\r\n    height:'40px',\r\n    display: 'flex',\r\n    fontSize: '1.25rem',\r\n    color: '#303030',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function TimeLineItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isImportant = props.isImportant;\r\n  const equipName = props.equipName;\r\n  const time = props.time;\r\n  const title = props.title;\r\n  const text = props.text;\r\n  const details = props.details;\r\n  return (\r\n    <div>\r\n        <ListItem alignItems=\"flex-start\" button>\r\n            <div className={classes.outerLabel}>\r\n              <div className={isImportant ? classes.importantLabel : classes.ordinaryLabel}>\r\n                <div className={classes.innerLabel}>\r\n                  {isImportant ? '!' : 'O'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <ListItemAvatar >\r\n                <Avatar className={isImportant ? classes.isImportant : null} alt={isImportant ? \"!\" : \"\"} src={'xz'}/>\r\n            </ListItemAvatar>  */}\r\n            <ListItemText\r\n                primary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {equipName}\r\n                        </Typography>\r\n                        {\" \" + time}\r\n                    </React.Fragment>\r\n                }\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        {\" - \" + text}\r\n                    </React.Fragment>\r\n                }                \r\n            />\r\n            {details && open ? <ExpandLess onClick={handleClick}/> : \r\n              details && !open ? <ExpandMore onClick={handleClick}/> : <></>}\r\n        </ListItem>\r\n        \r\n            {details ? \r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.collapse}>\r\n                {details}\r\n              </Collapse>: <></>}\r\n        </div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {parseLocalString, isToday} from '../../utilities/utils'\r\nimport TimeLineItem from './TimeLineItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommonTimeLine(props) {\r\n  const classes = useStyles();\r\n  \r\n  const equipName = props.equipName;\r\n  const showImportantOnly = props.showImportantOnly;\r\n  const  rows = props.rows;\r\n  const todayRows = rows?.filter(i => isToday(i.DateTime)) ?? [];\r\n  const todayCount = todayRows.length;\r\n  const othersCount = rows.length - todayCount;\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Сегодня ({todayCount} сообщений)\r\n        </Typography>\r\n        { todayRows?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            const isOffline=i.Type?.includes('Offline');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title + (isOffline ? '(Offline)' : '')} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n        <Divider />\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Все время ({othersCount} сообщений)\r\n        </Typography>\r\n        { rows?.filter(i => !isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n    </List>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {SearchPeriod} from '../../../model/constants'\r\nimport {getUSFullDate} from '../../../utilities/utils'\r\n\r\nimport SystemTable from '../../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../../tables/historyTables/DetectorTable'\r\nimport StandTable from '../../tables/historyTables/StandTable'\r\nimport DicomTable from '../../tables/historyTables/DicomTable'\r\nimport CommonTimeLine from '../../timelines/CommonTimeLine'\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { EventsContext } from '../../../context/events-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryHistoryTabPanel(props) {\r\n  console.log(\"render SummaryHistoryTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  // const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  \r\n  // const [events, setEvents] = useState([]);  \r\n  const [importantOnly, setImportantOnly] = useState(false);  \r\n  const [filters, setFilters] = useState({\r\n    byTitle: '',\r\n    byDescr: ''\r\n  });\r\n\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  // const handleNameChange = (ev) => {\r\n  //   setEquipName(ev.target.value);\r\n  // };  \r\n\r\n  const equipName = props.equipName; // currEquipState?.equipInfo;\r\n  let events = eventsState.currentEvents;\r\n  const token = usersState.token;\r\n\r\n  const onSearch = async () => {    \r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipName, startDate, endDate);\r\n    // setEvents(data);\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  };\r\n\r\n  const onSelect = async (event) => {\r\n    setImportantOnly(!importantOnly);\r\n  };\r\n\r\n  \r\n  if(filters.byTitle){\r\n    events = events?.filter(p => p.Description.includes(filters.byTitle));\r\n  }\r\n\r\n  if(filters.byDescr){\r\n    events = events?.filter(p => p.Details.includes(filters.byDescr));\r\n  }\r\n\r\n  const onTitleFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byTitle: val.target?.value}});\r\n  }\r\n\r\n  const onDescrFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byDescr: val.target?.value}});\r\n  }\r\n\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n                checked={importantOnly}\r\n                onChange={onSelect}\r\n            />\r\n          }\r\n          label=\"Только важные\"\r\n        />\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onTitleFilterChange} label=\"По названию\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onDescrFilterChange} label=\"По описанию\" variant=\"outlined\" />\r\n        \r\n    </div>\r\n    <div className={classes.root}>        \r\n      <CommonTimeLine equipName={equipName} rows={events} showImportantOnly={importantOnly}></CommonTimeLine>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport {parseLocalString} from '../../../../utilities/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"calc(50% - 6px)\",\r\n    marginRight: \"12px\",\r\n  },\r\n  fullRow:{\r\n    display: 'grid',\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    gridTemplateColumns: '40px 1fr',\r\n    // maxWidth: 'calc(50% - 46px)',\r\n    // overflowWrap: 'break-word',\r\n  },\r\n  textField:{\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n\r\n  } ,\r\n  noteTitle:{\r\n    width: '100%',\r\n    fontWeight: 'bolder',\r\n    textAlign: 'left',\r\n    display: 'inline',\r\n  },\r\n  notesArea:{\r\n    // maxWidth: 'calc(50% - 0px)',\r\n    overflowWrap: 'break-word',\r\n    alignSelf: 'center',\r\n    width: '100%',\r\n    margin: '0',\r\n    display: 'block',\r\n  }\r\n}));\r\n\r\nexport default function SummaryChatSubpanel(props) {\r\n  console.log(\"render SummaryChatSubpanel\");\r\n\r\n  const classes = useStyles();\r\n  const [newNote, setNewNote] = useState({id: '', note:''});\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openEditMenu = Boolean(anchorEl);\r\n\r\n  const handleMenuClick = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onNoteChange = async (val)  => {\r\n    setNewNote({id: newNote.id, note: val});\r\n  }\r\n\r\n  const type = props.type;\r\n  const onSendNote = async () => {\r\n    if(props.onSendNote){\r\n      await props.onSendNote(type, newNote);\r\n      setNewNote({id: '', note:''});\r\n    }\r\n  };\r\n\r\n  const handleDeleteNote = async (ev) => {\r\n    const noteId = anchorEl.id;\r\n    if(props.onDeleteNote){\r\n      await props.onDeleteNote(type, noteId);\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  const title = props.title;\r\n  const notes = props.notes;\r\n  const currentUser = props.currentUser;\r\n  const canSubmit = !!newNote?.note;\r\n  const handleEditNote = async (ev) => {\r\n    const noteId = anchorEl.id; // ev.target.id;\r\n    const note = notes.find(n => n.ID == noteId);\r\n    if(note){\r\n      setNewNote({id: noteId, note:note.Message});\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  return (\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">{title}</Typography>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newNote?.note}\r\n          onChange={e => onNoteChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSendNote} disabled={!canSubmit}>\r\n              Послать\r\n        </Button>\r\n        <div className={classes.fullRow}>\r\n          {notes?.length ?\r\n            notes.map((i, ind) => \r\n            {\r\n              const row = i;\r\n              return (\r\n              <>\r\n                <div key={ind.toString()}>\r\n                    {\r\n                      currentUser === i.User?\r\n                            <>\r\n                              <IconButton\r\n                                id={i.ID}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenuClick}\r\n                              >\r\n                                <MoreVertIcon />\r\n                              </IconButton>\r\n                              <Menu\r\n                                id=\"long-menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={openEditMenu}\r\n                                onClose={handleMenuClose}\r\n                              >\r\n                                  <MenuItem onClick={handleEditNote}>Редактировать</MenuItem>\r\n                                  <MenuItem onClick={handleDeleteNote}>Удалить</MenuItem>\r\n                              </Menu>\r\n                            </>\r\n                            : <></>\r\n                    }\r\n                </div>\r\n                 <div className={classes.notesArea}>\r\n                    <Typography variant=\"body1\" align='left' color={currentUser === i.User? 'secondary' : 'primary'} className={classes.noteTitle}>\r\n                        {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n                     </Typography>\r\n                     {\r\n                       i.Message?.split(\"\\n\")?.map((s, ind) =>\r\n                       {\r\n                         return ind === 0? s : <Typography>{s}</Typography>\r\n                       })\r\n                     }\r\n                 </div> \r\n               </>\r\n              )})\r\n              :\r\n              <></>\r\n          }\r\n        </div>\r\n        {/* <div className={classes.notesArea}>\r\n          {notes?.length ?\r\n            notes.map((i, ind) => (\r\n              <div key={ind.toString()} className={classes.fullRow}>\r\n                {currentUser === i.User?\r\n                    <IconButton\r\n                      aria-label=\"more\"\r\n                      aria-controls=\"long-menu\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMenuClick}\r\n                    >\r\n                      <MoreVertIcon />\r\n                    </IconButton>\r\n                  : <></>\r\n                }\r\n                <Typography variant=\"body1\" align='left' color={currentUser === i.User? 'secondary' : 'primary'} className={classes.noteTitle}>\r\n                    {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n                </Typography>\r\n                {\r\n                  i.Message?.split(\"\\n\")?.map((s, ind) =>\r\n                  {\r\n                    return ind === 0? s : <Typography>{s}</Typography>\r\n                  })\r\n                }\r\n              </div>\r\n              ))\r\n              :\r\n              <></>\r\n          }\r\n        </div>  */}\r\n      </div>\r\n      );\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport {ChatMessageType} from '../../../model/constants'\r\n\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\nimport SummaryChatSubpanel from './subpanels/SummaryChatSubpanel'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  divider: {\r\n    marginRight: \"12px\"\r\n  },\r\n}));\r\n\r\nexport default function SummaryChatPanel(props) {\r\n  console.log(\"render SummaryChatPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const equipName = props.equipName;\r\n  const token = usersState.token;\r\n\r\n  const noteType = 'Note';\r\n  const chatType = ChatMessageType;\r\n\r\n  const onSendNote = async (type, note) => {\r\n    if(type === noteType){\r\n      await onSendNoteNote(note);\r\n    }\r\n    else if(type === chatType){\r\n      await onSendChatNote(note);\r\n    }\r\n  };\r\n\r\n  const onDeleteNote = async (type, noteId) => {\r\n    await EquipWorker.DeleteNote(token, equipName, chatType, noteId); \r\n    communicationDispatch({ type: 'DELETENOTE', payload: noteId}); \r\n  };\r\n\r\n  const onSendNoteNote = async (newnote) => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, noteType, newnote.id, newnote.note);    \r\n    communicationDispatch({ type: newnote.id? 'CHANGENOTE' : 'ADDNOTE', payload: note}); \r\n  };\r\n\r\n  const onSendChatNote = async (newnote) => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, chatType, newnote.id, newnote.note);  \r\n    if(newnote.id){\r\n      communicationDispatch({ type: 'CHANGENOTE', payload: note}); \r\n    } \r\n  };\r\n\r\n  const notes = communicationState.notes?.filter(n => n.Type === noteType);\r\n  const chats = communicationState.notes?.filter(n => n.Type === chatType);\r\n  return (\r\n    <div className={classes.root}>     \r\n      <SummaryChatSubpanel\r\n        type={noteType}\r\n        title='Заметки'\r\n        notes={notes}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n      <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\r\n      <SummaryChatSubpanel\r\n        type={chatType}\r\n        title='Чат'\r\n        notes={chats}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n    </div>\r\n  );\r\n}\r\n  ","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\nimport SummaryChatPanel from './summaryPanels/SummaryChatPanel'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  const equipName = currEquipState?.equipInfo;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel equipName={equipName}/> : <></>}\r\n      {tabPanelIndex === SummaryHistoryTabPanelIndex ? <SummaryHistoryTabPanel equipName={equipName}/> : <></>}      \r\n      {tabPanelIndex === SummaryChatTabPanelIndex ? <SummaryChatPanel equipName={equipName}/> : <></>}      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n  const equipName = '';\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <SummaryHistoryTabPanel equipName={equipName}/>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const token = usersState.token;\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(token, currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const columns = [\r\n    { id: 'Login', label: 'Логин', minWidth: 170, sortable: true },\r\n    { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n    { id: 'Email', label: 'Почта', minWidth: 100 },\r\n    { id: 'Role', label: 'Роль', minWidth: 100 },\r\n    { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n    { id: 'Edit', label: 'Редактировать', button: true, onEdit:props.onEdit, minWidth: 100 },\r\n  ];\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const token = usersState.token;\r\n    const data = await AdminWorker.UpdateUser(newRow, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport { Roles, UserRole } from '../../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AdminMainTabPanel(props) {\r\n  console.log(\"render AdminMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [userId, setUserId] = useState('');\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const token = usersState.token\r\n    const data = await AdminWorker.UpdateUser({id: userId, login, password, surname, email, role, disabled: false}, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n\r\n    onCancel();\r\n  };\r\n\r\n  const onEdit = async (user) => {\r\n    setUserId(user.ID);\r\n    setLogin(user.Login);\r\n    setPassword('');\r\n    setSurname(user.Surname);\r\n    setEmail(user.Email);\r\n    setRole(user.Role);\r\n  };\r\n\r\n  const onCancel = async () => {\r\n    setUserId('');\r\n    setLogin('');\r\n    setPassword('');\r\n    setSurname('');\r\n    setEmail('');\r\n    setRole(UserRole);\r\n  };\r\n\r\n  const canSubmit = login && surname && (userId ? true : password);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" value={login} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" value={password} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" value={surname} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" value={email} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl required={true} className={classes.text}>\r\n              <InputLabel required={true} htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSubmit} disabled={!canSubmit}>\r\n                Готово\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onCancel}>\r\n                Отменить\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <UserTable data={usersState.users} onEdit={onEdit}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MainTabPanelIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport AdminMainTabPanel from './adminPanels/AdminMainTabPanel'\r\nimport AdminLogTabPanel from './adminPanels/AdminLogTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <AdminMainTabPanel/> : <></>}\r\n      {tabPanelIndex === AdminLogTabPanelIndex ? <AdminLogTabPanel/> : <></>}     \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport default function ConfirmDlg(props){\r\n  const handleClose = () => {\r\n    props?.onClose(false);\r\n  };\r\n\r\n  const handleCloseOK = () => {\r\n    props?.onClose(true, props.context);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Подтверждение</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {props.сonfirmMessage}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCloseOK} autoFocus>\r\n          Да\r\n        </Button>\r\n        <Button onClick={handleClose} >\r\n          Нет\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {AdminRole} from '../../../model/constants'\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\nimport ConfirmDlg from '../../dialogs/ConfirmDlg'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n//export default function EquipTable(props) {\r\nconst EquipTable = React.memo((props) => {\r\n  console.log(\"render EquipTable\");\r\n  const classes = useStyles();\r\n\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n  const [visibleOnly, setVisibleOnly] = useState(true);  \r\n  const [activeOnly, setActiveOnly] = useState(false);  \r\n  const [filtrate, setFiltrate] = useState(false);  \r\n  const [filters, setFilters] = React.useState({\r\n    byEquip: '',\r\n    byHospital: '',\r\n    byAddress:''\r\n  });\r\n  const [openConfirm, setOpenConfirm] = React.useState({Result: false});\r\n\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50, sortable: true,\r\n      // format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170, sortable: true },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170,\r\n      format: (value) => parseLocalString(value)\r\n    },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100, sortable: true },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100, sortable: true },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    { id: 'LastSeen', label: 'Посл. сообщение', minWidth: 100, sortable: true,\r\n      //format: (value) => value ? parseLocalString(value) : \"\"\r\n    },\r\n    \r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n  if(isAdmin){\r\n    columns.push({ id: 'Disabled', label: 'Скрыт', checked: true, minWidth: 100,\r\n        format: (row) => row.Disabled\r\n      });\r\n  }\r\n\r\n  const onFilter = async ()  => {\r\n    setFiltrate(!filtrate);\r\n  }\r\n\r\n  let rows = props.data;\r\n  if(activeOnly) {\r\n    rows = rows?.filter(p => p.IsActive);\r\n  }\r\n\r\n  if(visibleOnly) {\r\n    rows = rows?.filter(p => !p.Disabled);\r\n  }\r\n  \r\n  if(filters.byEquip){\r\n    rows = rows?.filter(p => p.EquipName.includes(filters.byEquip));\r\n  }\r\n\r\n  if(filters.byHospital){\r\n    rows = rows?.filter(p => p.HospitalName.includes(filters.byHospital));\r\n  }\r\n\r\n  if(filters.byAddress){\r\n    rows = rows?.filter(p => p.HospitalAddress.includes(filters.byAddress));\r\n  }\r\n\r\n  rows.forEach((row) => \r\n  {\r\n    row.LastSeen = row.LastSeen ? parseLocalString(row.LastSeen) : \"\";\r\n  });\r\n  const handleRowClick = async (event, row) => {\r\n\r\n    var dataColumn = event.target.getAttribute(\"data-column\");\r\n\r\n    if(dataColumn === \"Disabled\")\r\n    {\r\n      return;\r\n    }\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  const handleSelect = async (event, row) => {\r\n    setOpenConfirm({Result: true, Context: row});\r\n    /* */\r\n  };\r\n\r\n  const onVisibleOnly = async (event) => {\r\n    const value = !visibleOnly;\r\n    setVisibleOnly(value);\r\n    const allEquips = await EquipWorker.GetAllEquips(usersState.token, visibleOnly);\r\n    allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips }); \r\n  };\r\n\r\n  const onActiveOnly = async (event) => {\r\n    const value = !activeOnly;\r\n    setActiveOnly(value);\r\n  };\r\n\r\n  const onEquipFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byEquip: val.target?.value}});\r\n  }\r\n\r\n  const onHospFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byHospital: val.target?.value}});\r\n  }\r\n\r\n  const onAddressFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byAddress: val.target?.value}});\r\n  }\r\n\r\n  const onConfirmClose = async (result, context) => {\r\n    if(result){\r\n      const row = context;\r\n      const equipInfo = row.EquipName;\r\n      row.Disabled = !row.Disabled\r\n      await EquipWorker.DisableEquipInfo(usersState.token, equipInfo, row.Disabled);\r\n      allEquipsDispatch({ type: 'UPDATEALLEQUIPS', payload: row });\r\n    }\r\n    setOpenConfirm({Result: false});\r\n  };\r\n\r\n  const equipInfo = props.equipInfo;\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={visibleOnly}\r\n                    onChange={onVisibleOnly}\r\n                />\r\n              }\r\n              label=\"Только нескрытые\"\r\n            />\r\n        <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={activeOnly}\r\n                    onChange={onActiveOnly}\r\n                />\r\n              }\r\n              label=\"Только активные\"\r\n            />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onEquipFilterChange} label=\"По комплексу\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onHospFilterChange} label=\"По ЛПУ\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onAddressFilterChange} label=\"По адресу\" variant=\"outlined\" />\r\n        {/* <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onFilter}>\r\n            Фильтровать\r\n        </Button> */}\r\n      </div>\r\n      <div className={classes.root}>\r\n        {/* <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleRowClick} onSelect={handleSelect}></CommonTable> */}\r\n        <CommonTable readonly defaultSort={'IsActive'} defaultSortOrder={'desc'} columns={columns} rows={rows} selectedRow={equipInfo} onRowClick={handleRowClick} onSelect={handleSelect}></CommonTable>\r\n      </div>\r\n      <ConfirmDlg \r\n        open={openConfirm.Result} \r\n        сonfirmMessage={'Вы действительно хотите '+(openConfirm.Context?.Disabled ? 'открыть' : 'скрыть')+' комплекс?'}\r\n        onClose={onConfirmClose}\r\n        context={openConfirm.Context}\r\n        >          \r\n      </ConfirmDlg>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EquipTable;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  \r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips} equipInfo={currEquipState.equipInfo}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from '../CommonCard'\r\nimport CardRow, {CardErrorRow} from '../CardRow'\r\n\r\nexport default function ServerStateCard(props) {\r\n  console.log(`! render ServerStateCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const state = props.serverState;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>       \r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сервер\r\n        </Typography> \r\n        <CardRow descr=\"Всего БД\" value={state?.DBUsedSize}></CardRow>\r\n        <CardRow descr=\"Всего диск\" value={state?.DiskTotalSpace}></CardRow>\r\n        <CardRow descr=\"Занято диск\" value={state?.DiskUsedSpace}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from '../CommonCard'\r\n\r\nexport default function UnasweredEquipsCard(props) {\r\n  console.log(`! render UnasweredEquipsCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const hdd = props.hdd;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>       \r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Неотвеченные комплексы\r\n        </Typography> \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {CommonChat, ChatMessageType} from '../../../model/constants'\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport { ControlStateContext } from '../../../context/controlState-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\n\r\nimport ServerStateCard from '../../cards/controlCards/ServerStateCard'\r\nimport UnasweredEquipsCard from '../../cards/controlCards/UnasweredEquipsCard'\r\n\r\nimport SummaryChatSubpanel from '../summaryPanels/subpanels/SummaryChatSubpanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function ControlMainTabPanel(props) {\r\n  console.log(\"render ControlMainTabPanel\");\r\n\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext);\r\n\r\n  const chatType = ChatMessageType;\r\n  const classes = useStyles();\r\n\r\n  const equipName = CommonChat;\r\n  const token = usersState.token;\r\n\r\n  const onSendNote = async (type, newnote) => {\r\n    if(type === chatType){\r\n      const note = await EquipWorker.SendNewNote(token, equipName, chatType, newnote.id, newnote.note);  \r\n      if(newnote.id){\r\n        communicationDispatch({ type: 'CHANGENOTE', payload: note}); \r\n      } \r\n    }\r\n  };\r\n\r\n  const onDeleteNote = async (type, noteId) => {\r\n    await EquipWorker.DeleteNote(token, equipName, chatType, noteId); \r\n    communicationDispatch({ type: 'DELETENOTE', payload: noteId}); \r\n  };\r\n\r\n  const chats = communicationState.commonNotes?.filter(n => n.Type === chatType);\r\n  const serverState = controlState.serverState;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <ServerStateCard serverState={serverState}></ServerStateCard>\r\n        <UnasweredEquipsCard></UnasweredEquipsCard>\r\n      </div>\r\n      <SummaryChatSubpanel\r\n        type={chatType}\r\n        title='Чат'\r\n        notes={chats}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { ControlStateContext } from '../../../context/controlState-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n}));\r\n\r\nexport default function ControlDiagnosticTabPanel(props) {\r\n  console.log(\"render ControlDiagnosticTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext); \r\n\r\n  return (\r\n    <div>\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={controlState.diagnostic}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n  ","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MainTabPanelIndex, ControlDiagnosticTabPanelIndex } from '../../model/constants';\r\n\r\nimport ControlMainTabPanel from './controlPanels/ControlMainTabPanel'\r\nimport ControlDiagnosticTabPanel from './controlPanels/ControlDiagnosticTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\n\r\nexport default function ControlTab(props) {\r\n  console.log(\"render ControlTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <ControlMainTabPanel/> : <></>}\r\n      {tabPanelIndex === ControlDiagnosticTabPanelIndex ? <ControlDiagnosticTabPanel/> : <></>}     \r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex,AdminTabIndex, MainTabPanelIndex,\r\n  ControlTabIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\nimport ControlTab from '../tabs/ControlTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {/* {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>} */}\r\n      {tabIndex === ControlTabIndex ? <ControlTab panel={tabPanelIndex}></ControlTab> : <></>} \r\n      {tabIndex === AdminTabIndex ? <AdminTab panel={tabPanelIndex}></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, EventsTabIndex, MainTabPanelIndex,\r\n  ControlTabIndex, CommonChat } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport {AdminRole} from '../../model/constants'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport { ControlStateContext} from '../../context/controlState-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as ControlWorker from '../../workers/controlWorker'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nconst drawerWidth = 240;\r\nconst menuItems = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий', 'Панель управления']; // , 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n    minWidth: '1300px',\r\n    // width: `calc(100% - ${drawerWidth}px)`,\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();  \r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n        const token = usersState.token;\r\n          if(!token)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers(token);\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.token]);\r\n\r\n  const token = usersState.token;\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;  \r\n  }\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips(token);\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n    else if(index === EventsTabIndex)\r\n    {\r\n      const endDate = new Date();\r\n      const allEvents = await EquipWorker.SearchEquip(token, 'Events', '', getUSFullDate(endDate), getUSFullDate(endDate));\r\n      eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n    }    \r\n    else if(index === ControlTabIndex){  \r\n      const state = await ControlWorker.GetServerState(token);\r\n      controlDispatch({ type: 'SETSRVSTATE', payload: state });  \r\n\r\n      const notes = await EquipWorker.GetCommunications(token, CommonChat);\r\n      communicationDispatch({ type: 'SETCOMMONCHAT', payload: notes });     \r\n    }\r\n  \r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const mainMenu = isAdmin ? [...menuItems, 'Администрирование'] : menuItems; // , ];\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\n\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em',\r\n    backgroundColor: theme.palette.background.default,  \r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const parseJwt = (token) => {\r\n      try {\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n    // const data = await AdminWorker.Login({login: 'se', password: '1', email});\r\n    // const data = await AdminWorker.Login({login: 'sa', password: 'medtex', email});\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    \r\n    if(data && data.Token){\r\n      const claims = parseJwt(data.Token);      \r\n      usersDispatch({ type: 'SETUSER', payload: {Token: data.Token, Claims: claims, Surname: data.Surname} }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { UseDarkTheme } from './model/constants'\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: !UseDarkTheme ? \"light\" : \"dark\",\r\n  }\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (  \r\n    <>  \r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={AuthComponent} />\r\n          <Route path=\"/auth\" component={AuthComponent}/>\r\n          <Route path=\"/info\" component={MainComponent} />    \r\n          {/* <MainComponent></MainComponent> */}\r\n        </div>    \r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { EventsContextProvider} from './context/events-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\nimport { CommunicationContextProvider} from './context/communication-context';\r\nimport { ControlStateContextProvider} from './context/controlState-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AppContextProvider>\r\n        <UsersContextProvider>\r\n          <AllEquipsContextProvider>\r\n            <CurrentEquipContextProvider>\r\n              <SystemVolatileContextProvider>\r\n                <EventsContextProvider>\r\n                  <CommunicationContextProvider>\r\n                    <ControlStateContextProvider>\r\n                      <BrowserRouter>\r\n                        <App />\r\n                      </BrowserRouter>\r\n                    </ControlStateContextProvider>\r\n                  </CommunicationContextProvider>\r\n                </EventsContextProvider>\r\n              </SystemVolatileContextProvider>\r\n            </CurrentEquipContextProvider>\r\n          </AllEquipsContextProvider>\r\n        </UsersContextProvider>\r\n      </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}