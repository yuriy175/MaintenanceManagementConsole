{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/currentEquip-context.js","context/users-context.js","context/systemVolatile-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/OrganAutoTable.js","components/tables/historyTables/GeneratorTable.js","components/tables/historyTables/StudiesTable.js","components/tables/historyTables/SofwareTable.js","components/tables/historyTables/DetectorTable.js","components/tables/historyTables/StandTable.js","components/tables/historyTables/DicomTable.js","components/tabs/HistoryTab.js","workers/adminWorker.js","components/tables/adminTables/UserTable.js","components/tabs/AdminTab.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","UserRole","Roles","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","CurrentEquipContextProvider","UsersContext","currentUser","users","UsersContextProvider","SystemVolatileContext","currentVolatile","SystemVolatileContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","GetAllEquips","GetAllTables","GetTableContent","tableType","tableName","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","systemVolatileDispatch","EquipWorker","sysInfo","swInfo","useStyles","makeStyles","theme","appBar","width","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","MainToolBar","classes","appState","appDispatch","allEquipsState","usersState","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","useEffect","Surname","allEquipsDispatch","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","message","close","onmessage","JSON","parse","topic","Topic","startsWith","equip","topicParts","split","length","getEquipFromTopic","replace","values","Data","useWebSocket","selectedTab","selectedTabPanel","onTabIndexChange","newValue","allTables","AppBar","position","className","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","id","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","aria-label","Tab","label","align","useCardsStyles","root","marginBottom","marginRight","bullet","transform","title","pos","descr","textAlign","fontWeight","button","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","Button","buttonColor","onClick","disabled","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","Mas","Kv","Workstation","HeatStatus","Focus","PedalPressed","undefined","Code","Description","SystemCard","volatile","logicalDisks","LogicalDisks","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","EquipImageCard","equipClasses","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","atlasUser","Atlas","Atlas_User","Sysinfo","OS","Version","MSSQL","SQL","User","Current_user","Databases","DB_name","DB_Status","Atlas_Version","XiLibs_Version","Complex_type","Multimonitor","Role","AtlasErrorDescriptions","ImagesCard","today","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","container","maxHeight","errorCell","background","wordWrap","simpleCell","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","selectedRow","onRowClick","ev","row","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","TableBody","slice","selected","EquipName","hover","role","tabIndex","hasErrors","Checkbox","format","onSelect","formatArray","v","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","content","flexGrow","palette","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","index","Object","keys","k","key","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","Software","atlasTableMenu","List","ListItem","ListItemText","primary","SummaryTab","tabPanelIndex","MapTab","EventsTab","columnsPermanent","columnsVolatile","SystemTable","volatileInfoRows","VolatileInfo","permanentInfo","PermanentInfo","hdds","HDD","Parameter","Value","DateTime","PhysicalDisks","MediaType","Size_Gb","Monitor","Device_Name","Width","Height","vga","VGA","Card_Name","Memory_Gb","Model","motherboard","Motherboard","memory","Memory_total_Gb","permanentInfoRows","concat","OrganAutoTable","GeneratorTable","StudiesTable","SofwareTable","dbs","os","sql","atlas","DetectorTable","StandTable","currentValue","DicomTable","commonSpacing","textField","HistoryTab","curDate","setDate","setStartDate","setEndDate","setEquipName","setCurrType","systemInfos","setSystemInfos","organAutos","setOrganAutos","generators","setGenerators","studies","setStudies","stands","setStands","setDetectors","setDosimeters","setSoftware","setDicom","handleTypeChange","options","selectedIndex","onSearch","alert","TextField","defaultValue","InputLabelProps","shrink","NativeSelect","AdminController","GetAllUsers","UpdateUser","user","headers","Login","login","UserTable","usersDispatch","handleSelect","Disabled","newRow","AdminWorker","flexDirection","justifyContent","alignItems","AdminTab","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","onAdd","required","InputLabel","htmlFor","EquipTable","readonly","EquipsTab","MainInfoComponent","drawerWidth","mainMenu","drawer","flexShrink","drawerPaper","toolbar","mixins","padding","MainComponent","CssBaseline","Drawer","paper","anchor","Divider","Title","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","borderRadius","AuthComponent","redirect","setRedirect","showError","setShowError","to","onLogin","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92c7749b.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\nexport const HistoryTabIndex = 4;\r\nexport const AdminTabIndex = 5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      return {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => new Date(value).toLocaleString();\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\n/*export async function GetStudyList(filter) {\r\n    return await HandlerWrapper('StudyList', async () => {\r\n        const response = await axios.post(JournalServiceAddress + JournalController +\r\n            '/StudyList',\r\n            JSON.stringify(filter),\r\n            GetJsonHeader());\r\n        return response.data;\r\n    });\r\n};*/\r\n\r\nexport async function GetConnectedEquips() {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips() {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + '/GetAllEquips');\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName);\r\n        return response.data;\r\n    });\r\n};","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n\r\n    //const equipInfo = row.EquipName;\r\n    systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    // new software & system info come very slowly\r\n    const sysInfo = await EquipWorker.GetPermanentData(\"SystemInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSYSTEM', payload: sysInfo }); \r\n\r\n    const swInfo = await EquipWorker.GetPermanentData(\"Software\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSOFTWARE', payload: swInfo }); \r\n\r\n    await EquipWorker.Activate(equipInfo, currEquipState.equipInfo);\r\n  };\r\n\r\n  return setEquipInfo;\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 340,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  }\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryDBTabPanelIndex === newValue && currEquipState.equipInfo){\r\n      const allTables = await EquipWorker.GetAllTables(currEquipState.equipInfo);\r\n      currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" />\r\n              <Tab label=\"БД\" id= \"dbTabPanel\" />\r\n            </Tabs>\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        createSocket();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips();\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                // else if(path.startsWith('/ARM/AllDBInfo'))\r\n                // {\r\n                //     try\r\n                //     {\r\n                //         const values = data? JSON.parse(data.Data) : null;\r\n                //         currEquipDispatch({ type: 'SETALLDB', payload: values }); \r\n                //     }\r\n                //     catch(e)\r\n                //     {\r\n                //         console.log(e);  \r\n                //     }                    \r\n                // }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    width:'10%',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={generator?.State?.HeatStatus === 2 ? \"Высокий\" : generator?.State?.HeatStatus === 3 ? \"Критический\" : \"Норм\"}\r\n          rightColor={generator?.State?.HeatStatus === 2 ? \"yellow\" : generator?.State?.HeatStatus === 3 ? \"red\" : \"green\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"Авто\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ generator?.State?.PedalPressed === 1 ? \"Графия\" : generator?.State?.PedalPressed === 2 ? \"Скопия\" : \"Не нажата\"} \r\n          rightColor={generator?.State?.PedalPressed === 1 || generator?.State?.PedalPressed === 2? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = system?.LogicalDisks; // HDD\r\n  const physicalDisks = system?.HardDrives;  // PhysicalDisks\r\n  const lans = system?.Lans; // Network\r\n  const vgas = system?.VideoAdapters; // VGA\r\n  const monitors = system?.Monitors; // Monitor\r\n  const printers = system?.Printers; //Printer\r\n  const processor = system?.Motherboards ? system?.Motherboards[0] : undefined; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad ? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n  },\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={equipClasses.media}\r\n        image=\"./girl.jpg\"\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(equipInfo, detailedXilib, verboseXilib);\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const software = props.software;\r\n  const atlasUser = software?.Atlas?.Atlas_User;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={software?.Sysinfo?.OS} value={software?.Sysinfo?.Version}></CardRow>\r\n        <CardRow descr={software?.MSSQL?.SQL} value={software?.MSSQL?.Version}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={software?.User?.Current_user}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.ErrorDescriptions?.length ? \r\n          software.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {software?.Databases?.length ? \r\n          software.Databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.DB_name} value={i.DB_Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Версия\" value={software?.Atlas?.Atlas_Version}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={software?.Atlas?.XiLibs_Version}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={software?.Atlas?.Complex_type}></CardRow>\r\n        <CardRow descr=\"Язык\" value={software?.Atlas?.Complex_type}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={software?.Atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard equipInfo={currEquipState.equipInfo}></EquipImageCard>\r\n        <SystemCard system={currEquipState.system} volatile={systemVolatileState.currentVolatile}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <ImagesCard images={currEquipState.images}></ImagesCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo} remoteaccess={currEquipState.remoteaccess}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  }\r\n});\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const rows = props.rows ? props.rows : [];\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={row.code} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={column.hasErrors && column.hasErrors(value) ? classes.errorCell : classes.simpleCell}\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            checked={column.format ? column.format(row) : value}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts' }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"240px\",\r\n    backgroundColor: 'white',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  const getColumn = (key) => { return { id: key, label: key, minWidth: 100, maxWidth: 300 }}\r\n\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(currEquipState.equipInfo, type, text);\r\n    const values = content? JSON.parse(content) : null;\r\n    setTableContent(values);\r\n  };\r\n\r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = currEquipState.allDBTables?.Hospital;\r\n  const systemTableMenu = currEquipState.allDBTables?.System;\r\n  const softwareTableMenu = currEquipState.allDBTables?.Software;\r\n  const atlasTableMenu = currEquipState.allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.listPanel}>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <main className={classes.content}>\r\n        <>  \r\n                   <CommonTable \r\n                     columns={columns} \r\n                     rows={rows} ></CommonTable>\r\n        </>\r\n      </main>\r\n    </div>\r\n  );\r\n  // return (\r\n  //   <div className={classes.root}>\r\n  //     {\r\n  //       allDBs ?\r\n  //         Object.entries(allDBs).map((tableType, ind) => (\r\n  //           <>\r\n  //           <Typography variant=\"h5\" component=\"h2\">\r\n  //             {tableType[0]}\r\n  //           </Typography>\r\n  //           {\r\n  //             Object.entries(tableType[1]).map((table, ind) => (\r\n  //               <>\r\n  //                 <Typography variant=\"h6\" component=\"h2\">\r\n  //                   {table[0]}\r\n  //                 </Typography>\r\n  //                 <CommonTable key={ind.toString()} \r\n  //                   columns={table[1].length === 0 ? [] : Object.keys(table[1][0]).map(k => getColumn(k))} \r\n  //                   rows={table[1].length === 0 ? [] : table[1]} ></CommonTable>\r\n  //               </>\r\n  //             ))\r\n  //           }\r\n  //           </>\r\n  //           ))  : \r\n  //         <></>    \r\n  //     }\r\n  //   </div>\r\n  // );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel/> : <></>}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'Name', label: 'Название', minWidth: 100 },\r\n  { id: 'Projection', label: 'Проекция', minWidth: 100 },\r\n  { id: 'Direction', label: 'Направление', minWidth: 100 },\r\n  { id: 'AgeId', label: 'Возр. группа', minWidth: 100 },\r\n  { id: 'Constitution', label: 'Телосложение', minWidth: 100 },  \r\n];\r\n\r\nexport default function OrganAutoTable(props) {\r\n  console.log(\"render OrganAutoTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100,\r\n    format: (value) => parseLocalString(value)\r\n  },\r\n  { id: 'Data', label: 'Данные', minWidth: 100, maxWidth: 800,\r\n    hasErrors: (value) => value?.includes('ErrorDescriptions')\r\n  },\r\n  // { id: 'State', label: 'Состояние', minWidth: 100 },  \r\n  // { id: 'Workstation', label: 'Раб. место', minWidth: 100 },\r\n  // { id: 'HeatStatus', label: 'Нагрев', minWidth: 100 },\r\n  // { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n  //   formatArray: (values) =>\r\n  //   {\r\n  //     if(!values || !values.length) {\r\n  //       return values ?? [];\r\n  //     }\r\n  //     //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n  //     return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n  //   },\r\n  //   hasErrors: (values) =>\r\n  //   {\r\n  //     if(!values || !values.length) {\r\n  //       return false;\r\n  //     }\r\n\r\n  //     return true;\r\n  //   }\r\n  // },\r\n  // { id: 'Mas', label: 'Ток', minWidth: 100 },\r\n  // { id: 'Kv', label: 'Напряжение', minWidth: 100 },  \r\n];\r\n\r\nexport default function GeneratorTable(props) {\r\n  console.log(\"render GeneratorTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'StudyId', label: 'Id исслед', minWidth: 100 },\r\n  { id: 'StudyDicomUid', label: 'Dicom Uid', minWidth: 100 },\r\n  { id: 'StudyName', label: 'Наименование', minWidth: 100 },\r\n  { id: 'State', label: 'Состояние', minWidth: 100 },\r\n];\r\n\r\nexport default function StudiesTable(props) {\r\n  console.log(\"render StudiesTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n    { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n    { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n    { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n  ];\r\n\r\nexport default function DetectorTable(props) {\r\n  console.log(\"render DetectorTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100,\r\n      format: (value) => parseLocalString(value)\r\n    },\r\n    { id: 'Data', label: 'Данные', minWidth: 100, maxWidth: 800,\r\n      hasErrors: (value) => value?.includes('ErrorDescriptions')\r\n    },\r\n\r\n    // { id: 'State', label: 'Состояние', minWidth: 100 },\r\n    // { id: 'RasterState', label: 'Растр', minWidth: 100 },\r\n    // { id: 'Position_Current', label: 'Позиция', minWidth: 100 },\r\n    // { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100 },\r\n  ];\r\n  \r\nexport default function StandTable(props) {\r\n  console.log(\"render StandTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'PACS', label: 'PACS', minWidth: 100,\r\n      formatArray: (values) =>\r\n      {\r\n        if(!values || !values.length) {\r\n          return values;\r\n        }\r\n        \r\n        return values.map((currentValue) => `${currentValue.Name}(${currentValue.IP}): ${currentValue.State ? 'Включен' : 'Нет связи'}`);\r\n      },\r\n    },\r\n    { id: 'WorkList', label: 'WorkList', minWidth: 100,\r\n        format: (values) =>\r\n        {\r\n          if(!values || !values.length) {\r\n            return values;\r\n          }\r\n          \r\n          return values.map((currentValue) => `${currentValue.Name}(${currentValue.IP}): ${currentValue.State ? 'Включен' : 'Нет связи'}`);\r\n        },\r\n    },\r\n  ];\r\n\r\nexport default function DicomTable(props) {\r\n  console.log(\"render DicomTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers() {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst columns = [\r\n  { id: 'Login', label: 'Логин', minWidth: 170 },\r\n  { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n  { id: 'Email', label: 'Почта', minWidth: 100 },\r\n  { id: 'Role', label: 'Роль', minWidth: 100 },\r\n  { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n];\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const data = await AdminWorker.UpdateUser(newRow);\r\n    const users = await AdminWorker.GetAllUsers();\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { Roles, UserRole } from '../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\n// flex-direction: row;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    const data = await AdminWorker.UpdateUser({id: '', login, password, surname, email, role, disabled: false});\r\n    const users = await AdminWorker.GetAllUsers();\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" defaultValue={''} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl className={classes.text}>\r\n              <InputLabel htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onAdd}>\r\n              Добавить\r\n        </Button>\r\n      </div>\r\n      <UserTable data={usersState.users}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\n\r\nexport default function EquipTable(props) {\r\n  console.log(\"render EquipTable\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50,\r\n      format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170 },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100 },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100 },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex, HistoryTabIndex, AdminTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>}\r\n      {tabIndex === AdminTabIndex ? <AdminTab></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\n\r\nconst drawerWidth = 240;\r\nconst mainMenu = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий', 'История', 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n          if(usersState.users)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers();\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.users]);\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips();\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    if(data){\r\n      usersDispatch({ type: 'SETUSER', payload: data }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path=\"/\" component={AuthComponent} />\r\n      <Route path=\"/auth\" component={AuthComponent}/>\r\n      <Route path=\"/info\" component={MainComponent} />    \r\n      {/* <MainComponent></MainComponent> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContextProvider>\r\n      <UsersContextProvider>\r\n        <AllEquipsContextProvider>\r\n          <CurrentEquipContextProvider>\r\n            <SystemVolatileContextProvider>\r\n              <BrowserRouter>\r\n                <App />\r\n              </BrowserRouter>\r\n            </SystemVolatileContextProvider>\r\n          </CurrentEquipContextProvider>\r\n        </AllEquipsContextProvider>\r\n      </UsersContextProvider>\r\n    </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}