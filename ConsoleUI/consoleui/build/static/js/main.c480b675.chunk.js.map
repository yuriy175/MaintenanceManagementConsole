{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/currentEquip-context.js","context/users-context.js","context/systemVolatile-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/SofwareTable.js","components/timelines/TimeLineItem.js","components/timelines/CommonTimeLine.js","components/tabs/summaryPanels/SummaryHistoryTabPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tabs/HistoryTab.js","workers/adminWorker.js","components/tables/adminTables/UserTable.js","components/tabs/AdminTab.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","UserRole","Roles","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","CurrentEquipContextProvider","UsersContext","currentUser","users","UsersContextProvider","SystemVolatileContext","currentVolatile","SystemVolatileContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","GetAllEquips","GetAllTables","GetTableContent","tableType","tableName","UpdateDBInfo","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","systemVolatileDispatch","EquipWorker","sysInfo","swInfo","Atlas","undefined","Software","useStyles","makeStyles","theme","appBar","width","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","button","marginRight","MainToolBar","classes","appState","appDispatch","allEquipsState","usersState","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","useEffect","Surname","allEquipsDispatch","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","message","close","onmessage","JSON","parse","topic","Topic","startsWith","equip","topicParts","split","length","getEquipFromTopic","replace","values","Data","useWebSocket","selectedTab","selectedTabPanel","onTabIndexChange","newValue","allTables","onUpdateDBInfo","isDBInfoStateUpdating","DBInfoStateUpdating","AppBar","position","className","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","id","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","aria-label","Tab","label","Button","onClick","align","useCardsStyles","root","marginBottom","bullet","transform","title","pos","descr","textAlign","fontWeight","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","buttonColor","disabled","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","heatStatus","HeatStatus","Mas","Kv","Workstation","Focus","PedalPressed","Code","Description","SystemCard","volatile","logicalDisks","LogicalDisks","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","EquipImageCard","equipClasses","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","dbStates","DBStates","atlas","Array","isArray","atlasUser","Atlas_User","osInfo","OsInfos","sql","SqlServices","databases","SqlDatabases","OsCaption","OsVersion","SqlName","SqlVersion","CurrentUser","Status","AtlasVersion","XilibsVersion","ComplexType","Language","Multimonitor","User","Role","AtlasErrorDescriptions","ImagesCard","today","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","container","maxHeight","errorCell","background","wordWrap","simpleCell","boldCell","checkBox","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","selectedRow","onRowClick","ev","row","isRowBold","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","TableBody","slice","selected","EquipName","hover","role","tabIndex","format","hasErrors","Checkbox","onSelect","formatArray","v","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","content","flexGrow","palette","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","index","c","flat","Object","keys","k","key","toLowerCase","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","atlasTableMenu","List","ListItem","ListItemText","primary","Active","paper","inline","isImportant","TimeLineItem","time","alignItems","ListItemAvatar","Avatar","alt","src","Fragment","secondary","CommonTimeLine","Title","DateTime","commonSpacing","textField","SummaryHistoryTabPanel","curDate","setDate","setStartDate","setEndDate","events","setEvents","onSearch","TextField","defaultValue","InputLabelProps","shrink","SummaryTab","tabPanelIndex","MapTab","EventsTab","AdminController","GetAllUsers","UpdateUser","user","headers","Login","login","UserTable","usersDispatch","handleSelect","Disabled","newRow","AdminWorker","flexDirection","justifyContent","AdminTab","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","options","selectedIndex","onAdd","required","InputLabel","htmlFor","NativeSelect","EquipTable","readonly","EquipsTab","MainInfoComponent","drawerWidth","mainMenu","drawer","flexShrink","drawerPaper","toolbar","mixins","padding","MainComponent","CssBaseline","Drawer","anchor","Divider","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","alert","borderRadius","AuthComponent","redirect","setRedirect","showError","setShowError","to","onLogin","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c480b675.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\n// export const HistoryTabIndex = 4;\r\nexport const AdminTabIndex = 4; //5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;\r\nexport const SummaryHistoryTabPanelIndex = 2;","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      return {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => new Date(value).toLocaleString();\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\n/*export async function GetStudyList(filter) {\r\n    return await HandlerWrapper('StudyList', async () => {\r\n        const response = await axios.post(JournalServiceAddress + JournalController +\r\n            '/StudyList',\r\n            JSON.stringify(filter),\r\n            GetJsonHeader());\r\n        return response.data;\r\n    });\r\n};*/\r\n\r\nexport async function GetConnectedEquips() {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips() {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + '/GetAllEquips');\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateDBInfo(activatedEquipInfo) {\r\n    return await HandlerWrapper('UpdateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/UpdateDBInfo?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n\r\n    //const equipInfo = row.EquipName;\r\n    systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    // new software & system info come very slowly\r\n    const sysInfo = await EquipWorker.GetPermanentData(\"SystemInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSYSTEM', payload: sysInfo[0] }); \r\n\r\n    const swInfo = await EquipWorker.GetPermanentData(\"Software\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSOFTWARE', \r\n      payload: {\r\n        Atlas: swInfo.Atlas ? swInfo.Atlas[0] : undefined, \r\n        Software: swInfo.Software ? swInfo.Software[0] : undefined} }); \r\n\r\n    await EquipWorker.Activate(equipInfo, currEquipState.equipInfo);\r\n  };\r\n\r\n  return setEquipInfo;\r\n}\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 500,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n  },\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryDBTabPanelIndex === newValue && equipInfo){\r\n      const allTables = await EquipWorker.GetAllTables(equipInfo);\r\n      currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n    }\r\n    else if(SummaryHistoryTabPanelIndex === newValue){      \r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  const onUpdateDBInfo = async () =>{\r\n    if(equipInfo){\r\n      const res = await EquipWorker.UpdateDBInfo(equipInfo);\r\n    }\r\n  }\r\n\r\n  const isDBInfoStateUpdating = currEquipState.remoteaccess?.DBInfoStateUpdating;\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" />\r\n              {selectedTab === SummaryTabIndex?\r\n                  <Tab label=\"БД\" id= \"dbTabPanel\" /> : <></>\r\n              }\r\n              {selectedTab === SummaryTabIndex?\r\n                  <Tab label=\"История\" id= \"histTabPanel\" /> : <></>\r\n              }\r\n            </Tabs>\r\n            {selectedTab === SummaryTabIndex?\r\n                <Button variant=\"contained\" \r\n                    color={isDBInfoStateUpdating ? \"secondary\" : \"primary\"}\r\n                    className={classes.button} \r\n                    onClick={onUpdateDBInfo} \r\n                >\r\n                  {isDBInfoStateUpdating ? 'Обновляется' : 'Обновить'}\r\n                </Button> : <></>\r\n            }\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        createSocket();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips();\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n                else if(topic.startsWith('Events'))\r\n                {\r\n                    // allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }  \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    // currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    // width:'10%',\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n    fontWeight: 'bold',\r\n    marginRight: '0.5em',\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  const heatStatus = generator?.State?.HeatStatus;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={heatStatus === 2 ? \"Высокий\" : heatStatus === 3 ? \"Критический\" : heatStatus === 1 ? \"Норм\" : \"\"}\r\n          rightColor={heatStatus === 2 ? \"yellow\" : heatStatus === 3 ? \"red\" :  heatStatus === 1 ? \"green\" : \"gray\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ generator?.State?.PedalPressed === 1 ? \"Графия\" : generator?.State?.PedalPressed === 2 ? \"Скопия\" : \"Не нажата\"} \r\n          rightColor={generator?.State?.PedalPressed === 1 || generator?.State?.PedalPressed === 2? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = system?.LogicalDisks; // HDD\r\n  const physicalDisks = system?.HardDrives;  // PhysicalDisks\r\n  const lans = system?.Lans; // Network\r\n  const vgas = system?.VideoAdapters; // VGA\r\n  const monitors = system?.Monitors; // Monitor\r\n  const printers = system?.Printers; //Printer\r\n  const processor = system?.Motherboards ? system?.Motherboards[0] : undefined; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad ? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n  },\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={equipClasses.media}\r\n        image=\"./girl.jpg\"\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"#f50057\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(equipInfo, detailedXilib, verboseXilib);\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const volatile = props.volatile;\r\n  const dbStates = volatile?.DBStates;\r\n  const software = props.software?.Software;\r\n  const atlas = Array.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;\r\n  const atlasUser = software?.Atlas?.Atlas_User;\r\n  const osInfo = Array.isArray(software?.OsInfos) ? software?.OsInfos[0] : null; \r\n  const sql = Array.isArray(software?.SqlServices) ? software?.SqlServices[0] : null; \r\n  const databases = dbStates ?? software?.SqlDatabases;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={osInfo?.OsCaption} value={osInfo?.OsVersion}></CardRow>\r\n        <CardRow descr={sql?.SqlName} value={sql?.SqlVersion}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={osInfo?.CurrentUser}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {volatile?.ErrorDescriptions?.length ? \r\n          volatile.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {databases?.length ? \r\n          databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.Name} value={i.Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Версия\" value={atlas?.AtlasVersion}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={atlas?.XilibsVersion}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={atlas?.ComplexType}></CardRow>\r\n        <CardRow descr=\"Язык\" value={atlas?.Language}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard equipInfo={currEquipState.equipInfo}></EquipImageCard>\r\n        <SystemCard system={currEquipState.system} volatile={systemVolatileState.currentVolatile}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <ImagesCard images={currEquipState.images}></ImagesCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo} remoteaccess={currEquipState.remoteaccess}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software} volatile={systemVolatileState.currentVolatile}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  },\r\n  boldCell:{\r\n    wordWrap: 'break-word',\r\n    fontWeight: 'bolder',\r\n    fontSize: 'larger',\r\n  },  \r\n  checkBox:{\r\n    color: 'green',\r\n  },  \r\n});\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const rows = props.rows ? props.rows : [];\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n  const isRowBold = props.isRowBold;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={row.code} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    const checked = column.format ? column.format(row) : value;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={\r\n                          column.hasErrors && column.hasErrors(value) ? \r\n                            classes.errorCell : \r\n                            isRowBold && isRowBold(row) ?\r\n                              classes.boldCell :\r\n                              classes.simpleCell\r\n                        }\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            style ={{\r\n                              color: checked ? 'green' : 'gray', //\"#00e676\",\r\n                            }}\r\n                            checked={checked}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts' }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"240px\",\r\n    backgroundColor: 'white',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  const getColumn = (key) => { \r\n    if(key.toLowerCase() === 'active')\r\n    {\r\n      return { \r\n        id: key, label: key, minWidth: 100, maxWidth: 100,\r\n        format: (value) => value ? '+' : '-'\r\n      }\r\n    }\r\n\r\n    return { id: key, label: key, minWidth: 100, maxWidth: 300 }\r\n  }\r\n\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(currEquipState.equipInfo, type, text);\r\n    let values = []\r\n    if(Array.isArray(content)){\r\n      values = content.map(c => JSON.parse(c)).flat(1);\r\n    }\r\n    else{\r\n      values = content? JSON.parse(content) : null;\r\n    }\r\n    \r\n    setTableContent(values);\r\n  };\r\n\r\n  const isRowBold = (row) =>\r\n  {\r\n    return row.Active\r\n  }\r\n  \r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = currEquipState.allDBTables?.Hospital;\r\n  const systemTableMenu = currEquipState.allDBTables?.System;\r\n  const softwareTableMenu = currEquipState.allDBTables?.Software;\r\n  const atlasTableMenu = currEquipState.allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.listPanel}>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <main className={classes.content}>\r\n        <>  \r\n                   <CommonTable \r\n                     columns={columns} \r\n                     rows={rows} \r\n                     isRowBold = {isRowBold}></CommonTable>\r\n        </>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  equip: {\r\n    width: '10%',\r\n  },\r\n  isImportant:{\r\n    backgroundColor: 'red',\r\n  },\r\n}));\r\n\r\nexport default function TimeLineItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const isImportant = props.isImportant;\r\n  const equipName = props.equipName;\r\n  const time = props.time;\r\n  const title = props.title;\r\n  const text = props.text;\r\n  return (\r\n        <ListItem alignItems=\"flex-start\">\r\n            <ListItemAvatar >\r\n                <Avatar className={isImportant ? classes.isImportant : null} alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            {/* <ListItemText className={classes.equip} primary={equipName} secondary={time} /> */}\r\n            <ListItemText\r\n                primary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {equipName}\r\n                        </Typography>\r\n                        {\" \" + time}\r\n                    </React.Fragment>\r\n                }\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        {\" - \" + text}\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n        </ListItem>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport {parseLocalString} from '../../utilities/utils'\r\nimport TimeLineItem from './TimeLineItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommonTimeLine(props) {\r\n  const classes = useStyles();\r\n\r\n  const equipName = props.equipName;\r\n  const  rows = props.rows;\r\n  return (\r\n    <List className={classes.root}>\r\n        { rows?.map((i, ind) => (\r\n            <TimeLineItem key={ind.toString()} \r\n                isImportant={i.Type?.includes('Error')}\r\n                equipName={i.EquipName} \r\n                title={i.Title} \r\n                text={i.Description} \r\n                time={parseLocalString(i.DateTime)}></TimeLineItem>            \r\n            ))\r\n        }\r\n    </List>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../../model/constants'\r\nimport {getUSFullDate} from '../../../utilities/utils'\r\n\r\nimport SystemTable from '../../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../../tables/historyTables/DetectorTable'\r\nimport StandTable from '../../tables/historyTables/StandTable'\r\nimport DicomTable from '../../tables/historyTables/DicomTable'\r\nimport CommonTimeLine from '../../timelines/CommonTimeLine'\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryHistoryTabPanel(props) {\r\n  console.log(\"render SummaryHistoryTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  \r\n  const [events, setEvents] = useState([]);  \r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  // const handleNameChange = (ev) => {\r\n  //   setEquipName(ev.target.value);\r\n  // };  \r\n\r\n  const equipName = currEquipState?.equipInfo;\r\n\r\n  const onSearch = async () => {    \r\n    const data = await EquipWorker.SearchEquip('Events', equipName, startDate, endDate);\r\n    setEvents(data);\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n      <CommonTimeLine equipName={equipName} rows={events}></CommonTimeLine>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryHistoryTabPanelIndex ? <SummaryHistoryTabPanel/> : <></>}      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers() {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst columns = [\r\n  { id: 'Login', label: 'Логин', minWidth: 170 },\r\n  { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n  { id: 'Email', label: 'Почта', minWidth: 100 },\r\n  { id: 'Role', label: 'Роль', minWidth: 100 },\r\n  { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n];\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const data = await AdminWorker.UpdateUser(newRow);\r\n    const users = await AdminWorker.GetAllUsers();\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { Roles, UserRole } from '../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\n// flex-direction: row;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    const data = await AdminWorker.UpdateUser({id: '', login, password, surname, email, role, disabled: false});\r\n    const users = await AdminWorker.GetAllUsers();\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" defaultValue={''} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl className={classes.text}>\r\n              <InputLabel htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onAdd}>\r\n              Добавить\r\n        </Button>\r\n      </div>\r\n      <UserTable data={usersState.users}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\n\r\nexport default function EquipTable(props) {\r\n  console.log(\"render EquipTable\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50,\r\n      format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170 },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100 },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100 },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex,AdminTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {/* {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>} */}\r\n      {tabIndex === AdminTabIndex ? <AdminTab></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\n\r\nconst drawerWidth = 240;\r\nconst mainMenu = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий', 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n          if(usersState.users)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers();\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.users]);\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips();\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    if(data){\r\n      usersDispatch({ type: 'SETUSER', payload: data }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path=\"/\" component={AuthComponent} />\r\n      <Route path=\"/auth\" component={AuthComponent}/>\r\n      <Route path=\"/info\" component={MainComponent} />    \r\n      {/* <MainComponent></MainComponent> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContextProvider>\r\n      <UsersContextProvider>\r\n        <AllEquipsContextProvider>\r\n          <CurrentEquipContextProvider>\r\n            <SystemVolatileContextProvider>\r\n              <BrowserRouter>\r\n                <App />\r\n              </BrowserRouter>\r\n            </SystemVolatileContextProvider>\r\n          </CurrentEquipContextProvider>\r\n        </AllEquipsContextProvider>\r\n      </UsersContextProvider>\r\n    </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}