{"version":3,"sources":["context/allEquips-context.js","context/currentEquip-context.js","context/users-context.js","model/constants.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","components/mainComponents/MainToolBar.js","workers/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tables/CommonTable.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/OrganAutoTable.js","components/tables/historyTables/GeneratorTable.js","components/tables/historyTables/StudiesTable.js","components/tables/historyTables/SofwareTable.js","components/tables/historyTables/DetectorTable.js","components/tables/historyTables/StandTable.js","components/tables/historyTables/DicomTable.js","components/tabs/HistoryTab.js","workers/adminWorker.js","components/tables/adminTables/UserTable.js","components/tabs/AdminTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["AllEquipsContext","createContext","initialState","equips","reducer","state","action","type","payload","filter","p","equipInfo","equipName","State","Name","Connected","includes","Error","AllEquipsContextProvider","props","useReducer","dispatch","children","Provider","value","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","Id","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","CurrentEquipContextProvider","UsersContext","currentUser","users","UsersContextProvider","EquipsServiceAddress","window","WebSocketAddress","UserRole","Roles","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","sessionUid","d","Date","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetAllEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","useStyles","makeStyles","theme","appBar","width","marginLeft","formControl","margin","spacing","minWidth","selectEmpty","color","optionStyle","backgroundColor","userName","MainToolBar","classes","useContext","allEquipsState","currEquipState","currEquipDispatch","usersState","useState","setUserName","handleEquipsChange","event","select","target","onEquipChanged","EquipWorker","sysInfo","swInfo","useEffect","Surname","allEquipsDispatch","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","setInterval","send","onclose","setTimeout","onerror","err","message","close","onmessage","JSON","parse","topic","Topic","startsWith","equip","topicParts","split","length","getEquipFromTopic","replace","values","Data","useWebSocket","AppBar","position","className","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","id","onChange","i","ind","MenuItem","toString","align","useCardsStyles","root","marginBottom","marginRight","bullet","display","transform","title","fontSize","pos","descr","textAlign","fontWeight","button","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","style","rightWidth","rightColor","CardErrorRow","CardButtonedRow","Button","buttonColor","onClick","disabled","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","GeneratorCard","Mas","Kv","Workstation","HeatStatus","PedalPressed","undefined","ErrorDescriptions","Code","Description","SystemCard","Processor","Model","CPU_Load","Memory","Memory_total_Gb","Memory_free_Gb","HDD","Letter","TotalSize","FreeSize","PhysicalDisks","MediaType","FriendlyName","Size_Gb","Network","NIC","IP","VGA","Card_Name","Memory_Gb","Driver_Version","Monitor","Device_Name","Width","Height","Printer","Printer_Name","Port_Name","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","EquipImageCard","equipClasses","CardMedia","image","DicomCard","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","RasterState","Position_Current","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","atlasUser","Atlas","Atlas_User","Sysinfo","OS","Version","MSSQL","SQL","User","Current_user","Databases","DB_name","DB_Status","Atlas_Version","XiLibs_Version","Complex_type","Multimonitor","Role","AtlasErrorDescriptions","ImagesCard","today","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryTab","notifyText","FtpSendResult","MapTab","EventsTab","container","maxHeight","errorCell","background","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","label","TableBody","slice","row","hover","role","tabIndex","hasErrors","Checkbox","ev","onSelect","format","formatArray","v","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","columnsPermanent","columnsVolatile","SystemTable","volatileInfoRows","VolatileInfo","permanentInfo","PermanentInfo","hdds","Parameter","Value","DateTime","physicalDisks","monitors","vga","processor","motherboard","Motherboard","memory","permanentInfoRows","concat","OrganAutoTable","currentValue","GeneratorTable","StudiesTable","SofwareTable","dbs","os","sql","atlas","DetectorTable","StandTable","DicomTable","commonSpacing","textField","HistoryTab","curDate","setDate","setStartDate","setEndDate","setEquipName","setCurrType","systemInfos","setSystemInfos","organAutos","setOrganAutos","generators","setGenerators","studies","setStudies","stands","setStands","setDetectors","setDosimeters","setSoftware","setDicom","handleTypeChange","options","selectedIndex","onSearch","alert","TextField","defaultValue","InputLabelProps","shrink","NativeSelect","AdminController","GetAllUsers","UpdateUser","user","headers","Login","login","UserTable","usersDispatch","handleSelect","Disabled","newRow","AdminWorker","flexDirection","justifyContent","alignItems","AdminTab","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","onAdd","required","InputLabel","htmlFor","MainInfoComponent","Index","drawerWidth","mainMenu","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","palette","default","padding","MainComponent","setSelectedIndex","CssBaseline","Drawer","paper","anchor","Divider","List","index","ListItem","selected","handleListItemClick","ListItemIcon","ListItemText","primary","Title","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","borderRadius","AuthComponent","redirect","setRedirect","showError","setShowError","to","onLogin","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7a970d6.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  equips: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEQUIPS': {\r\n      return {\r\n        ...state,\r\n        equips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let equips = state.equips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !equips.includes(equipName)){\r\n        equips = [...equips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && equips.includes(equipName)){\r\n        equips = equips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        equips: equips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }    \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      return {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETDETECTOR': {\r\n      return {\r\n        ...state,\r\n        detectors: [action.payload]\r\n      };\r\n    }\r\n    case 'SETSTAND': {\r\n      return {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    case 'ADDIMAGE': {\r\n      return {\r\n        ...state,\r\n        images: {...state.images, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\n","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\n/*export async function GetStudyList(filter) {\r\n    return await HandlerWrapper('StudyList', async () => {\r\n        const response = await axios.post(JournalServiceAddress + JournalController +\r\n            '/StudyList',\r\n            JSON.stringify(filter),\r\n            GetJsonHeader());\r\n        return response.data;\r\n    });\r\n};*/\r\n\r\nexport async function GetAllEquips() {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetAllEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib);\r\n        return response.data;\r\n    });\r\n};","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../workers/useWebSocket'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"black\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  }\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'SETEQUIPINFO', payload: equipInfo }); \r\n\r\n    // new software & system info come very slowly\r\n    const sysInfo = await EquipWorker.GetPermanentData(\"SystemInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSYSTEM', payload: sysInfo }); \r\n\r\n    const swInfo = await EquipWorker.GetPermanentData(\"Software\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSOFTWARE', payload: swInfo }); \r\n\r\n    await EquipWorker.Activate(equipInfo, currEquipState.equipInfo);\r\n  }\r\n  \r\n  // useEffect(() => {\r\n  //     (async () => {\r\n  //         if(!allEquipsState.equips || currEquipState.equipInfo)\r\n  //         {\r\n  //           return;\r\n  //         }\r\n\r\n  //         const equipInfo = allEquipsState.equips[0];\r\n  //         onEquipChanged(equipInfo);\r\n  //     })();\r\n  // }, [allEquipsState.equips]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            {/* <FormControl className={classes.formControl}>\r\n              <NativeSelect\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {allEquipsState.equips?.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl> */}\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {allEquipsState.equips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>{i}</MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        createSocket();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetAllEquips();\r\n                allEquipsDispatch({ type: 'SETEQUIPS', payload: equips ? equips : [] });   \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    width:'10%',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {props.detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" value={generator?.State?.HeatStatus}></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ generator?.State?.PedalPressed === 1 ? \"Графия\" : generator?.State?.PedalPressed === 2 ? \"Скопия\" : \"Не нажата\"} \r\n          rightColor={generator?.State?.PedalPressed === 1 || generator?.State?.PedalPressed === 2? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {system?.Processor?.Model || system?.Processor?.CPU_Load ? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={system?.Processor?.Model} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={system?.Processor?.CPU_Load+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {system?.Memory?.Memory_total_Gb || system?.Memory?.Memory_free_Gb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={system?.Memory?.Memory_total_Gb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={system?.Memory?.Memory_free_Gb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {system?.HDD?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {system?.PhysicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.MediaType}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.Size_Gb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {system?.Network?.filter(i => i.NIC).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.NIC} value={i.IP}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {system?.VGA?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.Card_Name} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.Memory_Gb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.Driver_Version}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {system?.Monitor?.map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Device_Name} value={i.Width+'x'+i.Height}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {system?.Printer?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.Printer_Name} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.Port_Name} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n  },\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={equipClasses.media}\r\n        image=\"./girl.jpg\"\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(equipInfo, detailedXilib, verboseXilib);\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const software = props.software;\r\n  const atlasUser = software?.Atlas?.Atlas_User;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={software?.Sysinfo?.OS} value={software?.Sysinfo?.Version}></CardRow>\r\n        <CardRow descr={software?.MSSQL?.SQL} value={software?.MSSQL?.Version}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={software?.User?.Current_user}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.ErrorDescriptions?.length ? \r\n          software.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {software?.Databases?.length ? \r\n          software.Databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.DB_name} value={i.DB_Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Версия\" value={software?.Atlas?.Atlas_Version}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={software?.Atlas?.XiLibs_Version}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={software?.Atlas?.Complex_type}></CardRow>\r\n        <CardRow descr=\"Язык\" value={software?.Atlas?.Complex_type}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={software?.Atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nimport DetectorCard from '../cards/DetectorCard'\r\nimport GeneratorCard from '../cards/GeneratorCard'\r\nimport SystemCard from '../cards/SystemCard'\r\nimport OrganAutoCard from '../cards/OrganAutoCard'\r\nimport EquipImageCard from '../cards/EquipImageCard'\r\nimport DicomCard from '../cards/DicomCard'\r\nimport RemoteAccessCard from '../cards/RemoteAccessCard'\r\nimport StandCard from '../cards/StandCard'\r\nimport DosimeterCard from '../cards/DosimeterCard'\r\nimport SoftwareCard from '../cards/SoftwareCard'\r\nimport ImagesCard from '../cards/ImagesCard'\r\nimport NotifyDlg from '../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard equipInfo={currEquipState.equipInfo}></EquipImageCard>\r\n        <SystemCard system={currEquipState.system}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <ImagesCard images={currEquipState.images}></ImagesCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo} remoteaccess={currEquipState.remoteaccess}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n  }\r\n});\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const rows = props.rows ? props.rows : [];\r\n  const columns = props.columns;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={column.hasErrors && column.hasErrors(value) ? classes.errorCell : ''}\r\n                      >\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            checked={value}\r\n                            onChange={(ev) => props.onSelect(ev, row)}\r\n                            inputProps={{ 'aria-label': 'select all desserts' }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'Name', label: 'Название', minWidth: 100 },\r\n  { id: 'Projection', label: 'Проекция', minWidth: 100 },\r\n  { id: 'Direction', label: 'Направление', minWidth: 100 },\r\n  { id: 'AgeId', label: 'Возр. группа', minWidth: 100 },\r\n  { id: 'Constitution', label: 'Телосложение', minWidth: 100 },  \r\n];\r\n\r\nexport default function OrganAutoTable(props) {\r\n  console.log(\"render OrganAutoTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'State', label: 'Состояние', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'Workstation', label: 'Раб. место', minWidth: 100 },\r\n  { id: 'HeatStatus', label: 'Нагрев', minWidth: 100 },\r\n  { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n    formatArray: (values) =>\r\n    {\r\n      if(!values || !values.length) {\r\n        return values ?? [];\r\n      }\r\n      //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n      return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n    },\r\n    hasErrors: (values) =>\r\n    {\r\n      if(!values || !values.length) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n  },\r\n  { id: 'Mas', label: 'Ток', minWidth: 100 },\r\n  { id: 'Kv', label: 'Напряжение', minWidth: 100 },  \r\n];\r\n\r\nexport default function GeneratorTable(props) {\r\n  console.log(\"render GeneratorTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'StudyId', label: 'Id исслед', minWidth: 100 },\r\n  { id: 'StudyDicomUid', label: 'Dicom Uid', minWidth: 100 },\r\n  { id: 'StudyName', label: 'Наименование', minWidth: 100 },\r\n  { id: 'State', label: 'Состояние', minWidth: 100 },\r\n];\r\n\r\nexport default function StudiesTable(props) {\r\n  console.log(\"render StudiesTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n    { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n    { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n    { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n  ];\r\n\r\nexport default function DetectorTable(props) {\r\n  console.log(\"render DetectorTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'State', label: 'Состояние', minWidth: 100 },\r\n    { id: 'RasterState', label: 'Растр', minWidth: 100 },\r\n    { id: 'Position_Current', label: 'Позиция', minWidth: 100 },\r\n    { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100 },\r\n  ];\r\n  \r\nexport default function StandTable(props) {\r\n  console.log(\"render StandTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'PACS', label: 'PACS', minWidth: 100,\r\n      formatArray: (values) =>\r\n      {\r\n        if(!values || !values.length) {\r\n          return values;\r\n        }\r\n        \r\n        return values.map((currentValue) => `${currentValue.Name}(${currentValue.IP}): ${currentValue.State ? 'Включен' : 'Нет связи'}`);\r\n      },\r\n    },\r\n    { id: 'WorkList', label: 'WorkList', minWidth: 100,\r\n        format: (values) =>\r\n        {\r\n          if(!values || !values.length) {\r\n            return values;\r\n          }\r\n          \r\n          return values.map((currentValue) => `${currentValue.Name}(${currentValue.IP}): ${currentValue.State ? 'Включен' : 'Нет связи'}`);\r\n        },\r\n    },\r\n  ];\r\n\r\nexport default function DicomTable(props) {\r\n  console.log(\"render DicomTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers() {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst columns = [\r\n  { id: 'Login', label: 'Логин', minWidth: 170 },\r\n  { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n  { id: 'Email', label: 'Почта', minWidth: 100 },\r\n  { id: 'Role', label: 'Роль', minWidth: 100 },\r\n  { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n];\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const data = await AdminWorker.UpdateUser(newRow);\r\n    const users = await AdminWorker.GetAllUsers();\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { Roles, UserRole } from '../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\n// flex-direction: row;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    const data = await AdminWorker.UpdateUser({id: '', login, password, surname, email, role, disabled: false});\r\n    const users = await AdminWorker.GetAllUsers();\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" defaultValue={''} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl className={classes.text}>\r\n              <InputLabel htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onAdd}>\r\n              Добавить\r\n        </Button>\r\n      </div>\r\n      <UserTable data={usersState.users}></UserTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n\r\n  return (\r\n    <div>\r\n      {props.Index === 0 ? <SummaryTab></SummaryTab> : <></>}\r\n      {props.Index === 1 ? <MapTab></MapTab> : <></>}\r\n      {props.Index === 2 ? <EventsTab></EventsTab> : <></>}\r\n      {props.Index === 3 ? <HistoryTab></HistoryTab> : <></>}\r\n      {props.Index === 4 ? <AdminTab></AdminTab> : <></>}\r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport { UsersContext } from '../../context/users-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\n\r\nconst drawerWidth = 240;\r\nconst mainMenu = ['Обзор', 'Карта', 'Журнал событий', 'История', 'Администрироание'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n          if(usersState.users)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers();\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.users]);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedIndex === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]} Index={selectedIndex}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    if(data){\r\n      usersDispatch({ type: 'SETUSER', payload: data }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route exact path=\"/\" component={AuthComponent} />\r\n      <Route path=\"/auth\" component={AuthComponent}/>\r\n      <Route path=\"/info\" component={MainComponent} />    \r\n      {/* <MainComponent></MainComponent> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UsersContextProvider>\r\n      <AllEquipsContextProvider>\r\n        <CurrentEquipContextProvider>\r\n          <BrowserRouter>\r\n            <App />\r\n          </BrowserRouter>\r\n        </CurrentEquipContextProvider>\r\n      </AllEquipsContextProvider>\r\n    </UsersContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}