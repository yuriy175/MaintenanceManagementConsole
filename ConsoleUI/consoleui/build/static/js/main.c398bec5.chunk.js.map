{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/events-context.js","context/currentEquip-context.js","context/users-context.js","context/communication-context.js","context/systemVolatile-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","workers/adminWorker.js","components/tabs/adminPanels/AdminLogTabPanel.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/SofwareTable.js","components/timelines/TimeLineItem.js","components/timelines/CommonTimeLine.js","components/tabs/summaryPanels/SummaryHistoryTabPanel.js","components/tabs/summaryPanels/SummaryChatPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tabs/HistoryTab.js","components/tables/adminTables/UserTable.js","components/tabs/adminPanels/AdminMainTabPanel.js","components/tabs/AdminTab.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","ComplexTypeImages","UseDarkTheme","UserRole","AdminRole","Roles","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","oldRow","EquipName","Disabled","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","EventsContext","currentEvents","EventsContextProvider","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","lastSeen","undefined","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","CurrentEquipContextProvider","UsersContext","currentUser","token","users","Token","Claims","UsersContextProvider","CommunicationContext","logs","notes","CommunicationContextProvider","SystemVolatileContext","currentVolatile","SimpleMsgType","AtlasStatus","SystemVolatileContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","GetTokenHeader","headers","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","isToday","today","setHours","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","GetAllEquips","withDisabled","GetAllTables","GetTableContent","tableType","tableName","UpdateDBInfo","DisableEquipInfo","disabled","GetCommunications","SendNewNote","msgType","message","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","systemVolatileDispatch","allEquipsState","usersState","connectedEquip","EquipWorker","sysInfo","swInfo","Atlas","Software","AdminController","GetAllUsers","header","UpdateUser","user","Login","login","GetServerLogs","useStyles","makeStyles","theme","root","width","borderColor","AdminLogTabPanel","classes","communicationState","TextareaAutosize","className","rowsMax","aria-label","defaultValue","appBar","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","button","marginRight","MainToolBar","appState","appDispatch","eventsDispatch","communicationDispatch","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","getEvents","allEvents","getLogs","AdminWorker","getChats","useEffect","Surname","allEquipsDispatch","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","close","onmessage","JSON","parse","topic","Topic","startsWith","Events","equip","topicParts","split","length","getEquipFromTopic","replace","values","Data","note","useWebSocket","selectedTab","selectedTabPanel","onTabIndexChange","newValue","allTables","onUpdateDBInfo","isDBInfoStateUpdating","DBInfoStateUpdating","isValidSummaryTab","AppBar","position","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","id","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","Tab","label","Button","onClick","align","useCardsStyles","marginBottom","bullet","transform","title","pos","descr","textAlign","fontWeight","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","buttonColor","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","heatStatus","HeatStatus","Mas","Kv","Workstation","Focus","PedalPressed","Code","Description","SystemCard","volatile","logicalDisks","LogicalDisks","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","dimmed","EquipImageCard","equipClasses","pathKey","Object","keys","find","k","some","v","isConnected","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","dbStates","DBStates","atlas","Array","isArray","atlasUser","AtlasUser","osInfo","OsInfos","sql","SqlServices","databases","SqlDatabases","atlasRunning","AtlasRunning","OsCaption","OsVersion","SqlName","SqlVersion","CurrentUser","Status","AtlasVersion","XilibsVersion","ComplexType","Language","Multimonitor","User","Role","AtlasErrorDescriptions","ImagesCard","Today","Current","ImageCount","SingleGraphy","Scopy","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","isEquipConnected","container","minHeight","maxHeight","errorCell","background","wordWrap","simpleCell","boldCell","checkBox","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","selectedRow","onRowClick","ev","row","isRowBold","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","TableBody","slice","rowInd","selected","hover","role","tabIndex","format","hasErrors","Checkbox","onSelect","formatArray","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","palette","paper","overflowY","content","flexGrow","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","index","c","flat","key","toLowerCase","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","atlasTableMenu","List","ListItem","ListItemText","primary","Active","inline","isImportant","collapse","TimeLineItem","handleClick","time","details","alignItems","ListItemAvatar","Avatar","alt","src","Fragment","secondary","Collapse","in","timeout","unmountOnExit","CommonTimeLine","showImportantOnly","DateTime","isOffline","Title","Details","Divider","commonSpacing","textField","SummaryHistoryTabPanel","eventsState","curDate","setDate","setStartDate","setEndDate","importantOnly","setImportantOnly","byTitle","byDescr","filters","setFilters","events","onSearch","onTitleFilterChange","onDescrFilterChange","TextField","InputLabelProps","shrink","FormControlLabel","control","fullRow","noteTitle","SummaryChatPanel","newNote","setNewNote","newChat","setNewChat","onNoteChange","onChatChange","noteType","chatType","onSendNote","onSendChat","n","chats","multiline","Message","SummaryTab","tabPanelIndex","MapTab","EventsTab","UserTable","usersDispatch","handleSelect","newRow","flexDirection","justifyContent","AdminMainTabPanel","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","options","selectedIndex","onAdd","required","InputLabel","htmlFor","NativeSelect","AdminTab","EquipTable","visibleOnly","setVisibleOnly","byEquip","byHospital","byAddress","push","HospitalName","HospitalAddress","handleRowClick","getAttribute","onVisibleOnly","onEquipFilterChange","onHospFilterChange","onAddressFilterChange","readonly","EquipsTab","MainInfoComponent","drawerWidth","menuItems","drawer","flexShrink","drawerPaper","toolbar","mixins","padding","MainComponent","to","mainMenu","CssBaseline","Drawer","anchor","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","alert","borderRadius","AuthComponent","redirect","setRedirect","showError","setShowError","onLogin","parseJwt","atob","claims","createMuiTheme","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c398bec5.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\nexport const ComplexTypeImages = window.ComplexTypeImages;\r\nexport const UseDarkTheme = window.UseDarkTheme;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\n// export const HistoryTabIndex = 4;\r\nexport const AdminTabIndex = 4; //5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;\r\nexport const SummaryHistoryTabPanelIndex = 2;\r\nexport const SummaryChatTabPanelIndex = 3;\r\n\r\nexport const AdminLogTabPanelIndex = 4;","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'UPDATEALLEQUIPS': {\r\n      const oldRow = state.selectedEquips.filter(p => p.EquipName === action.payload.EquipName)\r\n      if(oldRow){\r\n        oldRow.Disabled = action.payload.Disabled\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        allEquips: [...state.allEquips]\r\n      };\r\n    }    \r\n    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const EventsContext = createContext();\r\n\r\nconst initialState = {\r\n  currentEvents: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEVENTS': {\r\n      return {\r\n        ...state,\r\n        currentEvents: action.payload\r\n      };\r\n    }   \r\n    case 'ADDEVENT': {\r\n      return {\r\n        ...state,\r\n        currentEvents: [...action.payload, ...state.currentEvents]\r\n      };\r\n    }   \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const EventsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <EventsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EventsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n  lastSeen:undefined,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n\r\n    case 'SETLASTSEEN': {\r\n      return {\r\n        ...state,\r\n        lastSeen: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  token: null,\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        token: action.payload.Token,\r\n        currentUser: action.payload.Claims\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CommunicationContext = createContext();\r\n\r\nconst initialState = {\r\n  logs: [],\r\n  notes: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETLOGS': {\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n    } \r\n    case 'SETCHATS': {\r\n      return {\r\n        ...state,\r\n        notes: action.payload\r\n      };\r\n    } \r\n    case 'ADDNOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes]\r\n      };\r\n    }\r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CommunicationContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CommunicationContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CommunicationContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      const newState = {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n\r\n      if(action.payload.SimpleMsgType === \"AtlasExited\") {\r\n        newState.currentVolatile.AtlasStatus = null;\r\n      }\r\n      \r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}\r\n\r\nexport function GetTokenHeader(token) {\r\n    return  {\r\n        headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + token  // передача токена в заголовке\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => new Date(value).toLocaleString();\r\n\r\nexport const isToday = (value) =>\r\n{\r\n    const today = new Date();\r\n    const date = new Date(value);\r\n    return date.setHours(0,0,0,0) == today.setHours(0,0,0,0);\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\nexport async function GetConnectedEquips(token) {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(token, activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(token, currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(token, currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(token, activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips(token, withDisabled = false) {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(\r\n            EquipsServiceAddress + EquipsController + '/GetAllEquips?withDisabled='+withDisabled,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(token, equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(token, equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateDBInfo(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('UpdateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/UpdateDBInfo?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DisableEquipInfo(token, equipName, disabled) {\r\n    return await HandlerWrapper('DisableEquipInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DisableEquipInfo?equipName=' + equipName+\r\n            '&disabled=' + disabled,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetCommunications(token, equipName) {\r\n    return await HandlerWrapper('GetCommunicationsData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetCommunicationsData?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendNewNote(token, equipName, msgType, message) {\r\n    return await HandlerWrapper('SendNewNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendNewNote?equipName=' + equipName+\r\n            '&msgType=' + msgType+\r\n            '&message=' + message,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n    const token = usersState.token;\r\n    const connectedEquip = allEquipsState.connectedEquips?.includes(equipInfo)\r\n\r\n    systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    // new software & system info come very slowly\r\n    const sysInfo = await EquipWorker.GetPermanentData(token, \"SystemInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSYSTEM', payload: sysInfo[0] }); \r\n\r\n    const swInfo = await EquipWorker.GetPermanentData(token, \"Software\", equipInfo);\r\n    currEquipDispatch({ type: 'SETSOFTWARE', \r\n      payload: {\r\n        Atlas: swInfo.Atlas ? swInfo.Atlas[0] : undefined, \r\n        Software: swInfo.Software ? swInfo.Software[0] : undefined} }); \r\n\r\n    if(!connectedEquip){\r\n      const lastSeen = await EquipWorker.GetPermanentData(token, \"LastSeen\", equipInfo);\r\n      currEquipDispatch({ type: 'SETLASTSEEN', payload: lastSeen }); \r\n    }\r\n    else {\r\n      await EquipWorker.Activate(token, equipInfo, currEquipState.equipInfo);\r\n    }\r\n  };\r\n\r\n  return setEquipInfo;\r\n}\r\n","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers(token) {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user, token) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetServerLogs(token) {\r\n    return await HandlerWrapper('GetServerLogs', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetServerLogs';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n}));\r\n\r\nexport default function AdminLogTabPanel(props) {\r\n  console.log(\"render AdminLogTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n\r\n  return (\r\n    <div>\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={communicationState.logs}\r\n      />\r\n        {/* <Typography variant=\"body2\" gutterBottom>\r\n            {communicationState.logs}\r\n        </Typography> */}\r\n    </div>\r\n  );\r\n}\r\n  ","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex,\r\n  AdminTabIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\nimport {getUSFullDate} from '../../utilities/utils'\r\nimport AdminLogTabPanel from '../tabs/adminPanels/AdminLogTabPanel';\r\n  \r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 640,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n  },\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  \r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const token = usersState.token;\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    getEvents(equipInfo);\r\n  }\r\n\r\n  const getEvents = async (equipInfo) =>\r\n  {\r\n    const endDate = new Date();\r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipInfo, getUSFullDate(endDate), getUSFullDate(endDate));\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  }\r\n\r\n  const getLogs = async () =>\r\n  {\r\n    const logs = await AdminWorker.GetServerLogs(token);\r\n    communicationDispatch({ type: 'SETLOGS', payload: logs }); \r\n  }\r\n\r\n  const getChats = async () =>\r\n  {\r\n    const notes = await EquipWorker.GetCommunications(token, equipInfo);\r\n    communicationDispatch({ type: 'SETCHATS', payload: notes }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryTabIndex === selectedTab && SummaryDBTabPanelIndex === newValue && equipInfo){\r\n      const allTables = await EquipWorker.GetAllTables(token, equipInfo);\r\n      currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryHistoryTabPanelIndex === newValue){        \r\n      getEvents(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryChatTabPanelIndex === newValue){        \r\n      getChats(equipInfo);\r\n    }\r\n    else if(AdminTabIndex === selectedTab && AdminLogTabPanelIndex === newValue){        \r\n      getLogs();\r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  const onUpdateDBInfo = async () =>{\r\n    if(equipInfo){\r\n      const res = await EquipWorker.UpdateDBInfo(token, equipInfo);\r\n    }\r\n  }\r\n\r\n  const isDBInfoStateUpdating = currEquipState.remoteaccess?.DBInfoStateUpdating;\r\n  const isValidSummaryTab = selectedTab === SummaryTabIndex && equipInfo;\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" />\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"БД\" id= \"dbTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"История\" id= \"histTabPanel\" /> : <></>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"Коммуникации\" id= \"chatTabPanel\" /> : <></>\r\n              }\r\n              {selectedTab === AdminTabIndex?\r\n                  <Tab label=\"Логи\" id= \"logsTabPanel\" /> : <></>              \r\n              }              \r\n            </Tabs>\r\n            {selectedTab === SummaryTabIndex?\r\n                <Button variant=\"contained\" \r\n                    color={isDBInfoStateUpdating ? \"secondary\" : \"primary\"}\r\n                    className={classes.button} \r\n                    onClick={onUpdateDBInfo} \r\n                >\r\n                  {isDBInfoStateUpdating ? 'Обновляется' : 'Обновить'}\r\n                </Button> : <></>\r\n            }\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport { EventsContext } from '../context/events-context';\r\nimport { CommunicationContext } from '../context/communication-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [usersState, usersDispatch] = useContext(UsersContext);\r\n    const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!usersState.token){\r\n           return;\r\n        }\r\n\r\n        createSocket();\r\n    }, [usersState.token]);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips(usersState.token);\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n                else if(topic.startsWith('Events'))\r\n                {\r\n                    eventsDispatch({ type: 'ADDEVENT', payload: data.Events }); \r\n                    return;\r\n                }  \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    // currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/chat'))\r\n                {\r\n                    const note = data? JSON.parse(data.Data) : null;\r\n                    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n                }\r\n               \r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    // width:'10%',\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n    fontWeight: 'bold',\r\n    marginRight: '0.5em',\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  const heatStatus = generator?.State?.HeatStatus;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={heatStatus === 2 ? \"Высокий\" : heatStatus === 3 ? \"Критический\" : heatStatus === 1 ? \"Норм\" : \"\"}\r\n          rightColor={heatStatus === 2 ? \"yellow\" : heatStatus === 3 ? \"red\" :  heatStatus === 1 ? \"green\" : \"gray\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ generator?.State?.PedalPressed === 1 ? \"Графия\" : generator?.State?.PedalPressed === 2 ? \"Скопия\" : \"Не нажата\"} \r\n          rightColor={generator?.State?.PedalPressed === 1 || generator?.State?.PedalPressed === 2? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = system?.LogicalDisks; // HDD\r\n  const physicalDisks = system?.HardDrives;  // PhysicalDisks\r\n  const lans = system?.Lans; // Network\r\n  const vgas = system?.VideoAdapters; // VGA\r\n  const monitors = system?.Monitors; // Monitor\r\n  const printers = system?.Printers; //Printer\r\n  const processor = system?.Motherboards ? system?.Motherboards[0] : undefined; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad || volatile?.Processor?.CPULoad === 0? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport {parseLocalString} from '../../utilities/utils'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\nimport { ComplexTypeImages } from '../../model/constants'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n  },\r\n  dimmed:{\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n    filter: 'brightness(40%)',\r\n  }\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const pathKey = Object.keys(ComplexTypeImages).find(k => \r\n    {\r\n      return ComplexTypeImages[k].some(v => equipInfo?.startsWith(v));\r\n    });\r\n  \r\n  const isConnected = props.isConnected;\r\n  const lastSeen = props.lastSeen;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={isConnected ? equipClasses.media : equipClasses.dimmed}\r\n        // image=\"./girl.jpg\"\r\n        image={\"./\" + pathKey}\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n          {lastSeen? <div>Посл. сообщение: {parseLocalString(lastSeen)} </div>: <></>}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"#f50057\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const token = props.token;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(token, equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(token, equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(token, equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(token, equipInfo, detailedXilib, verboseXilib);\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const volatile = props.volatile;\r\n  const dbStates = volatile?.DBStates;\r\n  const software = props.software?.Software;\r\n  const atlas = Array.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;\r\n  const atlasUser = volatile?.AtlasUser || volatile?.AtlasStatus?.AtlasUser;\r\n  const osInfo = Array.isArray(software?.OsInfos) ? software?.OsInfos[0] : null; \r\n  const sql = Array.isArray(software?.SqlServices) ? software?.SqlServices[0] : null; \r\n  const databases = dbStates ?? software?.SqlDatabases;\r\n  const atlasRunning = volatile?.AtlasStatus?.AtlasRunning;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={osInfo?.OsCaption} value={osInfo?.OsVersion}></CardRow>\r\n        <CardRow descr={sql?.SqlName} value={sql?.SqlVersion}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={osInfo?.CurrentUser}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {volatile?.ErrorDescriptions?.length ? \r\n          volatile.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {databases?.length ? \r\n          databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.Name} value={i.Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n              value={atlasRunning? \"запущен\" : \"не запущен\"}\r\n              rightColor={!atlasRunning? \"red\" : \"green\"}></CardRow>\r\n        <CardRow descr=\"Версия\" value={atlas?.AtlasVersion}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={atlas?.XilibsVersion}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={atlas?.ComplexType}></CardRow>\r\n        <CardRow descr=\"Язык\" value={atlas?.Language}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const isEquipConnected = allEquipsState.connectedEquips?.includes(equipInfo);\r\n  const lastSeen = currEquipState.lastSeen;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard equipInfo={equipInfo} isConnected={isEquipConnected} lastSeen={lastSeen}></EquipImageCard>\r\n        <SystemCard system={currEquipState.system} volatile={systemVolatileState.currentVolatile}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <ImagesCard images={currEquipState.images}></ImagesCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo} remoteaccess={currEquipState.remoteaccess} token={usersState.token}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software} volatile={systemVolatileState.currentVolatile}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: 40,\r\n    maxHeight: '100%',\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  },\r\n  boldCell:{\r\n    wordWrap: 'break-word',\r\n    fontWeight: 'bolder',\r\n    fontSize: 'larger',\r\n  },  \r\n  checkBox:{\r\n    color: 'green',\r\n  },  \r\n});\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const rows = props.rows ? props.rows : [];\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n  const isRowBold = props.isRowBold;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowInd) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={rowInd} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    const checked = column.format ? column.format(row) : value;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={\r\n                          column.hasErrors && column.hasErrors(value) ? \r\n                            classes.errorCell : \r\n                            isRowBold && isRowBold(row) ?\r\n                              classes.boldCell :\r\n                              classes.simpleCell\r\n                        }\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            style ={{\r\n                              color: checked ? 'green' : 'gray', //\"#00e676\",\r\n                            }}\r\n                            checked={checked}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts', 'data-column' : column.id }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"285px\",\r\n    // backgroundColor: 'white',\r\n    backgroundColor: theme.palette.background.paper,\r\n    maxHeight: \"900px\",\r\n    overflowY: 'auto',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  const getColumn = (key) => { \r\n    if(key.toLowerCase() === 'active')\r\n    {\r\n      return { \r\n        id: key, label: key, minWidth: 100, maxWidth: 100,\r\n        format: (value) => value ? '+' : '-'\r\n      }\r\n    }\r\n\r\n    return { id: key, label: key, minWidth: 100, maxWidth: 300 }\r\n  }\r\n\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(usersState.token, currEquipState.equipInfo, type, text);\r\n    let values = []\r\n    if(Array.isArray(content)){\r\n      values = content.map(c => JSON.parse(c)).flat(1);\r\n    }\r\n    else{\r\n      values = content? JSON.parse(content) : null;\r\n    }\r\n    \r\n    setTableContent(values);\r\n  };\r\n\r\n  const isRowBold = (row) =>\r\n  {\r\n    return row.Active\r\n  }\r\n  \r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = currEquipState.allDBTables?.Hospital;\r\n  const systemTableMenu = currEquipState.allDBTables?.System;\r\n  const softwareTableMenu = currEquipState.allDBTables?.Software;\r\n  const atlasTableMenu = currEquipState.allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.listPanel}>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n      <main className={classes.content}>\r\n        <>  \r\n                   <CommonTable \r\n                     columns={columns} \r\n                     rows={rows} \r\n                     isRowBold = {isRowBold}></CommonTable>\r\n        </>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  equip: {\r\n    width: '10%',\r\n  },\r\n  isImportant:{\r\n    backgroundColor: 'red',\r\n  },\r\n  collapse:{\r\n    textAlign:'left',\r\n  }\r\n}));\r\n\r\nexport default function TimeLineItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isImportant = props.isImportant;\r\n  const equipName = props.equipName;\r\n  const time = props.time;\r\n  const title = props.title;\r\n  const text = props.text;\r\n  const details = props.details;\r\n  return (\r\n    <div>\r\n        <ListItem alignItems=\"flex-start\" button>\r\n            <ListItemAvatar >\r\n                <Avatar className={isImportant ? classes.isImportant : null} alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            </ListItemAvatar>\r\n            {/* <ListItemText className={classes.equip} primary={equipName} secondary={time} /> */}\r\n            <ListItemText\r\n                primary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {equipName}\r\n                        </Typography>\r\n                        {\" \" + time}\r\n                    </React.Fragment>\r\n                }\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        {\" - \" + text}\r\n                    </React.Fragment>\r\n                }                \r\n            />\r\n            {details && open ? <ExpandLess onClick={handleClick}/> : \r\n              details && !open ? <ExpandMore onClick={handleClick}/> : <></>}\r\n        </ListItem>\r\n        \r\n            {details ? \r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.collapse}>\r\n                {details}\r\n              </Collapse>: <></>}\r\n        </div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {parseLocalString, isToday} from '../../utilities/utils'\r\nimport TimeLineItem from './TimeLineItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommonTimeLine(props) {\r\n  const classes = useStyles();\r\n  \r\n  const equipName = props.equipName;\r\n  const showImportantOnly = props.showImportantOnly;\r\n  const  rows = props.rows;\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Сегодня\r\n        </Typography>\r\n        { rows?.filter(i => isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            const isOffline=i.Type?.includes('Offline');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title + (isOffline ? '(Offline)' : '')} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n        <Divider />\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Все время\r\n        </Typography>\r\n        { rows?.filter(i => !isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n    </List>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {SearchPeriod} from '../../../model/constants'\r\nimport {getUSFullDate} from '../../../utilities/utils'\r\n\r\nimport SystemTable from '../../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../../tables/historyTables/DetectorTable'\r\nimport StandTable from '../../tables/historyTables/StandTable'\r\nimport DicomTable from '../../tables/historyTables/DicomTable'\r\nimport CommonTimeLine from '../../timelines/CommonTimeLine'\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { EventsContext } from '../../../context/events-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryHistoryTabPanel(props) {\r\n  console.log(\"render SummaryHistoryTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  // const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  \r\n  // const [events, setEvents] = useState([]);  \r\n  const [importantOnly, setImportantOnly] = useState(false);  \r\n  const [filters, setFilters] = useState({\r\n    byTitle: '',\r\n    byDescr: ''\r\n  });\r\n\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  // const handleNameChange = (ev) => {\r\n  //   setEquipName(ev.target.value);\r\n  // };  \r\n\r\n  const equipName = props.equipName; // currEquipState?.equipInfo;\r\n  let events = eventsState.currentEvents;\r\n  const token = usersState.token;\r\n\r\n  const onSearch = async () => {    \r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipName, startDate, endDate);\r\n    // setEvents(data);\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  };\r\n\r\n  const onSelect = async (event) => {\r\n    setImportantOnly(!importantOnly);\r\n  };\r\n\r\n  \r\n  if(filters.byTitle){\r\n    events = events?.filter(p => p.Description.includes(filters.byTitle));\r\n  }\r\n\r\n  if(filters.byDescr){\r\n    events = events?.filter(p => p.Details.includes(filters.byDescr));\r\n  }\r\n\r\n  const onTitleFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byTitle: val.target?.value}});\r\n  }\r\n\r\n  const onDescrFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byDescr: val.target?.value}});\r\n  }\r\n\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n                checked={importantOnly}\r\n                onChange={onSelect}\r\n            />\r\n          }\r\n          label=\"Только важные\"\r\n        />\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onTitleFilterChange} label=\"По названию\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onDescrFilterChange} label=\"По описанию\" variant=\"outlined\" />\r\n        \r\n    </div>\r\n    <div className={classes.root}>        \r\n      <CommonTimeLine equipName={equipName} rows={events} showImportantOnly={importantOnly}></CommonTimeLine>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"50%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  fullRow:{\r\n    width: '100%',\r\n    textAlign: 'left',\r\n  },\r\n  textField:{\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n\r\n  } ,\r\n  noteTitle:{\r\n    width: '100%',\r\n    fontWeight: 'bolder',\r\n    textAlign: 'left',\r\n    display: 'inline',\r\n  }\r\n}));\r\n\r\nexport default function SummaryChatPanel(props) {\r\n  console.log(\"render SummaryChatPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [newChat, setNewChat] = useState('');\r\n\r\n  const equipName = props.equipName;\r\n  const token = usersState.token;\r\n\r\n  const onNoteChange = async (val)  => {\r\n    setNewNote(val);\r\n  }\r\n\r\n  const onChatChange = async (val)  => {\r\n    setNewChat(val);\r\n  }\r\n\r\n  const noteType = 'Note';\r\n  const chatType = 'Chat';\r\n  const onSendNote = async () => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, noteType, newNote);    \r\n    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n    setNewNote('');\r\n  };\r\n\r\n  const onSendChat = async () => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, chatType, newChat);   \r\n    setNewChat('');\r\n  };\r\n\r\n  const notes = communicationState.notes?.filter(n => n.Type === noteType);\r\n  const chats = communicationState.notes?.filter(n => n.Type === chatType);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">Заметки</Typography>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newNote}\r\n          onChange={e => onNoteChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSendNote}>\r\n              Послать\r\n        </Button>\r\n        {notes?.length ? \r\n          notes.map((i, ind) => (\r\n            <div key={ind.toString()} className={classes.fullRow}>\r\n              <Typography variant=\"body1\" align='left' color='primary' className={classes.noteTitle}>\r\n                  {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n              </Typography> \r\n              {i.Message}\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }        \r\n      </div>\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">Чат</Typography>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newChat}\r\n          onChange={e => onChatChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSendChat}>\r\n              Послать\r\n        </Button>\r\n        {chats?.length ? \r\n          chats.map((i, ind) => (\r\n            <div key={ind.toString()} className={classes.fullRow}>\r\n              <Typography variant=\"body1\" align='left' color='primary' className={classes.noteTitle}>\r\n                  {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n              </Typography> \r\n              {i.Message}\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </div>    \r\n    </div>\r\n  );\r\n}\r\n  ","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\nimport SummaryChatPanel from './summaryPanels/SummaryChatPanel'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  const equipName = currEquipState?.equipInfo;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel equipName={equipName}/> : <></>}\r\n      {tabPanelIndex === SummaryHistoryTabPanelIndex ? <SummaryHistoryTabPanel equipName={equipName}/> : <></>}      \r\n      {tabPanelIndex === SummaryChatTabPanelIndex ? <SummaryChatPanel equipName={equipName}/> : <></>}      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n  const equipName = '';\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <SummaryHistoryTabPanel equipName={equipName}/>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const token = usersState.token;\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(token, currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst columns = [\r\n  { id: 'Login', label: 'Логин', minWidth: 170 },\r\n  { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n  { id: 'Email', label: 'Почта', minWidth: 100 },\r\n  { id: 'Role', label: 'Роль', minWidth: 100 },\r\n  { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n];\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const token = usersState.token;\r\n    const data = await AdminWorker.UpdateUser(newRow, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport { Roles, UserRole } from '../../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AdminMainTabPanel(props) {\r\n  console.log(\"render AdminMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    const token = usersState.token\r\n    const data = await AdminWorker.UpdateUser({id: '', login, password, surname, email, role, disabled: false}, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" defaultValue={''} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl className={classes.text}>\r\n              <InputLabel htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onAdd}>\r\n              Добавить\r\n        </Button>\r\n      </div>\r\n      <UserTable data={usersState.users}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MainTabPanelIndex, AdminLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport AdminMainTabPanel from './adminPanels/AdminMainTabPanel'\r\nimport AdminLogTabPanel from './adminPanels/AdminLogTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <AdminMainTabPanel/> : <></>}\r\n      {tabPanelIndex === AdminLogTabPanelIndex ? <AdminLogTabPanel/> : <></>}     \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n/*\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { Roles, UserRole } from '../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\n// flex-direction: row;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    const token = usersState.token\r\n    const data = await AdminWorker.UpdateUser({id: '', login, password, surname, email, role, disabled: false}, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  const onLogin = async () => {\r\n    const data = await AdminWorker.Login({login, password});\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" defaultValue={''} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>\r\n        <FormControl className={classes.text}>\r\n              <InputLabel htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onAdd}>\r\n              Добавить\r\n        </Button>\r\n      </div>\r\n      <UserTable data={usersState.users}></UserTable>\r\n    </div>\r\n  );\r\n}\r\n*/","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {AdminRole} from '../../../model/constants'\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function EquipTable(props) {\r\n  console.log(\"render EquipTable\");\r\n  const classes = useStyles();\r\n\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n  const [visibleOnly, setVisibleOnly] = useState(true);  \r\n  const [filtrate, setFiltrate] = useState(false);  \r\n  const [filters, setFilters] = React.useState({\r\n    byEquip: '',\r\n    byHospital: '',\r\n    byAddress:''\r\n  });\r\n\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50,\r\n      format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170,\r\n      format: (value) => parseLocalString(value)\r\n    },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100 },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100 },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    \r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n  if(isAdmin){\r\n    columns.push({ id: 'Disabled', label: 'Скрыт', checked: true, minWidth: 100,\r\n        format: (row) => row.Disabled\r\n      });\r\n  }\r\n\r\n  const onFilter = async ()  => {\r\n    setFiltrate(!filtrate);\r\n  }\r\n\r\n  let rows = visibleOnly ? props.data?.filter(p => !p.Disabled) : props.data;\r\n  if(filters.byEquip){\r\n    rows = rows?.filter(p => p.EquipName.includes(filters.byEquip));\r\n  }\r\n\r\n  if(filters.byHospital){\r\n    rows = rows?.filter(p => p.HospitalName.includes(filters.byHospital));\r\n  }\r\n\r\n  if(filters.byAddress){\r\n    rows = rows?.filter(p => p.HospitalAddress.includes(filters.byAddress));\r\n  }\r\n\r\n  const handleRowClick = async (event, row) => {\r\n\r\n    var dataColumn = event.target.getAttribute(\"data-column\");\r\n\r\n    if(dataColumn === \"Disabled\")\r\n    {\r\n      return;\r\n    }\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const equipInfo = row.EquipName;\r\n    row.Disabled = !row.Disabled\r\n    await EquipWorker.DisableEquipInfo(usersState.token, equipInfo, row.Disabled);\r\n    allEquipsDispatch({ type: 'UPDATEALLEQUIPS', payload: row }); \r\n  };\r\n\r\n  const onVisibleOnly = async (event) => {\r\n    const value = !visibleOnly;\r\n    setVisibleOnly(value);\r\n    const allEquips = await EquipWorker.GetAllEquips(usersState.token, visibleOnly);\r\n    allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips }); \r\n  };\r\n\r\n  const onEquipFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byEquip: val.target?.value}});\r\n  }\r\n\r\n  const onHospFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byHospital: val.target?.value}});\r\n  }\r\n\r\n  const onAddressFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byAddress: val.target?.value}});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={visibleOnly}\r\n                    onChange={onVisibleOnly}\r\n                />\r\n              }\r\n              label=\"Только нескрытые\"\r\n            />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onEquipFilterChange} label=\"По комплексу\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onHospFilterChange} label=\"По ЛПУ\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onAddressFilterChange} label=\"По адресу\" variant=\"outlined\" />\r\n        {/* <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onFilter}>\r\n            Фильтровать\r\n        </Button> */}\r\n      </div>\r\n      <div className={classes.root}>\r\n        <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleRowClick} onSelect={handleSelect}></CommonTable>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex,AdminTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {/* {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>} */}\r\n      {tabIndex === AdminTabIndex ? <AdminTab panel={tabPanelIndex}></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, EventsTabIndex, MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport {AdminRole} from '../../model/constants'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nconst drawerWidth = 240;\r\nconst menuItems = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий']; // , 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n        const token = usersState.token;\r\n          if(!token)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers(token);\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.token]);\r\n\r\n  const token = usersState.token;\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;  \r\n  }\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips(token);\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n    else if(index === EventsTabIndex)\r\n    {\r\n      const endDate = new Date();\r\n      const allEvents = await EquipWorker.SearchEquip(token, 'Events', '', getUSFullDate(endDate), getUSFullDate(endDate));\r\n      eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const mainMenu = isAdmin ? [...menuItems, 'Администрирование'] : menuItems; // , ];\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\n\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em',\r\n    backgroundColor: theme.palette.background.default,  \r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const parseJwt = (token) => {\r\n      try {\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n    const data = await AdminWorker.Login({login: 'sa', password: 'medtex', email});\r\n    // const data = await AdminWorker.Login({login, password, email});\r\n    const claims = parseJwt(data);\r\n    if(data){\r\n      usersDispatch({ type: 'SETUSER', payload: {Token: data, Claims: claims} }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { UseDarkTheme } from './model/constants'\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: !UseDarkTheme ? \"light\" : \"dark\",\r\n  }\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (  \r\n    <>  \r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={AuthComponent} />\r\n          <Route path=\"/auth\" component={AuthComponent}/>\r\n          <Route path=\"/info\" component={MainComponent} />    \r\n          {/* <MainComponent></MainComponent> */}\r\n        </div>    \r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { EventsContextProvider} from './context/events-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\nimport { CommunicationContextProvider} from './context/communication-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AppContextProvider>\r\n        <UsersContextProvider>\r\n          <AllEquipsContextProvider>\r\n            <CurrentEquipContextProvider>\r\n              <SystemVolatileContextProvider>\r\n                <EventsContextProvider>\r\n                  <CommunicationContextProvider>\r\n                    <BrowserRouter>\r\n                      <App />\r\n                    </BrowserRouter>\r\n                  </CommunicationContextProvider>\r\n                </EventsContextProvider>\r\n              </SystemVolatileContextProvider>\r\n            </CurrentEquipContextProvider>\r\n          </AllEquipsContextProvider>\r\n        </UsersContextProvider>\r\n      </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}