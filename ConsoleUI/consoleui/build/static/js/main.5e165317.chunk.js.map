{"version":3,"sources":["model/constants.js","context/app-context.js","context/allEquips-context.js","context/events-context.js","context/currentEquip-context.js","context/users-context.js","context/communication-context.js","context/controlState-context.js","context/systemVolatile-context.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","hooks/useSetCurrEquip.js","workers/adminWorker.js","workers/controlWorker.js","context/equipLog-context.js","components/mainComponents/MainToolBar.js","hooks/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/cards/ImagesCard.js","components/dialogs/NotifyDlg.js","components/tabs/summaryPanels/SummaryMainTabPanel.js","components/tables/CommonTable.js","components/tabs/summaryPanels/SummaryBDTabPanel.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/SofwareTable.js","components/timelines/TimeLineItem.js","components/timelines/CommonTimeLine.js","components/tabs/summaryPanels/SummaryHistoryTabPanel.js","components/tabs/summaryPanels/subpanels/SummaryChatSubpanel.js","components/tabs/summaryPanels/SummaryChatTabPanel.js","components/tabs/summaryPanels/SummaryLogsTabPanel.js","components/tabs/SummaryTab.js","components/tabs/MapTab.js","components/tabs/EventsTab.js","components/tabs/HistoryTab.js","components/tables/adminTables/UserTable.js","components/tabs/adminPanels/AdminMainTabPanel.js","components/tabs/AdminTab.js","components/dialogs/ConfirmDlg.js","components/tables/equipTables/EquipTable.js","components/tabs/EquipsTab.js","components/cards/controlCards/ServerStateCard.js","components/cards/controlCards/UnasweredEquipsCard.js","components/tabs/controlPanels/ControlMainTabPanel.js","components/tabs/controlPanels/ControlDiagnosticTabPanel.js","components/tabs/controlPanels/ControlLogTabPanel.js","components/tabs/ControlTab.js","components/mainComponents/MainInfoComponent.js","components/mainComponents/MainComponent.js","components/commonComponents/PasswordComponent.js","components/mainComponents/AuthComponent.js","App.js","index.js"],"names":["EquipsServiceAddress","window","WebSocketAddress","ComplexTypeImages","UseDarkTheme","UserRole","AdminRole","Roles","CommonChat","ChatMessageType","AppContext","createContext","initialState","currentTab","tab","panel","reducer","state","action","type","payload","Error","AppContextProvider","props","useReducer","dispatch","children","Provider","value","AllEquipsContext","allEquips","connectedEquips","selectedEquips","filter","p","oldRow","EquipName","Disabled","equipInfo","equipName","State","Name","Connected","includes","AllEquipsContextProvider","EventsContext","currentEvents","EventsContextProvider","CurrentEquipContext","reduceInfo","payloadInfo","info","sysKeys","Object","keys","forEach","k","jointArr","map","length","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","remoteaccess","images","aecs","allDBs","allDBTables","lastSeen","undefined","locationInfo","newState","Id","ErrorDescriptions","newDetectorId","DetectorId","oldDetector","d","newDetectors","Type","newWL","WorkList","oldWL","e","w","newPacs","PACS","oldPacs","systemInfo","payloadSystemInfo","SystemInfo","softwareInfoAtlas","softwareInfoSoftware","payloadSoftwareInfoAtlas","SoftwareInfo","Atlas","payloadSoftwareInfoSw","Software","softwareInfo","LastSeen","LocationInfo","CurrentEquipContextProvider","UsersContext","currentUser","token","users","Token","Claims","Surname","UsersContextProvider","CommunicationContext","logs","notes","commonNotes","oldNote","n","ID","Message","CommunicationContextProvider","ControlStateContext","serverState","diagnostic","ControlStateContextProvider","SystemVolatileContext","currentVolatile","SimpleMsgType","AtlasStatus","SystemVolatileContextProvider","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","GetTokenHeader","headers","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","parseLocalString","Date","toLocaleString","isToday","today","setHours","sessionUid","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetConnectedEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","GetPermanentData","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","detailedXilib","verboseXilib","SetEquipLogsOn","hardwareTypes","duration","GetAllEquips","withDisabled","GetAllTables","GetTableContent","tableType","tableName","UpdateDBInfo","RecreateDBInfo","DisableEquipInfo","disabled","GetCommunications","SendNewNote","msgType","id","message","encodeURIComponent","DeleteNote","useSetCurrEquip","useContext","currEquipState","currEquipDispatch","systemVolatileDispatch","allEquipsState","usersState","EquipWorker","fullInfo","AdminController","GetAllUsers","header","UpdateUser","user","Login","login","GetServerLogs","ControlController","GetServerState","GetServerMetrics","EquipLogContext","currentLog","EquipLogContextProvider","useStyles","makeStyles","theme","appBar","width","marginLeft","formControl","margin","spacing","minWidth","tabControl","selectEmpty","color","display","optionStyle","backgroundColor","userName","button","marginRight","MainToolBar","classes","appState","appDispatch","allEquipsDispatch","eventsDispatch","communicationDispatch","controlDispatch","useState","setUserName","setCurrEquip","handleEquipsChange","event","select","target","onEquipChanged","selectedTab","selectedTabPanel","getEvents","getChats","getAllDBTables","allEvents","getLogs","AdminWorker","getDiagnostics","ControlWorker","metrics","allTables","useEffect","equipLogsDispatch","connection","setConnection","useRef","createSocket","socket","WebSocket","current","onopen","equips","setInterval","send","onclose","setTimeout","onerror","err","close","onmessage","JSON","parse","topic","Topic","startsWith","Events","note","Data","equip","topicParts","split","getEquipFromTopic","replace","values","useWebSocket","onTabIndexChange","newValue","onUpdateDBInfo","isDBInfoStateUpdating","DBInfoStateUpdating","isValidSummaryTab","AppBar","position","className","Toolbar","Typography","variant","noWrap","FormControl","Select","labelId","onChange","ListSubheader","i","ind","MenuItem","ListItemIcon","fontSize","style","toString","Tabs","aria-label","Tab","label","Button","onClick","align","useCardsStyles","root","marginBottom","bullet","transform","title","pos","descr","textAlign","fontWeight","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","rightWidth","rightColor","CardErrorRow","CardButtonedRow","buttonColor","CardSwitchedRow","switchDescr","Switch","checked","inputProps","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","DetectorField","DetectorFrameRate","Aec_enabled","Aec_fields","Aec_density","GeneratorCard","generatorState","heatStatus","HeatStatus","mas","Post_mas","Mas","kv","Post_kv","Kv","ma","Post_ma","Ma","ms","Post_time","Ms","scopyKv","Scopy_post_mas","Scopy_mas","Scopy_post_kv","Scopy_kv","scopyMa","Scopy_post_ma","Scopy_ma","scopyMs","Scopy_post_ms","Scopy_ms","Workstation","Focus","PedalPressed","Points_mode","Scopy_mode","Code","Description","unifyArr","arr","propName","activePropName","unifiedArr","Set","find","reverse","SystemCard","volatile","logicalDisks","LogicalDisks","flat","physicalDisks","HardDrives","lans","Lans","vgas","VideoAdapters","monitors","Monitors","printers","Printers","processor","Motherboards","Cpu","Processor","CPULoad","Memory","MemoryTotalGb","MemoryFreeGb","Letter","TotalSize","FreeSize","mediatype","FriendlyName","SizeGb","Adapter","Ip","CardName","MemoryGb","DrvDate","MonitorName","SerialNumber","PrinterName","PrinterPort","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","dimmed","EquipImageCard","equipClasses","pathKey","some","v","isConnected","hospital","address","CardMedia","image","DicomCard","IP","RemoteAccessCard","setDetailedXilib","setVerboseXilib","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","onDetailedXilib","onVerboseXilib","Xilogs","on","StandCard","Mode","RasterState","Position_Current","Tube_Incline","Deck_Incline","Camera_Incline","Ffd_Current","Deck_Height","Uarm_Height","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","dbStates","DBStates","atlasUser","AtlasUser","atlas","osInfo","OsInfos","sql","SqlServices","databases","SqlDatabases","atlasRunning","AtlasRunning","OsCaption","OsVersion","SqlName","SqlVersion","CurrentUser","Status","AtlasVersion","XilibsVersion","ComplexType","Language","Multimonitor","User","Role","AtlasErrorDescriptions","ImagesCard","Today","Current","ImageCount","SingleGraphy","Scopy","Stitching","text","NotifyDlg","open","setOpen","Dialog","onClose","aria-labelledby","DialogTitle","column","SummaryMainTabPanel","systemVolatileState","notifyText","FtpSendResult","isEquipConnected","HospitalName","HospitalAddress","container","minHeight","maxHeight","errorCell","background","wordWrap","simpleCell","boldCell","checkBox","descendingComparator","b","orderBy","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","defaultSort","setOrderBy","defaultSortOrder","order","setOrder","rows","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","columns","selectedRow","onRowClick","ev","row","isRowBold","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","maxWidth","sortDirection","sortable","TableSortLabel","active","direction","property","TableBody","slice","rowInd","selected","hover","role","tabIndex","format","hasErrors","Checkbox","onSelect","formatArray","commonSpacing","onEdit","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","listPanel","palette","paper","overflowY","content","default","paddingLeft","SummaryBDTabPanel","tableContent","setTableContent","handleListItemClick","Array","isArray","c","onRecreate","key","toLowerCase","hospTableMenu","Hospital","systemTableMenu","System","softwareTableMenu","atlasTableMenu","Box","List","ListItem","ListItemText","primary","Active","inline","isImportant","collapse","outerLabel","ordinaryLabel","borderRadius","importantLabel","innerLabel","alignItems","justifyContent","TimeLineItem","handleClick","time","details","Fragment","secondary","Collapse","in","timeout","unmountOnExit","CommonTimeLine","showImportantOnly","todayRows","DateTime","todayCount","othersCount","isOffline","Title","Details","Divider","textField","SummaryHistoryTabPanel","eventsState","curDate","setDate","setStartDate","setEndDate","importantOnly","setImportantOnly","byTitle","byDescr","filters","setFilters","events","onSearch","onTitleFilterChange","onDescrFilterChange","TextField","defaultValue","InputLabelProps","shrink","FormControlLabel","control","fullRow","gridTemplateColumns","noteTitle","notesArea","overflowWrap","SummaryChatSubpanel","techUserName","newNote","setNewNote","anchorEl","setAnchorEl","techOnly","setTechOnly","openEditMenu","Boolean","hasTechOnly","handleMenuClick","currentTarget","handleMenuClose","onNoteChange","onSendNote","handleDeleteNote","noteId","onDeleteNote","canSubmit","handleEditNote","onTechOnly","multiline","IconButton","aria-controls","aria-haspopup","Menu","keepMounted","s","divider","SummaryChatTabPanel","communicationState","noteType","chatType","onSendNoteNote","onSendChatNote","newnote","chats","orientation","flexItem","borderColor","SummaryLogsTabPanel","equipLogs","generatorLogs","setGeneratorLogs","standLogs","setStandLogs","detectorLogs","setDetectorLogs","setDuration","onGeneratorLogs","onStandLogs","onDetectorLogs","onStart","equipTypes","push","onDurationChange","isNaN","Timestamp","TextareaAutosize","rowsMax","SummaryTab","tabPanelIndex","LeafIcon","L","extend","options","activeIcon","iconUrl","grayIcon","MapTab","MapContainer","center","zoom","maxZoom","TileLayer","url","attribution","Marker","HospitalLatitude","HospitalLongitude","IsActive","Popup","EventsTab","UserTable","usersDispatch","handleSelect","newRow","flexDirection","AdminMainTabPanel","userId","setUserId","setLogin","password","setPassword","surname","setSurname","email","setEmail","setRole","handleRoleChange","selectedIndex","onSubmit","onCancel","Email","required","InputLabel","htmlFor","NativeSelect","AdminTab","ConfirmDlg","handleClose","aria-describedby","DialogContent","DialogContentText","сonfirmMessage","DialogActions","context","autoFocus","EquipTable","visibleOnly","setVisibleOnly","activeOnly","setActiveOnly","byEquip","byHospital","byAddress","Result","openConfirm","setOpenConfirm","LastSeenPresentation","handleRowClick","getAttribute","Context","onVisibleOnly","onActiveOnly","onEquipFilterChange","onHospFilterChange","onAddressFilterChange","onConfirmClose","result","readonly","EquipsTab","ServerStateCard","DBUsedSize","DiskTotalSpace","DiskUsedSpace","UnasweredEquipsCard","hdd","ControlMainTabPanel","controlState","ControlDiagnosticTabPanel","ControlLogTabPanel","ControlTab","MainInfoComponent","drawerWidth","menuItems","drawer","flexShrink","drawerPaper","toolbar","mixins","flexGrow","padding","MainComponent","to","mainMenu","CssBaseline","Drawer","anchor","PasswordComponent","showPassword","setValues","Input","endAdornment","InputAdornment","onMouseDown","preventDefault","alert","AuthComponent","redirect","setRedirect","showError","setShowError","onLogin","parseJwt","atob","claims","createMuiTheme","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e165317.chunk.js","sourcesContent":["//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\nexport const ComplexTypeImages = window.ComplexTypeImages;\r\nexport const UseDarkTheme = window.UseDarkTheme;\r\n\r\nexport const SearchPeriod = 7;\r\nexport const UserRole = 'User'\r\nexport const AdminRole = 'Administrator';\r\nexport const Roles = [UserRole, AdminRole];\r\n\r\nexport const SummaryTabIndex = 0;\r\nexport const EquipsTabIndex = 1;\r\nexport const MapTabIndex = 2;\r\nexport const EventsTabIndex = 3;\r\n// export const HistoryTabIndex = 4;\r\nexport const ControlTabIndex = 4; //5;\r\nexport const AdminTabIndex = 5; //5;\r\n\r\nexport const MainTabPanelIndex = 0;\r\nexport const SummaryDBTabPanelIndex = 1;\r\nexport const SummaryHistoryTabPanelIndex = 2;\r\nexport const SummaryChatTabPanelIndex = 3;\r\nexport const SummaryLogsTabPanelIndex = 4;\r\n\r\nexport const ControlLogTabPanelIndex = 5;\r\n\r\nexport const ControlDiagnosticTabPanelIndex = 6;\r\n\r\nexport const CommonChat = 'CommonChat';\r\nexport const ChatMessageType = 'Chat';","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n  currentTab: {tab: SummaryTabIndex, panel: MainTabPanelIndex},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETTAB': {\r\n      return {\r\n        ...state,\r\n        currentTab: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AppContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AppContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  allEquips: null,\r\n  connectedEquips: null,\r\n  selectedEquips: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETALLEQUIPS': {\r\n      return {\r\n        ...state,\r\n        allEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'UPDATEALLEQUIPS': {\r\n      const oldRow = state.selectedEquips.filter(p => p.EquipName === action.payload.EquipName)\r\n      if(oldRow){\r\n        oldRow.Disabled = action.payload.Disabled\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        allEquips: [...state.allEquips]\r\n      };\r\n    }    \r\n    \r\n    case 'SETCONNECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        connectedEquips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDSELECTEDEQUIPS': {\r\n      return {\r\n        ...state,\r\n        selectedEquips: [action.payload, ...state.selectedEquips.filter(p => p != action.payload)]\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let connectedEquips = state.connectedEquips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !connectedEquips.includes(equipName)){\r\n        connectedEquips = [...connectedEquips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && connectedEquips.includes(equipName)){\r\n        connectedEquips = connectedEquips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        connectedEquips: connectedEquips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const EventsContext = createContext();\r\n\r\nconst initialState = {\r\n  currentEvents: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEVENTS': {\r\n      return {\r\n        ...state,\r\n        currentEvents: action.payload\r\n      };\r\n    }   \r\n    case 'ADDEVENT': {\r\n      return {\r\n        ...state,\r\n        currentEvents: [...action.payload, ...state.currentEvents]\r\n      };\r\n    }   \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const EventsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <EventsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EventsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst reduceInfo = (payloadInfo, info) =>{\r\n  if(payloadInfo?.[0]){\r\n    const sysKeys = Object.keys(payloadInfo[0]);        \r\n    sysKeys?.forEach(k =>{\r\n      const jointArr = payloadInfo\r\n        .map(p => [...p[k]])\r\n        .filter(p => p.length > 0);\r\n      info[k] = [...jointArr];\r\n    });\r\n  }\r\n}\r\n\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n  remoteaccess:{},\r\n  images:{},\r\n  aecs:{},\r\n  allDBs:{},\r\n  allDBTables:{},\r\n  lastSeen:undefined,\r\n  locationInfo: '',\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }\r\n    case 'SETALLDB': {\r\n      return {\r\n        ...state,\r\n        allDBs: action.payload\r\n      };\r\n    }    \r\n    case 'SETALLDBTABLES': {\r\n      return {\r\n        ...state,\r\n        allDBTables: action.payload\r\n      };\r\n    }    \r\n        \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n\r\n    case 'SETLASTSEEN': {\r\n      return {\r\n        ...state,\r\n        lastSeen: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      const newState = {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.generator?.State?.ErrorDescriptions && \r\n        (!newState.generator?.State?.Error || newState.generator?.State?.Error[0] === 0)){\r\n        newState.generator.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDETECTOR': {\r\n      const newDetectorId = action.payload.DetectorId;\r\n      let oldDetector = state.detectors?.filter(d => d.DetectorId === newDetectorId)[0];\r\n      let newDetectors = state.detectors;\r\n      if(oldDetector){\r\n        oldDetector = {...oldDetector, ...action.payload}\r\n        newDetectors = [...state.detectors?.filter(d => d.DetectorId !== newDetectorId), oldDetector]\r\n      }\r\n      else{\r\n        newDetectors = [...state.detectors, action.payload]\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        detectors: newDetectors //[...state.detectors, ...action.payload]\r\n      };\r\n    }\r\n    case 'SETAEC': {\r\n      return {\r\n        ...state,\r\n        aecs: {Id: action.payload.Id, Type: action.payload.Type, State: {...state.aecs.State, ...action.payload.State}}\r\n      };\r\n    }    \r\n    case 'SETSTAND': {\r\n      // return {\r\n      //   ...state,\r\n      //   stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      // };\r\n      const newState = {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n      //\r\n      if(newState.stand?.State?.ErrorDescriptions && \r\n        (!newState.stand?.State?.Error || newState.stand?.State?.Error[0] === 0)){\r\n        newState.stand.State.ErrorDescriptions = [];\r\n      }\r\n\r\n      return newState;\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWAREMSG': {\r\n      return {\r\n        ...state,\r\n        software: {...state.software, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETREMOTEACCESS': {\r\n      return {\r\n        ...state,\r\n        remoteaccess: {...state.remoteaccess, ...action.payload}\r\n      };\r\n    }\r\n    case 'SETIMAGES': {\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    }\r\n    // case 'ADDIMAGE': {\r\n    //   return {\r\n    //     ...state,\r\n    //     images: {...state.images, ...action.payload}\r\n    //   };\r\n    // }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    case 'SETFULLINFO': {\r\n      const systemInfo = {};\r\n      const payloadSystemInfo = action.payload?.SystemInfo;\r\n      if(payloadSystemInfo?.[0]){\r\n        const sysKeys = Object.keys(payloadSystemInfo[0]);        \r\n        sysKeys?.forEach(k =>{\r\n          const jointArr = payloadSystemInfo\r\n            .map(p => [...p[k]])\r\n            .filter(p => p.length > 0);\r\n          systemInfo[k] = [...jointArr];\r\n        });\r\n      }\r\n\r\n      const softwareInfoAtlas = [];\r\n      const softwareInfoSoftware = [];\r\n      const payloadSoftwareInfoAtlas = action.payload?.SoftwareInfo?.Atlas;\r\n      const payloadSoftwareInfoSw = action.payload?.SoftwareInfo?.Software;\r\n      /*if(payloadSoftwareInfoAtlas?.[0]){\r\n        const sysKeys = Object.keys(payloadSoftwareInfoAtlas[0]);        \r\n        sysKeys?.forEach(k =>{\r\n          const jointArr = payloadSoftwareInfoAtlas\r\n            .map(p => [...p[k]])\r\n            .filter(p => p.length > 0);\r\n            softwareInfoAtlas[k] = [...jointArr];\r\n        });\r\n      }\r\n\r\n      if(payloadSoftwareInfoSw?.[0]){\r\n        const sysKeys = Object.keys(payloadSoftwareInfoSw[0]);        \r\n        sysKeys?.forEach(k =>{\r\n          const jointArr = payloadSoftwareInfoSw\r\n            .map(p => [...p[k]])\r\n            .filter(p => p.length > 0);\r\n            softwareInfoSoftware[k] = [...jointArr];\r\n        });\r\n      }*/\r\n      reduceInfo(payloadSoftwareInfoAtlas, softwareInfoAtlas);\r\n      reduceInfo(payloadSoftwareInfoSw, softwareInfoSoftware);\r\n\r\n      const softwareInfo = {Atlas:softwareInfoAtlas, Software: softwareInfoSoftware};\r\n\r\n      return {\r\n        ...state,\r\n        system: systemInfo,\r\n        software: softwareInfo,\r\n        lastSeen: action.payload?.LastSeen,\r\n        locationInfo: action.payload?.LocationInfo\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const UsersContext = createContext();\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  token: null,\r\n  users: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETUSER': {\r\n      return {\r\n        ...state,\r\n        token: action.payload.Token,\r\n        currentUser: {...action.payload.Claims, Surname: action.payload.Surname}\r\n      };\r\n    }\r\n    case 'SETUSERS': {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      };\r\n    }  \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const UsersContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <UsersContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </UsersContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CommunicationContext = createContext();\r\n\r\nconst initialState = {\r\n  logs: [],\r\n  notes: [],\r\n  commonNotes: [],\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETLOGS': {\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n    } \r\n    case 'SETCHATS': {\r\n      return {\r\n        ...state,\r\n        notes: action.payload\r\n      };\r\n    } \r\n    case 'SETCOMMONCHAT': {\r\n      return {\r\n        ...state,\r\n        commonNotes: action.payload\r\n      };\r\n    } \r\n    case 'ADDNOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [action.payload, ...state.notes]\r\n      };\r\n    }\r\n    case 'ADDCOMMONNOTE': {\r\n      return {\r\n        ...state,\r\n        commonNotes: [action.payload, ...state.commonNotes]\r\n      };\r\n    }\r\n    case 'CHANGENOTE': {\r\n      const oldNote = state.notes.filter(n => n.ID === action.payload.ID);\r\n      if(oldNote?.length > 0){\r\n        oldNote[0].Message = action.payload.Message;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes]\r\n      };\r\n    }\r\n    case 'DELETENOTE': {\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes.filter(n => n.ID !== action.payload)]\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CommunicationContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CommunicationContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CommunicationContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const ControlStateContext = createContext();\r\n\r\nconst initialState = {\r\n  serverState: {},\r\n  diagnostic: {}\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETSRVSTATE': {\r\n      return {\r\n        ...state,\r\n        serverState: action.payload\r\n      };\r\n    }\r\n    case 'SETDIAGNOSTIC': {\r\n      return {\r\n        ...state,\r\n        diagnostic: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const ControlStateContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <ControlStateContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </ControlStateContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const SystemVolatileContext = createContext();\r\n\r\nconst initialState = {\r\n  currentVolatile: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETVOLATILE': {\r\n      const newState = {\r\n        ...state,\r\n        currentVolatile: {...state.currentVolatile, ...action.payload}\r\n      };\r\n\r\n      if(action.payload.SimpleMsgType === \"AtlasExited\") {\r\n        newState.currentVolatile.AtlasStatus = null;\r\n      }\r\n      \r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const SystemVolatileContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <SystemVolatileContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </SystemVolatileContext.Provider>\r\n  );\r\n};","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}\r\n\r\nexport function GetTokenHeader(token) {\r\n    return  {\r\n        headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + token  // передача токена в заголовке\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport function getEquipFromTopic(topic ){\r\n\tconst topicParts = topic.split(\"/\");\r\n    if(topicParts.length < 2){\r\n        return null;\r\n    }\r\n\r\n\tconst equip = `${topicParts[0]}/${topicParts[1]}`;\r\n\r\n\treturn equip;\r\n}\r\n\r\nexport const parseLocalString = (value) => value ? new Date(value).toLocaleString() : value;\r\n\r\nexport const isToday = (value) =>\r\n{\r\n    const today = new Date();\r\n    const date = new Date(value);\r\n    return date.setHours(0,0,0,0) == today.setHours(0,0,0,0);\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\nexport async function GetConnectedEquips(token) {\r\n    return await HandlerWrapper('GetConnectedEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetConnectedEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(token, activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(token, currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetPermanentData(token, currType, equipName) {\r\n    return await HandlerWrapper('GetPermanentData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetPermanentData?currType=' + currType+\r\n            '&equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(token, activatedEquipInfo, detailedXilib, verboseXilib) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&detailedXilib=' + detailedXilib +\r\n            '&verboseXilib=' + verboseXilib,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SetEquipLogsOn(token, activatedEquipInfo, hardwareTypes, duration) {\r\n    return await HandlerWrapper('SetEquipLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SetEquipLogsOn?activatedEquipInfo=' + activatedEquipInfo+\r\n            '&hardwareTypes=' + hardwareTypes +\r\n            '&duration=' + duration,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllEquips(token, withDisabled = false) {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const response = await axios.get(\r\n            EquipsServiceAddress + EquipsController + '/GetAllEquips?withDisabled='+withDisabled,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetAllTables(token, equipName) {\r\n    return await HandlerWrapper('GetAllDBTableNames', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController + \r\n            '/GetAllDBTableNames?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetTableContent(token, equipName, tableType, tableName) {\r\n    return await HandlerWrapper('GetTableContent', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetTableContent?equipName=' + equipName+\r\n            '&tableType=' + tableType+\r\n            '&tableName=' + tableName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateDBInfo(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('UpdateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/UpdateDBInfo?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RecreateDBInfo(token, activatedEquipInfo) {\r\n    return await HandlerWrapper('RecreateDBInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RecreateDBInfo?activatedEquipInfo=' + activatedEquipInfo,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DisableEquipInfo(token, equipName, disabled) {\r\n    return await HandlerWrapper('DisableEquipInfo', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DisableEquipInfo?equipName=' + equipName+\r\n            '&disabled=' + disabled,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetCommunications(token, equipName) {\r\n    return await HandlerWrapper('GetCommunicationsData', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/GetCommunicationsData?equipName=' + equipName,\r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendNewNote(token, equipName, msgType, id, message) {\r\n    return await HandlerWrapper('SendNewNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendNewNote?equipName=' + equipName+\r\n            '&msgType=' + encodeURIComponent(msgType)+\r\n            '&id=' + id, // +\r\n            // '&message=' + encodeURIComponent(message),\r\n            message, // null, \r\n            GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function DeleteNote(token, equipName, msgType, id) {\r\n    return await HandlerWrapper('DeleteNote', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/DeleteNote?equipName=' + equipName+\r\n            '&msgType=' + encodeURIComponent(msgType)+\r\n            '&id=' + id,\r\n            null, GetTokenHeader(token));\r\n        return response.data;\r\n    });\r\n};\r\n","import react, { useContext } from 'react';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nexport function useSetCurrEquip() {\r\n  console.log(\"useSetCurrEquip\");\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [_, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const setEquipInfo = async (equipInfo, type) => {\r\n    const token = usersState.token;\r\n    const connectedEquip = allEquipsState.connectedEquips?.includes(equipInfo)\r\n\r\n    systemVolatileDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: 'RESET', payload: true });    \r\n    currEquipDispatch({ type: type, payload: equipInfo }); \r\n\r\n    const fullInfo = await EquipWorker.GetPermanentData(token, \"FullInfo\", equipInfo);\r\n    currEquipDispatch({ type: 'SETFULLINFO', payload: fullInfo }); \r\n    // if(connectedEquip){\r\n      await EquipWorker.Activate(token, equipInfo, currEquipState.equipInfo);\r\n    // }\r\n  };\r\n\r\n  return setEquipInfo;\r\n}\r\n","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst AdminController = '/equips';\r\n\r\nexport async function GetAllUsers(token) {\r\n    return await HandlerWrapper('GetAllUsers', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetAllUsers';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function UpdateUser(user, token) {\r\n    return await HandlerWrapper('UpdateUser', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/UpdateUser',\r\n            user, //json,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Login(login) {\r\n    return await HandlerWrapper('Login', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + AdminController + '/Login',\r\n            login, \r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    \"Accept\": \"application/json\",\r\n                }\r\n            });\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetServerLogs(token) {\r\n    return await HandlerWrapper('GetServerLogs', async () => {\r\n        const path = EquipsServiceAddress + AdminController + '/GetServerLogs';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader, GetTokenHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst ControlController = '/equips';\r\n\r\nexport async function GetServerState(token) {\r\n    return await HandlerWrapper('GetServerState', async () => {\r\n        const path = EquipsServiceAddress + ControlController + '/GetServerState';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function GetServerMetrics(token) {\r\n    return await HandlerWrapper('GetServerState', async () => {\r\n        const path = EquipsServiceAddress + ControlController + '/metrics';\r\n        const header = GetTokenHeader(token);        \r\n        const response = await axios.get(path, header);\r\n\r\n        return response.data;\r\n    });\r\n};\r\n","import React, { useReducer, createContext } from 'react';\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../model/constants';\r\n\r\nexport const EquipLogContext = createContext();\r\n\r\nconst initialState = {\r\n  currentLog: {},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'ADDLOG': {\r\n      return {\r\n        ...state,\r\n        currentLog: action.payload\r\n      };\r\n    }\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const EquipLogContextProvider = props => {\r\n  console.log(\"render EquipLogContextProvider\");\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <EquipLogContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </EquipLogContext.Provider>\r\n  );\r\n};","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocationOffOutlinedIcon from '@material-ui/icons/LocationOffOutlined';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"../../styles/styles.css\";\r\nimport { SummaryTabIndex, SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex, SummaryLogsTabPanelIndex,\r\n  CommonChat,\r\n  AdminTabIndex,\r\n  ControlLogTabPanelIndex,  ControlTabIndex, ControlDiagnosticTabPanelIndex } from '../../model/constants';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport { ControlStateContext } from '../../context/controlState-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as ControlWorker from '../../workers/controlWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../hooks/useWebSocket'\r\nimport { SettingsBackupRestore } from '@material-ui/icons';\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n  \r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 270,    \r\n  },\r\n  tabControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 800,    \r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n    display: 'flex',\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"white\",\r\n  },\r\n  userName:{\r\n    // textAlign: \"end\",\r\n    width: `calc(100% - 180px)`,\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n  },\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext);  \r\n  \r\n  // const [currEquip, setCurrEquip] = useState('none');\r\n  const [userName, setUserName] = useState('');\r\n  //const [tabIndex, setTabIndex] = useState(0);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const token = usersState.token;\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.value;// select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  \r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const selectedTabPanel = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    //getEvents(equipInfo);\r\n    \r\n    if(SummaryTabIndex === selectedTab && SummaryHistoryTabPanelIndex === selectedTabPanel){        \r\n      getEvents(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryChatTabPanelIndex === selectedTabPanel){        \r\n      getChats(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryDBTabPanelIndex === selectedTabPanel && equipInfo){\r\n      getAllDBTables(equipInfo);\r\n    }\r\n  }\r\n\r\n  const getEvents = async (equipInfo) =>\r\n  {\r\n    const endDate = new Date();\r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipInfo, getUSFullDate(endDate), getUSFullDate(endDate));\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  }\r\n\r\n  const getLogs = async () =>\r\n  {\r\n    const logs = await AdminWorker.GetServerLogs(token);\r\n    communicationDispatch({ type: 'SETLOGS', payload: logs }); \r\n  }\r\n\r\n  const getDiagnostics = async () =>\r\n  {\r\n    const metrics = await ControlWorker.GetServerMetrics(token);\r\n    controlDispatch({ type: 'SETDIAGNOSTIC', payload: metrics }); \r\n  }\r\n\r\n  const getAllDBTables = async (equipInfo) =>\r\n  {\r\n    const allTables = await EquipWorker.GetAllTables(token, equipInfo);\r\n    currEquipDispatch({ type: 'SETALLDBTABLES', payload: allTables }); \r\n  }\r\n\r\n  const getChats = async (equipInfo) =>\r\n  {\r\n    const notes = await EquipWorker.GetCommunications(token, equipInfo);\r\n    communicationDispatch({ \r\n      type: 'SETCHATS', \r\n      payload: notes \r\n    }); \r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUserName(usersState?.currentUser?.Surname);\r\n    })();\r\n  }, [usersState.currentUser]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n  const equipInfo = currEquipState.equipInfo;\r\n\r\n  const onTabIndexChange = async (event, newValue) => {\r\n    if(SummaryTabIndex === selectedTab && SummaryDBTabPanelIndex === newValue && equipInfo){\r\n      getAllDBTables(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryHistoryTabPanelIndex === newValue){        \r\n      getEvents(equipInfo);\r\n    }\r\n    else if(SummaryTabIndex === selectedTab && SummaryChatTabPanelIndex === newValue){        \r\n      getChats(equipInfo);\r\n    }\r\n    else if(ControlTabIndex === selectedTab && ControlLogTabPanelIndex === newValue){        \r\n      getLogs();\r\n    }\r\n    else if(ControlTabIndex === selectedTab && ControlDiagnosticTabPanelIndex === newValue){        \r\n      getDiagnostics();\r\n    }\r\n\r\n    appDispatch({ type: 'SETTAB', payload: {tab: selectedTab, panel: newValue} }); \r\n  };\r\n\r\n  const onUpdateDBInfo = async () =>{\r\n    if(equipInfo){\r\n      const res = await EquipWorker.UpdateDBInfo(token, equipInfo);\r\n    }\r\n  }\r\n\r\n  const isDBInfoStateUpdating = currEquipState.remoteaccess?.DBInfoStateUpdating;\r\n  const isValidSummaryTab = selectedTab === SummaryTabIndex && equipInfo;\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"mainToolbarCombobox\"\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                <ListSubheader className={classes.optionStyle}>Выбрано</ListSubheader>\r\n                {allEquipsState.selectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n                <ListSubheader className={classes.optionStyle}>Активно</ListSubheader>\r\n                {allEquipsState.connectedEquips?.map((i, ind) => (\r\n                    <MenuItem key={ind.toString()} value={i} className={classes.optionStyle}>\r\n                      <ListItemIcon>\r\n                        {/* <LocationOffOutlinedIcon fontSize=\"small\" /> */}\r\n                        <LocationOnOutlinedIcon fontSize=\"large\" style={{ color: 'white' }}/>\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"inherit\">{i}</Typography>                      \r\n                    </MenuItem>\r\n                    ))\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <Tabs value={selectedTabPanel} onChange={onTabIndexChange} aria-label=\"simple tabs example\" className={classes.tabControl}>\r\n              <Tab label=\"Главная\" id= \"mainTabPanel\" key=\"mainTabPanel\"/>\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"БД\" id= \"dbTabPanel\" key=\"dbTabPanel\"/> : <div key=\"dbTabPanel\"></div>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"История\" id= \"histTabPanel\" key=\"histTabPanel\"/> : <div></div>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"Коммуникации\" id= \"chatTabPanel\" key=\"chatTabPanel\"/> : <div></div>\r\n              }\r\n              {isValidSummaryTab?\r\n                  <Tab label=\"Диагностика\" id= \"logsTabPanel\" key=\"logsTabPanel\"/> : <div></div>\r\n              }       \r\n              {selectedTab === ControlTabIndex?\r\n                  <Tab label=\"Диагностика\" id= \"diagnosticTabPanel\" key=\"diagnosticTabPanel\"/> : <div></div>              \r\n              }                  \r\n              {selectedTab === ControlTabIndex?\r\n                  <Tab label=\"Логи\" id= \"logsTabPanel\" key=\"logsTabPanel\"/> : <div></div>              \r\n              }            \r\n            </Tabs>\r\n            {selectedTab === SummaryTabIndex?\r\n                <Button variant=\"contained\" \r\n                    color={isDBInfoStateUpdating ? \"secondary\" : \"primary\"}\r\n                    className={classes.button} \r\n                    onClick={onUpdateDBInfo} \r\n                >\r\n                  {isDBInfoStateUpdating ? 'Обновляется' : 'Обновить'}\r\n                </Button> : <></>\r\n            }\r\n            <Typography variant=\"h6\" noWrap align=\"right\"  className={classes.userName}> \r\n              {userName}\r\n            </Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { SystemVolatileContext } from '../context/systemVolatile-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\nimport { UsersContext } from '../context/users-context';\r\nimport { EventsContext } from '../context/events-context';\r\nimport { EquipLogContext } from '../context/equipLog-context';\r\nimport { CommunicationContext } from '../context/communication-context';\r\nimport * as EquipWorker from '../workers/equipWorker'\r\n\r\nimport {sessionUid, getEquipFromTopic} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n    const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n    const [usersState, usersDispatch] = useContext(UsersContext);\r\n    const [equipLogs, equipLogsDispatch] = useContext(EquipLogContext);\r\n    const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n    const [connection, setConnection] = useState(null);\r\n    const equipInfo = useRef(currEquipState.equipInfo);\r\n    \r\n    function createSocket(){\r\n        try {   \r\n            console.log(`Status: Creating socket ${sessionUid}\\n`);         \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!usersState.token){\r\n           return;\r\n        }\r\n\r\n        createSocket();\r\n    }, [usersState.token]);\r\n\r\n    useEffect(() => {\r\n        equipInfo.current = currEquipState.equipInfo;\r\n    }, [currEquipState.equipInfo]);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = async function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n\r\n                const equips = await EquipWorker.GetConnectedEquips(usersState.token);\r\n                allEquipsDispatch({ type: 'SETCONNECTEDEQUIPS', payload: equips ? equips : [] });     \r\n\r\n                // Send a ping every 10s\r\n                // to keep the connection live\r\n                setInterval(function(){\r\n                    console.log(`pinging...\\n`);\r\n                    connection.send('ping');\r\n                }, 10000);\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Closed ${sessionUid}\\n`);\r\n                currEquipDispatch({ type: 'RESET', payload: true });    \r\n                setTimeout(function() {\r\n                    console.log(`Status: Reconnecting ${sessionUid}\\n`);\r\n                    createSocket();\r\n                  }, 1000);\r\n              };\r\n              \r\n            connection.onerror = function(err) {\r\n                console.error('Socket encountered error: ', err.message, 'Closing socket');\r\n                connection.close();\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                const topic = data?.Topic;\r\n                if(!topic){\r\n                    return;\r\n                }\r\n\r\n                if(topic.startsWith('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                    return;\r\n                }   \r\n                else if(topic.startsWith('Events'))\r\n                {\r\n                    eventsDispatch({ type: 'ADDEVENT', payload: data.Events }); \r\n                    return;\r\n                }  \r\n                else if(topic.startsWith('CommonChat'))\r\n                {\r\n                    const note = data? JSON.parse(data.Data) : null;\r\n                    communicationDispatch({ type: 'ADDCOMMONNOTE', payload: note}); \r\n                    return;\r\n                }                  \r\n\r\n                const equip = getEquipFromTopic(data?.Topic);\r\n                if(!equip || equip !== equipInfo.current){\r\n                    return;\r\n                }\r\n\r\n                const path = data.Topic.replace(equip, '');\r\n                if(path.startsWith('/ARM/Hardware/Complex'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }\r\n                else if(path.startsWith('/images'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETIMAGES', payload: values }); \r\n                }            \r\n                else if(path.startsWith('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(path.startsWith('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(path.startsWith('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(path.startsWith('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(path.startsWith('/aec/'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETAEC', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/Complex'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Software/msg'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    // currEquipDispatch({ type: 'SETSOFTWAREMSG', payload: values }); \r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(path.startsWith('/remoteaccess'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETREMOTEACCESS', payload: values }); \r\n                }\r\n                else if(path.startsWith('/ARM/Hardware/Processor') ||\r\n                        path.startsWith('/ARM/Hardware/HDD') || \r\n                        path.startsWith('/ARM/Hardware/Memory'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    systemVolatileDispatch({ type: 'SETVOLATILE', payload: values }); \r\n                }\r\n                else if(path.startsWith('/chat'))\r\n                {\r\n                    const note = data? JSON.parse(data.Data) : null;\r\n                    communicationDispatch({ type: 'ADDNOTE', payload: note}); \r\n                }\r\n                else if(path.startsWith('/logs'))\r\n                {\r\n                    const log = data? JSON.parse(data.Data) : null;\r\n                    equipLogsDispatch({ type: 'ADDLOG', payload: log}); \r\n                }\r\n               \r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    // width:'10%',\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n    fontWeight: 'bold',\r\n    marginRight: '0.5em',\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n            color={props.buttonColor ? props.buttonColor : \"primary\"}\r\n            className={classes.button} \r\n            onClick={props.onClick} \r\n            disabled={props.disabled}\r\n        >\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardSwitchedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.switchDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Switch\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const detectors = props.detectors;\r\n  const aecs = props.aecs;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n            <CardRow descr=\"Поле детектора\" value={i.DetectorField}></CardRow>            \r\n            <CardRow descr=\"Скорость\" value={i.DetectorFrameRate ? i?.DetectorFrameRate + ' к/сек' : ''}></CardRow>\r\n            {aecs?\r\n              <>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {bull}АКЭ\r\n                </Typography>\r\n                <CardRow descr=\"Состояние\" value={aecs.State?.Aec_enabled ? \"Вкл\" : \"Выкл\"}></CardRow>\r\n                <CardRow descr=\"Поля АКЭ\" value={aecs.State?.Aec_fields}></CardRow>\r\n                <CardRow descr=\"Плотность\" value={aecs.State?.Aec_density}></CardRow>\r\n              </> : <></>\r\n            }\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  const generatorState = generator?.State;\r\n  const heatStatus = generator?.State?.HeatStatus;\r\n  \r\n  const mas = generatorState?.Post_mas || generatorState?.Mas;\r\n  const kv = generatorState?.Post_kv || generatorState?.Kv;\r\n  const ma = generatorState?.Post_ma || generatorState?.Ma;\r\n  const ms = generatorState?.Post_time || generatorState?.Ms;\r\n\r\n  const scopyMas = generatorState?.Scopy_post_mas || generatorState?.Scopy_mas;\r\n  const scopyKv = generatorState?.Scopy_post_kv || generatorState?.Scopy_kv;\r\n  const scopyMa = generatorState?.Scopy_post_ma || generatorState?.Scopy_ma;\r\n  const scopyMs = generatorState?.Scopy_post_ms || generatorState?.Scopy_ms;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" \r\n          value={heatStatus === 2 ? \"Высокий\" : heatStatus === 3 ? \"Критический\" : heatStatus === 1 ? \"Норм\" : \"\"}\r\n          rightColor={heatStatus === 2 ? \"yellow\" : heatStatus === 3 ? \"red\" :  heatStatus === 1 ? \"green\" : \"gray\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Фокус\" value={\r\n          generator?.State?.Focus === 1 ? \"Большой\" : generator?.State?.Focus === 0 ? \"Малый\" : \"\"\r\n        }></CardRow>\r\n        <CardRow descr=\"Педаль\" \r\n          value={ \r\n            generatorState?.PedalPressed === 1 ? \"Графия\" : \r\n            generatorState?.PedalPressed === 2 || generatorState?.PedalPressed === 4 ? \"Скопия\" : \r\n            generatorState?.PedalPressed === 3 ? \"Графия на копии\" :\r\n            \"Не нажата\"} \r\n          rightColor={generatorState?.PedalPressed >= 1 && generatorState?.PedalPressed <= 4? \"green\" : undefined }\r\n        ></CardRow>\r\n        <CardRow descr=\"Техника\" value={\r\n          generatorState?.Points_mode === 2 ? \"2х точка\" : generatorState?.Points_mode === 3 ? \"3х точка\" : \"\"\r\n        }></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Графия\r\n        </Typography>        \r\n        <CardRow descr=\"Количество электричества\" value={mas ? mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={kv ? kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Сила тока\" value={ma ? ma + ' мА' : ''}></CardRow>\r\n        <CardRow descr=\"Время\" value={ms ? ms + ' мс' : ''}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Скопия\r\n        </Typography>\r\n        <CardRow descr=\"Режим\" value={generatorState?.Scopy_mode}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={scopyKv ? scopyKv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Сила тока\" value={scopyMa ? scopyMa + ' мА' : ''}></CardRow>\r\n        <CardRow descr=\"Время\" value={scopyMs ? scopyMs + ' мс' : ''}></CardRow>\r\n\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst unifyArr = (arr, propName, activePropName = 'Active') => {\r\n  if (!arr){\r\n    return [];\r\n  }\r\n\r\n  var unifiedArr = [...new Set(arr.map(a => a[propName]))]\r\n    .map(p => arr.find( a => a[propName] == p))\r\n    .filter(p => p[activePropName])\r\n    .reverse();\r\n\r\n  return unifiedArr;\r\n}\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  const volatile = props.volatile;\r\n  const logicalDisks = unifyArr(system?.LogicalDisks?.flat().reverse(), 'Letter'); // HDD\r\n  const physicalDisks = unifyArr(system?.HardDrives?.flat().reverse(), 'FriendlyName');  // PhysicalDisks\r\n  const lans = unifyArr(system?.Lans?.flat().reverse(), 'Adapter'); // Network\r\n  const vgas = unifyArr(system?.VideoAdapters?.flat().reverse(), 'CardName'); // VGA\r\n  const monitors = unifyArr(system?.Monitors?.flat().reverse(), 'MonitorName'); // Monitor\r\n  const printers = unifyArr(system?.Printers?.flat().reverse(), 'PrinterName'); //Printer\r\n  const processor = system?.Motherboards?.[0]?.[0]; // Processor\r\n  //\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        {processor?.Cpu || volatile?.Processor?.CPULoad || volatile?.Processor?.CPULoad === 0? \r\n          <>\r\n            <CardRow descr=\"Модель\" value={processor?.Cpu} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Загрузка\" value={volatile?.Processor?.CPULoad+'%'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        {volatile?.Memory?.MemoryTotalGb || volatile?.Memory?.MemoryFreeGb ? \r\n          <>\r\n            <CardRow descr=\"Всего\" value={volatile?.Memory?.MemoryTotalGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={volatile?.Memory?.MemoryFreeGb+' Гб'}></CardRow>\r\n          </> : <></>}\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {logicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {physicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.mediatype}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.SizeGb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {lans?.filter(i => i.Adapter).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Adapter} value={i.Ip}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {vgas?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.CardName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.MemoryGb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.DrvDate} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {monitors?.map((i, ind) => (\r\n          // <CardRow key={ind.toString()} descr={i.MonitorName} value={i.Width+'x'+i.Height}></CardRow>\r\n          <CardRow key={ind.toString()} descr={i.MonitorName} value={i.SerialNumber} rightWidth={'100%'}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {printers?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.PrinterName} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.PrinterPort} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        {/* <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow> */}\r\n        <CardRow descr=\"Возр. группа\" \r\n          value={ \r\n            organAuto?.AgeId === 1 ? \"0 - 0.5\" : \r\n            organAuto?.AgeId === 2 ? \"0.5 - 2\" : \r\n            organAuto?.AgeId === 3 ? \"2 - 7\" :\r\n            organAuto?.AgeId === 4 ? \"7 - 12\" :\r\n            organAuto?.AgeId === 5 ? \"12 - 17\" :\r\n            \"> 17\"} >\r\n        </CardRow>\r\n        <CardRow descr=\"Телосложение\"  value={ \r\n              organAuto?.Constitution === 1 ? \"худой\" : \r\n              organAuto?.Constitution === 3 ? \"толстый\" : \r\n              organAuto?.Constitution === 4 ? \"очень толстый\" :\r\n              \"норма\"}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport {parseLocalString} from '../../utilities/utils'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\nimport { ComplexTypeImages } from '../../model/constants'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n  },\r\n  dimmed:{\r\n    height: 0,\r\n    paddingTop: '100%', \r\n    backgroundColor: 'gray',\r\n    filter: 'brightness(40%)',\r\n  }\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const pathKey = Object.keys(ComplexTypeImages).find(k => \r\n    {\r\n      return ComplexTypeImages[k].some(v => equipInfo?.startsWith(v));\r\n    });\r\n  \r\n  const isConnected = props.isConnected;\r\n  const lastSeen = props.lastSeen;\r\n  const hospital = props.hospital;\r\n  const address = props.address;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={isConnected ? equipClasses.media : equipClasses.dimmed}\r\n        // image=\"./girl.jpg\"\r\n        image={\"./\" + pathKey}\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n          {hospital? <div>ЛПУ: {hospital} </div>: <></>}\r\n          {address? <div>Адрес: {address} </div>: <></>}\r\n          {lastSeen? <div>Посл. сообщение: {parseLocalString(lastSeen)} </div>: <></>}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"#f50057\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={i.State ? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow, CardSwitchedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {  \r\n  console.log(`! render RemoteAccessCard`);\r\n  const [detailedXilib, setDetailedXilib] = useState(false);\r\n  const [verboseXilib, setVerboseXilib] = useState(false);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const token = props.token;\r\n  const onRunTeamViewer = async () => {\r\n    if(equipInfo)\r\n    {\r\n      const res = await EquipWorker.RunTeamViewer(token, equipInfo);\r\n    }\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    if(equipInfo)\r\n    {\r\n      const res = await EquipWorker.RunTaskManager(token, equipInfo);\r\n    }\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    if(equipInfo)\r\n    {\r\n      const res = await EquipWorker.SendAtlasLogs(token, equipInfo);\r\n    }\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    if(equipInfo)\r\n    {\r\n      const res = await EquipWorker.XilibLogsOn(token, equipInfo, detailedXilib, verboseXilib);\r\n    }\r\n  };\r\n\r\n  const onDetailedXilib = async () => {\r\n    setDetailedXilib(!detailedXilib);\r\n  };\r\n\r\n  const onVerboseXilib = async () => {\r\n    setVerboseXilib(!verboseXilib);\r\n  };\r\n\r\n  const remoteaccess = props.remoteaccess;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} \r\n          title={!remoteaccess.Xilogs? 'Не опред' : remoteaccess.Xilogs.on ? 'Выключить' : 'Включить'} \r\n          onClick={onXilibLogs}\r\n          buttonColor={!remoteaccess.Xilogs? undefined : remoteaccess.Xilogs.on ? \"secondary\" : \"primary\"}\r\n          disabled={!remoteaccess.Xilogs}\r\n        ></CardButtonedRow>\r\n        <CardSwitchedRow descr={'Детальный'} onChange={onDetailedXilib}></CardSwitchedRow>\r\n        <CardSwitchedRow descr={'Подробный'} onChange={onVerboseXilib}></CardSwitchedRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Режим\" value={stand?.State?.Mode}></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Угол наклона трубки\" value={stand?.State?.Tube_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона деки\" value={stand?.State?.Deck_Incline}></CardRow>\r\n        <CardRow descr=\"Угол наклона детектора\" value={stand?.State?.Camera_Incline}></CardRow>\r\n        <CardRow descr=\"Фокусное расстояние\" value={stand?.State?.Ffd_Current}></CardRow>\r\n        <CardRow descr=\"Высота стола\" value={stand?.State?.Deck_Height}></CardRow>\r\n        <CardRow descr=\"Высота излучателя\" value={stand?.State?.Uarm_Height}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {stand?.State?.ErrorDescriptions?.length ? \r\n          stand.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst unifyArr = (arr, propName, activePropName = 'Active') => {\r\n  if (!arr){\r\n    return [];\r\n  }\r\n\r\n  var unifiedArr = [...new Set(arr.map(a => a[propName]))]\r\n    .map(p => arr.find( a => a[propName] == p))\r\n    .filter(p => p[activePropName])\r\n    .reverse();\r\n\r\n  return unifiedArr;\r\n}\r\n\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const volatile = props.volatile;\r\n  const dbStates = volatile?.DBStates;\r\n  const software = props.software?.Software;\r\n  const atlasUser = volatile?.AtlasUser || volatile?.AtlasStatus?.AtlasUser;\r\n  /*const atlas = Array.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;  \r\n  const osInfo = Array.isArray(software?.OsInfos) ? software?.OsInfos[0] : null; \r\n  const sql = Array.isArray(software?.SqlServices) ? software?.SqlServices[0] : null; \r\n  const databases = dbStates ?? software?.SqlDatabases;*/\r\n  const atlas = unifyArr(software?.Atlas?.flat(), 'Id')?.[0]; // NetworkArray.isArray(software?.Atlas) ? software?.Atlas[0] : null;  // props.software?.Atlas;\r\n  const osInfo = unifyArr(software?.OsInfos?.flat(), 'OsCaption')?.[0]; \r\n  const sql = unifyArr(software?.SqlServices?.flat(), 'SqlName')?.[0]; \r\n  const databases = dbStates ?? unifyArr(software?.SqlDatabases?.flat(), 'Name');  //SqlDatabases;\r\n  const atlasRunning = volatile?.AtlasStatus?.AtlasRunning;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={osInfo?.OsCaption} value={osInfo?.OsVersion}></CardRow>\r\n        <CardRow descr={sql?.SqlName} value={sql?.SqlVersion}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={osInfo?.CurrentUser}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {volatile?.ErrorDescriptions?.length ? \r\n          volatile.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Базы данных\r\n        </Typography>\r\n        {databases?.length ? \r\n          databases.map((i, ind) => (\r\n            <CardRow key={ind.toString()} descr={i.Name} value={i.Status}></CardRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n              value={atlasRunning? \"запущен\" : \"не запущен\"}\r\n              rightColor={!atlasRunning? \"red\" : \"green\"}></CardRow>\r\n        <CardRow descr=\"Версия\" value={atlas?.AtlasVersion}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={atlas?.XilibsVersion}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={atlas?.ComplexType}></CardRow>\r\n        <CardRow descr=\"Язык\" value={atlas?.Language}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={atlasUser?.User ? atlasUser?.Role : 'Пользователь'} \r\n          value={atlasUser?.User ? atlasUser?.User : 'Не авторизован'}\r\n          rightWidth={'100%'}\r\n        ></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.AtlasErrorDescriptions?.length ? \r\n          software.AtlasErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst ImagesCard = React.memo((props) => {\r\n  console.log(`! render ImagesCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const images = props.images;\r\n  const today = images?.Today;\r\n  const current = images?.Current;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Снимки\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={images?.ImageCount}></CardRow>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}За сегодня\r\n        </Typography>\r\n        {today?.SingleGraphy ? <CardRow descr=\"Графия\" value={today.SingleGraphy}></CardRow> : <></>}\r\n        {today?.Scopy ? <CardRow descr=\"Скопия\" value={today.Scopy}></CardRow> : <></>}\r\n        {today?.Stitching ? <CardRow descr=\"Сшивка\" value={today.Stitching}></CardRow> : <></>}\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Последний\r\n        </Typography>\r\n        <CardRow descr=\"Тип\" value={current?.Type}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={current?.Kv}></CardRow>\r\n        <CardRow descr=\"Ток\" value={current?.Mas ?? current?.Ma}></CardRow>\r\n        <CardRow descr=\"Доза\" value={ current?.Dose}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default ImagesCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    margin: '1em',\r\n  },\r\n});\r\n\r\nexport default function NotifyDlg(props) {\r\n  const classes = useStyles();  \r\n  const [open, setOpen] = React.useState(!!props.text);\r\n\r\n//   if(!!props.text && !open){\r\n//     setOpen(true);\r\n//   }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{props.title}</DialogTitle>\r\n      <Typography className={classes.text}>{props.text}</Typography>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { SystemVolatileContext } from '../../../context/systemVolatile-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nimport DetectorCard from '../../cards/DetectorCard'\r\nimport GeneratorCard from '../../cards/GeneratorCard'\r\nimport SystemCard from '../../cards/SystemCard'\r\nimport OrganAutoCard from '../../cards/OrganAutoCard'\r\nimport EquipImageCard from '../../cards/EquipImageCard'\r\nimport DicomCard from '../../cards/DicomCard'\r\nimport RemoteAccessCard from '../../cards/RemoteAccessCard'\r\nimport StandCard from '../../cards/StandCard'\r\nimport DosimeterCard from '../../cards/DosimeterCard'\r\nimport SoftwareCard from '../../cards/SoftwareCard'\r\nimport ImagesCard from '../../cards/ImagesCard'\r\nimport NotifyDlg from '../../dialogs/NotifyDlg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryMainTabPanel(props) {\r\n  console.log(\"render SummaryMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [systemVolatileState, systemVolatileDispatch] = useContext(SystemVolatileContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const notifyText = currEquipState.remoteaccess?.FtpSendResult;\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const isEquipConnected = allEquipsState.connectedEquips?.includes(equipInfo);\r\n  const lastSeen = currEquipState.lastSeen;\r\n  const hospital = currEquipState.locationInfo?.HospitalName;\r\n  const address = currEquipState.locationInfo?.HospitalAddress;\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard \r\n          equipInfo={equipInfo} \r\n          isConnected={isEquipConnected} \r\n          lastSeen={lastSeen}\r\n          hospital={hospital}\r\n          address={address}\r\n        ></EquipImageCard>\r\n        <SystemCard \r\n          system={currEquipState.system} \r\n          volatile={isEquipConnected ? systemVolatileState.currentVolatile : null}></SystemCard>\r\n        \r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={isEquipConnected ? currEquipState.organAuto : null}></OrganAutoCard>\r\n        <ImagesCard images={isEquipConnected ? currEquipState.images : null}></ImagesCard>\r\n        <GeneratorCard generator={isEquipConnected ? currEquipState.generator : null}></GeneratorCard>\r\n        <DetectorCard detectors={isEquipConnected ? currEquipState.detectors : null} aecs={currEquipState.aecs}></DetectorCard>\r\n        <StandCard stand={isEquipConnected ? currEquipState.stand : null}></StandCard>\r\n        <DosimeterCard dosimeter={isEquipConnected ? currEquipState.dosimeter : null}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={isEquipConnected ? currEquipState.equipInfo : null} remoteaccess={currEquipState.remoteaccess} token={usersState.token}></RemoteAccessCard>\r\n        <DicomCard dicom={isEquipConnected ? currEquipState.dicom : null}></DicomCard>\r\n        <SoftwareCard \r\n          software={isEquipConnected ? currEquipState.software : null} \r\n          volatile={isEquipConnected ? systemVolatileState.currentVolatile : null}></SoftwareCard>\r\n      </div>\r\n      {notifyText ? <NotifyDlg title='Данные FTP' text={'Данные посланы ' + (currEquipState.remoteaccess?.FtpSendResult ? 'успешно' : 'с ошибками') }></NotifyDlg> : <></>}\r\n    </div>\r\n  );\r\n}","import React, { useDebugValue } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    minHeight: 40,\r\n    maxHeight: '100%',\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n    wordWrap: 'break-word',\r\n  },\r\n  simpleCell:{\r\n    wordWrap: 'break-word',\r\n  },\r\n  boldCell:{\r\n    wordWrap: 'break-word',\r\n    fontWeight: 'bolder',\r\n    fontSize: 'larger',\r\n  },  \r\n  checkBox:{\r\n    color: 'green',\r\n  },  \r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\r\n  const [orderBy, setOrderBy] = React.useState(props.defaultSort ?? '');\r\n  const [order, setOrder] = React.useState( props.defaultSortOrder ?? 'asc');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRequestSort = (property) => () => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const rows = stableSort(props.rows ? props.rows : [], getComparator(order, orderBy)) ?? [];\r\n  if(rows.length < page * rowsPerPage){\r\n    setPage(0);\r\n  }\r\n\r\n  const columns = props.columns;\r\n  const selectedRow = props.selectedRow;\r\n  let onRowClick = props.onRowClick;\r\n  if(!onRowClick){\r\n    onRowClick = (ev, row) => {};\r\n  }\r\n  const isRowBold = props.isRowBold;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                // <TableCell\r\n                //   key={column.id}\r\n                //   align={column.align}\r\n                //   style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                // >\r\n                //   {column.label}\r\n                // </TableCell>\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, maxWidth: column.maxWidth}}  \r\n                  sortDirection={orderBy === column.id ? order : false}\r\n                >\r\n                  {!column.sortable? \r\n                    column.label:\r\n                    <TableSortLabel\r\n                      active={orderBy === column.id}\r\n                      direction={orderBy === column.id ? order : 'asc'}\r\n                      onClick={handleRequestSort(column.id)}\r\n                    >\r\n                      {column.label}                    \r\n                    </TableSortLabel>\r\n                  }\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowInd) => {\r\n              return (\r\n                <TableRow \r\n                    selected={selectedRow ? row.EquipName === selectedRow : false} \r\n                    hover \r\n                    role=\"checkbox\" \r\n                    tabIndex={-1} \r\n                    key={rowInd} \r\n                    onClick={(ev) => onRowClick(ev, row)} >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    const checked = column.format ? column.format(row) : value;\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={\r\n                          column.hasErrors && column.hasErrors(value) ? \r\n                            classes.errorCell : \r\n                            isRowBold && isRowBold(row) ?\r\n                              classes.boldCell :\r\n                              classes.simpleCell\r\n                        }\r\n                      >\r\n                        <div style={{ maxWidth: column.maxWidth}}>\r\n                        {column.checked ? \r\n                          <Checkbox\r\n                            style ={{\r\n                              color: checked ? 'green' : 'gray', //\"#00e676\",\r\n                            }}\r\n                            checked={checked}\r\n                            onChange={(ev) => props.onSelect ? props.onSelect(ev, row) : false}\r\n                            inputProps={{ 'aria-label': 'select all desserts', 'data-column' : column.id }}\r\n                          /> : \r\n                          column.format ? column.format(value) : \r\n                            column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : \r\n\r\n                            column.button ? \r\n                              <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={() => column.onEdit(row)}>\r\n                                    {column.label}\r\n                              </Button> :\r\n                              value}\r\n                        </div>  \r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React, {useState, useEffect, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport CommonTable from '../../tables/CommonTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"table\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  },\r\n  listPanel:{\r\n    width: \"285px\",\r\n    // backgroundColor: 'white',\r\n    backgroundColor: theme.palette.background.paper,\r\n    // maxHeight: \"900px\",\r\n    overflowY: 'auto',\r\n    display: 'table-cell',\r\n  },\r\n  content: {\r\n    // marginTop: 64, // `${drawerWidth}px`,\r\n    // flexGrow: 1,\r\n    width: '100%', \r\n    backgroundColor: theme.palette.background.default,\r\n    paddingLeft: theme.spacing(1),\r\n    display: 'table-cell',\r\n  },\r\n  button:{\r\n    marginBottom: '1em',\r\n    marginTop: '1em',\r\n  }\r\n}));\r\n\r\nexport default function SummaryBDTabPanel(props) {\r\n  console.log(\"render SummaryBDTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [tableContent, setTableContent] = React.useState('');\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const allDBs = currEquipState.allDBs;\r\n  const allDBTables = currEquipState.allDBTables;\r\n\r\n  useEffect(() => {\r\n    if(Object.keys(currEquipState.allDBTables).length === 0){\r\n      setTableContent('');\r\n    }  \r\n}, [currEquipState.allDBTables]);\r\n\r\n  const getColumn = (key) => { \r\n    if(key.toLowerCase() === 'active')\r\n    {\r\n      return { \r\n        id: key, label: key, minWidth: 100, maxWidth: 100,\r\n        format: (value) => value ? '+' : '-'\r\n      }\r\n    }\r\n\r\n    return { id: key, label: key, minWidth: 100, maxWidth: 300 }\r\n  }\r\n\r\n  const token = usersState.token;\r\n  const equipInfo = currEquipState.equipInfo;\r\n  const handleListItemClick = async (event, index, type, text) => {\r\n    const content = await EquipWorker.GetTableContent(token, equipInfo, type, text);\r\n    let values = []\r\n    if(Array.isArray(content)){\r\n      values = content.map(c => JSON.parse(c)).flat(1);\r\n    }\r\n    else{\r\n      values = content? JSON.parse(content) : null;\r\n    }\r\n    \r\n    setTableContent(values);\r\n  };\r\n\r\n  const isRowBold = (row) =>\r\n  {\r\n    return row.Active\r\n  }\r\n\r\n  const onRecreate = async () => {\r\n    const content = await EquipWorker.RecreateDBInfo(token, equipInfo);    \r\n  }; \r\n    \r\n  const columns = tableContent.length === 0 ? [] : Object.keys(tableContent[0]).map(k => getColumn(k));\r\n  const rows = tableContent.length === 0 ? [] : tableContent;\r\n\r\n  const hospTableMenu = allDBTables?.Hospital;\r\n  const systemTableMenu = allDBTables?.System;\r\n  const softwareTableMenu = allDBTables?.Software;\r\n  const atlasTableMenu = allDBTables?.Atlas;\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <div className={classes.listPanel}> */}\r\n      {/* <Box className={classes.listPanel} height={'calc(100% - 500px)'}> */}\r\n      <Box className={classes.listPanel} height={'100%'}>\r\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={onRecreate}>\r\n              Пересоздать\r\n        </Button>\r\n        <Typography variant=\"h6\" component=\"h2\">ЛПУ</Typography>\r\n        <List>\r\n          {hospTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Hospital\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Система</Typography>\r\n        <List>\r\n          {systemTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"System\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Общее ПО</Typography>\r\n        <List>\r\n          {softwareTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Software\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Typography variant=\"h6\" component=\"h2\">Атлас</Typography>\r\n        <List>\r\n          {atlasTableMenu?.map((text, index) => (\r\n            <ListItem button key={text}\r\n                // selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index, \"Atlas\", text)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      {/* </div> */}\r\n      </Box>\r\n      <Box className={classes.content} height=\"100%\">\r\n        {/* <main className={classes.content} >\r\n          <>   */}\r\n                    <CommonTable \r\n                      columns={columns} \r\n                      rows={rows} \r\n                      isRowBold = {isRowBold}></CommonTable>\r\n          {/* </>\r\n        </main> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const hdds = permanentInfo?.HDD?.map(e => \r\n    { \r\n      return { Parameter: `Логический ${e.Letter}`, Value: e.TotalSize, DateTime: permanentInfo?.DateTime }\r\n    });\r\n  \r\n  const physicalDisks = permanentInfo?.PhysicalDisks?.map(e => \r\n    { \r\n      return { Parameter: `Физический ${e.MediaType} ${e.FriendlyName}`, Value: e.Size_Gb, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const monitors = permanentInfo?.Monitor?.map(e => \r\n    { \r\n      return { Parameter: `Монитор ${e.Device_Name}`, Value: `${e.Width}x${e.Height}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const vga = permanentInfo?.VGA?.map(e => \r\n    { \r\n      return { Parameter: `Видеоадаптер ${e.Card_Name}`, Value: `${e.Memory_Gb}`, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const processor = permanentInfo?.Processor?.Model ? [ { Parameter: \"Процессор\", Value: permanentInfo?.Processor.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const motherboard = permanentInfo?.Motherboard?.Model ? [ { Parameter: \"Материнская плата\", Value: permanentInfo?.Motherboard.Model, DateTime: permanentInfo?.DateTime }] : []\r\n  const memory = permanentInfo?.Memory?.Memory_total_Gb ? [ { Parameter: \"Память, Гб\", Value: permanentInfo?.Memory.Memory_total_Gb, DateTime: permanentInfo?.DateTime }] : []\r\n\r\n  const permanentInfoRows = \r\n    processor\r\n    .concat(memory)\r\n    .concat(hdds ?? [])\r\n    .concat(motherboard)    \r\n    .concat(physicalDisks ?? [])    \r\n    .concat(monitors ?? [])\r\n    .concat(vga ?? []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from '../CommonTable'\r\n\r\n// const columns = [\r\n//     { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n//     { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n//     { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n//     { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n//     { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n//     { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n//     { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n//       formatArray: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return values;\r\n//         }\r\n//         //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n//         return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n//       },\r\n//       hasErrors: (values) =>\r\n//       {\r\n//         if(!values || !values.length) {\r\n//           return false;\r\n//         }\r\n\r\n//         return true;\r\n//       }\r\n//     },\r\n//   ];\r\n\r\nconst columnsPermanent = [\r\n  { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n  { id: 'Value', label: 'Значение', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n];\r\n\r\nconst columnsVolatile = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'ErrorType', label: 'Источник', minWidth: 100 },\r\n  { id: 'ErrorCode', label: 'Код', minWidth: 100 },\r\n  { id: 'ErrorDescription', label: 'Описание', minWidth: 100 },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfo = props.data?.PermanentInfo?.length > 0 ? props.data?.PermanentInfo[0] : null;\r\n  const dbs = permanentInfo?.Databases?.map(e => \r\n    { \r\n      return { Parameter: `БД ${e.DB_name}`, Value: e.DB_Status, DateTime: permanentInfo?.DateTime }\r\n    });\r\n\r\n  const os = permanentInfo?.Sysinfo?.OS ? [ { Parameter: permanentInfo?.Sysinfo?.OS, Value: permanentInfo?.Sysinfo.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const sql = permanentInfo?.MSSQL?.OS ? [ { Parameter: permanentInfo?.MSSQL?.SQL, Value: permanentInfo?.MSSQL.Version, DateTime: permanentInfo?.DateTime }] : []\r\n  const atlas = permanentInfo?.Atlas ? [ \r\n    { Parameter: \"Версия Атлас\", Value: permanentInfo?.Atlas.Atlas_Version, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Тип комплекса\", Value: permanentInfo?.Atlas.Complex_type, DateTime: permanentInfo?.DateTime },\r\n    { Parameter: \"Венрсия Xilib\", Value: permanentInfo?.Atlas.XiLibs_Version, DateTime: permanentInfo?.DateTime },\r\n  ] : []\r\n\r\n  const permanentInfoRows = \r\n    os\r\n    .concat(sql)\r\n    .concat(dbs ?? [])    \r\n    .concat(atlas)   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  equip: {\r\n    width: '10%',\r\n  },\r\n  isImportant:{\r\n    backgroundColor: 'red',\r\n  },\r\n  collapse:{\r\n    textAlign:'left',\r\n  },\r\n  outerLabel:{\r\n    marginTop:'6px',\r\n    marginRight:'12px',\r\n  },\r\n  ordinaryLabel:{\r\n    borderRadius:'50%',\r\n    backgroundColor: 'gray',\r\n  },\r\n  importantLabel:{    \r\n    borderRadius:'50%',\r\n    backgroundColor: 'red',\r\n  },\r\n  innerLabel:{\r\n    width:'40px',\r\n    height:'40px',\r\n    display: 'flex',\r\n    fontSize: '1.25rem',\r\n    color: '#303030',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  }\r\n}));\r\n\r\nexport default function TimeLineItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const isImportant = props.isImportant;\r\n  const equipName = props.equipName;\r\n  const time = props.time;\r\n  const title = props.title;\r\n  const text = props.text;\r\n  const details = props.details;\r\n  return (\r\n    <div>\r\n        <ListItem alignItems=\"flex-start\" button>\r\n            <div className={classes.outerLabel}>\r\n              <div className={isImportant ? classes.importantLabel : classes.ordinaryLabel}>\r\n                <div className={classes.innerLabel}>\r\n                  {isImportant ? '!' : 'O'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* <ListItemAvatar >\r\n                <Avatar className={isImportant ? classes.isImportant : null} alt={isImportant ? \"!\" : \"\"} src={'xz'}/>\r\n            </ListItemAvatar>  */}\r\n            <ListItemText\r\n                primary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {equipName}\r\n                        </Typography>\r\n                        {\" \" + time}\r\n                    </React.Fragment>\r\n                }\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            className={classes.inline}\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        {\" - \" + text}\r\n                    </React.Fragment>\r\n                }                \r\n            />\r\n            {details && open ? <ExpandLess onClick={handleClick}/> : \r\n              details && !open ? <ExpandMore onClick={handleClick}/> : <></>}\r\n        </ListItem>\r\n        \r\n            {details ? \r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.collapse}>\r\n                {details}\r\n              </Collapse>: <></>}\r\n        </div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {parseLocalString, isToday} from '../../utilities/utils'\r\nimport TimeLineItem from './TimeLineItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function CommonTimeLine(props) {\r\n  const classes = useStyles();\r\n  \r\n  const equipName = props.equipName;\r\n  const showImportantOnly = props.showImportantOnly;\r\n  const  rows = props.rows;\r\n  const todayRows = rows?.filter(i => isToday(i.DateTime)) ?? [];\r\n  const todayCount = todayRows.length;\r\n  const othersCount = rows ? rows.length - todayCount : 0;\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Сегодня ({todayCount} сообщений)\r\n        </Typography>\r\n        { todayRows?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            const isOffline=i.Type?.includes('Offline');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title + (isOffline ? '(Offline)' : '')} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n        <Divider />\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"h5\"\r\n          color=\"textPrimary\"\r\n          >\r\n            Все время ({othersCount} сообщений)\r\n        </Typography>\r\n        { rows?.filter(i => !isToday(i.DateTime))?.map((i, ind) =>\r\n          {\r\n            const isImportant=i.Type?.includes('Error');\r\n            return (\r\n              isImportant || !showImportantOnly ?\r\n                <TimeLineItem key={ind.toString()} \r\n                    isImportant={isImportant}\r\n                    equipName={i.EquipName} \r\n                    title={i.Title} \r\n                    text={i.Description} \r\n                    time={parseLocalString(i.DateTime)}\r\n                    details={i.Details}/> : <></>        \r\n              )\r\n           })\r\n        }\r\n    </List>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {SearchPeriod} from '../../../model/constants'\r\nimport {getUSFullDate} from '../../../utilities/utils'\r\n\r\nimport SystemTable from '../../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../../tables/historyTables/DetectorTable'\r\nimport StandTable from '../../tables/historyTables/StandTable'\r\nimport DicomTable from '../../tables/historyTables/DicomTable'\r\nimport CommonTimeLine from '../../timelines/CommonTimeLine'\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../../context/currentEquip-context';\r\nimport { EventsContext } from '../../../context/events-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryHistoryTabPanel(props) {\r\n  console.log(\"render SummaryHistoryTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  // const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  \r\n  // const [events, setEvents] = useState([]);  \r\n  const [importantOnly, setImportantOnly] = useState(false);  \r\n  const [filters, setFilters] = useState({\r\n    byTitle: '',\r\n    byDescr: ''\r\n  });\r\n\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  // const handleNameChange = (ev) => {\r\n  //   setEquipName(ev.target.value);\r\n  // };  \r\n\r\n  const equipName = props.equipName; // currEquipState?.equipInfo;\r\n  let events = eventsState.currentEvents;\r\n  const token = usersState.token;\r\n\r\n  const onSearch = async () => {    \r\n    const allEvents = await EquipWorker.SearchEquip(token, 'Events', equipName, startDate, endDate);\r\n    // setEvents(data);\r\n    eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n  };\r\n\r\n  const onSelect = async (event) => {\r\n    setImportantOnly(!importantOnly);\r\n  };\r\n\r\n  \r\n  if(filters.byTitle){\r\n    events = events?.filter(p => p.Title.includes(filters.byTitle) || p.Description.includes(filters.byTitle));\r\n  }\r\n\r\n  if(filters.byDescr){\r\n    events = events?.filter(p => p.Details.includes(filters.byDescr));\r\n  }\r\n\r\n  const onTitleFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byTitle: val.target?.value}});\r\n  }\r\n\r\n  const onDescrFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byDescr: val.target?.value}});\r\n  }\r\n\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n                checked={importantOnly}\r\n                onChange={onSelect}\r\n            />\r\n          }\r\n          label=\"Только важные\"\r\n        />\r\n        \r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onTitleFilterChange} label=\"По названию\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onDescrFilterChange} label=\"По описанию\" variant=\"outlined\" />\r\n        \r\n    </div>\r\n    <div className={classes.root}>        \r\n      <CommonTimeLine equipName={equipName} rows={events} showImportantOnly={importantOnly}></CommonTimeLine>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport {parseLocalString} from '../../../../utilities/utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"calc(50% - 6px)\",\r\n    marginRight: \"12px\",\r\n  },\r\n  fullRow:{\r\n    display: 'grid',\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    gridTemplateColumns: '40px 1fr',\r\n    // maxWidth: 'calc(50% - 46px)',\r\n    // overflowWrap: 'break-word',\r\n  },\r\n  textField:{\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n\r\n  } ,\r\n  noteTitle:{\r\n    width: '100%',\r\n    fontWeight: 'bolder',\r\n    textAlign: 'left',\r\n    display: 'inline',\r\n  },\r\n  notesArea:{\r\n    // maxWidth: 'calc(50% - 0px)',\r\n    overflowWrap: 'break-word',\r\n    alignSelf: 'center',\r\n    width: '100%',\r\n    margin: '0',\r\n    display: 'block',\r\n  }\r\n}));\r\n\r\nexport default function SummaryChatSubpanel(props) {\r\n  console.log(\"render SummaryChatSubpanel\");\r\n\r\n  const techUserName = 'tech'\r\n\r\n  const classes = useStyles();\r\n  const [newNote, setNewNote] = useState({id: '', note:''});\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [techOnly, setTechOnly] = React.useState(false);\r\n  const openEditMenu = Boolean(anchorEl);\r\n\r\n  const hasTechOnly = props.hasTechOnly;\r\n  const handleMenuClick = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onNoteChange = async (val)  => {\r\n    setNewNote({id: newNote.id, note: val});\r\n  }\r\n\r\n  const type = props.type;\r\n  const onSendNote = async () => {\r\n    if(props.onSendNote){\r\n      await props.onSendNote(type, newNote);\r\n      setNewNote({id: '', note:''});\r\n    }\r\n  };\r\n\r\n  const handleDeleteNote = async (ev) => {\r\n    const noteId = anchorEl.id;\r\n    if(props.onDeleteNote){\r\n      await props.onDeleteNote(type, noteId);\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  const title = props.title;\r\n  const notes = hasTechOnly && techOnly ? props.notes?.filter(p => p.User === techUserName) : props.notes;\r\n  const currentUser = props.currentUser;\r\n  const canSubmit = !!newNote?.note;\r\n  const handleEditNote = async (ev) => {\r\n    const noteId = anchorEl.id; // ev.target.id;\r\n    const note = notes.find(n => n.ID == noteId);\r\n    if(note){\r\n      setNewNote({id: noteId, note:note.Message});\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  const onTechOnly = async (event) => {\r\n    setTechOnly(!techOnly);\r\n  };\r\n\r\n  return (\r\n      <div className={classes.column}>\r\n        <Typography variant=\"h5\">{title}</Typography>\r\n        {hasTechOnly ? <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={techOnly}\r\n                    onChange={onTechOnly}\r\n                />\r\n              }\r\n              label=\"tech только\"\r\n            /> : <></>\r\n        }\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          className={classes.textField}\r\n          label=\"Новое сообщение\"\r\n          multiline\r\n          rows={5}\r\n          defaultValue=\"\"\r\n          variant=\"outlined\"\r\n          value={newNote?.note}\r\n          onChange={e => onNoteChange(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onSendNote} disabled={!canSubmit}>\r\n              Послать\r\n        </Button>\r\n        <div className={classes.fullRow}>\r\n          {notes?.length ?\r\n            notes.map((i, ind) => \r\n            {\r\n              const row = i;\r\n              return (\r\n              <>\r\n                <div key={ind.toString()}>\r\n                    {\r\n                      currentUser === i.User?\r\n                            <>\r\n                              <IconButton\r\n                                id={i.ID}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenuClick}\r\n                              >\r\n                                <MoreVertIcon />\r\n                              </IconButton>\r\n                              <Menu\r\n                                id=\"long-menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={openEditMenu}\r\n                                onClose={handleMenuClose}\r\n                              >\r\n                                  <MenuItem onClick={handleEditNote}>Редактировать</MenuItem>\r\n                                  <MenuItem onClick={handleDeleteNote}>Удалить</MenuItem>\r\n                              </Menu>\r\n                            </>\r\n                            : <></>\r\n                    }\r\n                </div>\r\n                 <div className={classes.notesArea}>\r\n                    <Typography variant=\"body1\" align='left' color={\r\n                          currentUser === i.User? 'secondary' : 'primary'\r\n                        } className={classes.noteTitle} style={i.User === techUserName ? {color:'khaki'} : {}}>\r\n                        {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n                     </Typography>\r\n                     {\r\n                       i.Message?.split(\"\\n\")?.map((s, ind) =>\r\n                       {\r\n                         return ind === 0? s : <Typography>{s}</Typography>\r\n                       })\r\n                     }\r\n                 </div> \r\n               </>\r\n              )})\r\n              :\r\n              <></>\r\n          }\r\n        </div>\r\n        {/* <div className={classes.notesArea}>\r\n          {notes?.length ?\r\n            notes.map((i, ind) => (\r\n              <div key={ind.toString()} className={classes.fullRow}>\r\n                {currentUser === i.User?\r\n                    <IconButton\r\n                      aria-label=\"more\"\r\n                      aria-controls=\"long-menu\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMenuClick}\r\n                    >\r\n                      <MoreVertIcon />\r\n                    </IconButton>\r\n                  : <></>\r\n                }\r\n                <Typography variant=\"body1\" align='left' color={currentUser === i.User? 'secondary' : 'primary'} className={classes.noteTitle}>\r\n                    {i.User +\" (\"} {parseLocalString(i.DateTime) + \") - \"}\r\n                </Typography>\r\n                {\r\n                  i.Message?.split(\"\\n\")?.map((s, ind) =>\r\n                  {\r\n                    return ind === 0? s : <Typography>{s}</Typography>\r\n                  })\r\n                }\r\n              </div>\r\n              ))\r\n              :\r\n              <></>\r\n          }\r\n        </div>  */}\r\n      </div>\r\n      );\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport {ChatMessageType} from '../../../model/constants'\r\n\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\nimport SummaryChatSubpanel from './subpanels/SummaryChatSubpanel'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  divider: {\r\n    marginRight: \"12px\"\r\n  },\r\n}));\r\n\r\nexport default function SummaryChatTabPanel(props) {\r\n  console.log(\"render SummaryChatTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const equipName = props.equipName;\r\n  const token = usersState.token;\r\n\r\n  const noteType = 'Note';\r\n  const chatType = ChatMessageType;\r\n\r\n  const onSendNote = async (type, note) => {\r\n    if(type === noteType){\r\n      await onSendNoteNote(note);\r\n    }\r\n    else if(type === chatType){\r\n      await onSendChatNote(note);\r\n    }\r\n  };\r\n\r\n  const onDeleteNote = async (type, noteId) => {\r\n    await EquipWorker.DeleteNote(token, equipName, chatType, noteId); \r\n    communicationDispatch({ type: 'DELETENOTE', payload: noteId}); \r\n  };\r\n\r\n  const onSendNoteNote = async (newnote) => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, noteType, newnote.id, newnote.note);    \r\n    communicationDispatch({ type: newnote.id? 'CHANGENOTE' : 'ADDNOTE', payload: note}); \r\n  };\r\n\r\n  const onSendChatNote = async (newnote) => {\r\n    const note = await EquipWorker.SendNewNote(token, equipName, chatType, newnote.id, newnote.note);  \r\n    if(newnote.id){\r\n      communicationDispatch({ type: 'CHANGENOTE', payload: note}); \r\n    } \r\n  };\r\n\r\n  const notes = communicationState.notes?.filter(n => n.Type === noteType);\r\n  const chats = communicationState.notes?.filter(n => n.Type === chatType);\r\n  return (\r\n    <div className={classes.root}>     \r\n      <SummaryChatSubpanel\r\n        type={noteType}\r\n        title='Заметки'\r\n        notes={notes}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n      <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\r\n      <SummaryChatSubpanel\r\n        type={chatType}\r\n        title='Чат'\r\n        notes={chats}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n        hasTechOnly = {true}\r\n      >\r\n      </SummaryChatSubpanel>\r\n    </div>\r\n  );\r\n}\r\n  ","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport { EquipLogContext } from '../../../context/equipLog-context';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SummaryLogsTabPanel = React.memo((props) => {\r\n// export default function StandCard() {\r\n// export default function SummaryLogsTabPanel(props) {\r\n  console.log(\"render SummaryLogsTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [equipLogs, equipLogsDispatch] = useContext(EquipLogContext);\r\n\r\n  const equipName = props.equipName;\r\n  const token = usersState.token;\r\n  const defaultDuration = 30;\r\n  const [generatorLogs, setGeneratorLogs] = useState(false);  \r\n  const [standLogs, setStandLogs] = useState(false);  \r\n  const [detectorLogs, setDetectorLogs] = useState(false);  \r\n  const [duration, setDuration] = useState(defaultDuration);\r\n\r\n  const onGeneratorLogs = async (event) => {\r\n    const value = !generatorLogs;\r\n    setGeneratorLogs(value);\r\n  };\r\n\r\n  const onStandLogs = async (event) => {\r\n    const value = !standLogs;\r\n    setStandLogs(value);\r\n  };\r\n\r\n  const onDetectorLogs = async (event) => {\r\n    const value = !detectorLogs;\r\n    setDetectorLogs(value);\r\n  };\r\n\r\n  const onStart = async () => { \r\n    const equipTypes = [];   \r\n    if(generatorLogs){\r\n      equipTypes.push(\"generator\");\r\n    }\r\n\r\n    if(standLogs){\r\n      equipTypes.push(\"stand\");\r\n    }\r\n\r\n    if(detectorLogs){\r\n      equipTypes.push(\"detector\");\r\n    }\r\n\r\n    if(!duration){\r\n      setDuration(defaultDuration);\r\n    }\r\n\r\n    const result = await EquipWorker.SetEquipLogsOn(token, equipName, equipTypes, duration ?? defaultDuration);\r\n  };\r\n\r\n  const onDurationChange = async (event) =>{\r\n    const val = event.target.value;\r\n    setDuration(!isNaN(val) || val === '' ? val : defaultDuration);\r\n  }\r\n\r\n  const newLog = equipLogs.currentLog?.Type + ' ' + equipLogs.currentLog?.State?.Timestamp + ' ' + equipLogs.currentLog?.State?.Data;\r\n  return (\r\n    <div>      \r\n      <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={generatorLogs}\r\n                    onChange={onGeneratorLogs}\r\n                />\r\n              }\r\n              label=\"Логи генератора\"\r\n            />\r\n      <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={standLogs}\r\n                    onChange={onStandLogs}\r\n                />\r\n              }\r\n              label=\"Логи штатива\"\r\n            />\r\n      <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={detectorLogs}\r\n                    onChange={onDetectorLogs}\r\n                />\r\n              }\r\n              label=\"Логи детектора\"\r\n            />\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onStart}>\r\n          Запустить\r\n      </Button>\r\n\r\n      <TextField id=\"outlined-basic\" className={classes.commonSpacing} value={duration} onChange={onDurationChange} label=\"Длительность, сек\" variant=\"outlined\" />\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={equipLogs.currentLog?.State?.Data}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SummaryLogsTabPanel;\r\n  ","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SummaryDBTabPanelIndex, MainTabPanelIndex, SummaryHistoryTabPanelIndex, SummaryChatTabPanelIndex, SummaryLogsTabPanelIndex } from '../../model/constants';\r\n\r\nimport SummaryMainTabPanel from './summaryPanels/SummaryMainTabPanel'\r\nimport SummaryBDTabPanel from './summaryPanels/SummaryBDTabPanel'\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\nimport SummaryChatTabPanel from './summaryPanels/SummaryChatTabPanel'\r\nimport SummaryLogsTabPanel from './summaryPanels/SummaryLogsTabPanel'\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function SummaryTab(props) {\r\n  console.log(\"render SummaryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  const equipName = currEquipState?.equipInfo;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <SummaryMainTabPanel/> : <></>}\r\n      {tabPanelIndex === SummaryDBTabPanelIndex ? <SummaryBDTabPanel equipName={equipName}/> : <></>}\r\n      {tabPanelIndex === SummaryHistoryTabPanelIndex ? <SummaryHistoryTabPanel equipName={equipName}/> : <></>}      \r\n      {tabPanelIndex === SummaryChatTabPanelIndex ? <SummaryChatTabPanel equipName={equipName}/> : <></>}    \r\n      {tabPanelIndex === SummaryLogsTabPanelIndex ? <SummaryLogsTabPanel equipName={equipName}/> : <></>}            \r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as L from \"leaflet\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../model/constants';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport {useSetCurrEquip} from '../../hooks/useSetCurrEquip'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\",\r\n    // width: '1500px',\r\n    height: '1000px',\r\n  },\r\n}));\r\n\r\nconst LeafIcon = L.Icon.extend({\r\n  options: {}\r\n});\r\n\r\nconst activeIcon = new LeafIcon({\r\n  iconUrl:\"./marker-icon.png\"\r\n}),\r\ngrayIcon = new LeafIcon({\r\n  iconUrl:\"./marker-icon-dark.png\"\r\n});\r\n\r\nexport default function MapTab(props) {\r\n  console.log(\"render MapTab\");\r\n\r\n  const classes = useStyles();\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n\r\n  const allEquips = allEquipsState.allEquips;\r\n  const onSelect = async (ev, equip) => {\r\n    const equipInfo = equip.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MapContainer\r\n        // className=\"markercluster-map\"\r\n        className={classes.root}\r\n        center={[ 59.8795351,30.3908424 ]}//55.75222, 37.61556]}\r\n        zoom={10}\r\n        maxZoom={18}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        /> \r\n        {allEquips?.map((equip) => (\r\n          <Marker position={[equip.HospitalLatitude, equip.HospitalLongitude]} icon={!equip.IsActive? activeIcon : grayIcon}>\r\n            <Popup>\r\n              {equip.HospitalName} ({equip.EquipName})\r\n              <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={(ev) => onSelect(ev, equip)}>\r\n                      Выбрать\r\n                </Button>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n          ))} \r\n        {/* <Marker position={[55.61980, 37.65602]}>\r\n          <Popup>\r\n            ГБУЗ \"ГКБ им. В.М. Буянова ДМЗ\"\r\n          </Popup>\r\n        </Marker>\r\n        <Marker position={[55.76273, 37.79743]} icon={greenIcon}>\r\n          <Popup>\r\n            ГБУЗ МКНЦ им. А.С.Логинова ДЗМ\r\n          </Popup>\r\n        </Marker> */}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryHistoryTabPanel from './summaryPanels/SummaryHistoryTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsTab(props) {\r\n  console.log(\"render EventsTab\");\r\n\r\n  const classes = useStyles();\r\n  const equipName = '';\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       <SummaryHistoryTabPanel equipName={equipName}/>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../../model/constants'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nimport SystemTable from '../tables/historyTables/SystemTable'\r\nimport OrganAutoTable from '../tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from '../tables/historyTables/GeneratorTable'\r\nimport StudiesTable from '../tables/historyTables/StudiesTable'\r\nimport SofwareTable from '../tables/historyTables/SofwareTable'\r\nimport DetectorTable from '../tables/historyTables/DetectorTable'\r\nimport StandTable from '../tables/historyTables/StandTable'\r\nimport DicomTable from '../tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryTab(props) {\r\n  console.log(\"render HistoryTab\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"Software\");//\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const token = usersState.token;\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(token, currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable equipName={equipName} data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport CommonTable from '../CommonTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\n\r\nexport default function UserTable(props) {\r\n  console.log(\"render UserTable\");\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n\r\n  const columns = [\r\n    { id: 'Login', label: 'Логин', minWidth: 170, sortable: true },\r\n    { id: 'Surname', label: 'ФИО', minWidth: 100 },\r\n    { id: 'Email', label: 'Почта', minWidth: 100 },\r\n    { id: 'Role', label: 'Роль', minWidth: 100 },\r\n    { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n    { id: 'Edit', label: 'Редактировать', button: true, onEdit:props.onEdit, minWidth: 100 },\r\n  ];\r\n\r\n  const rows = props.data;\r\n\r\n  const handleSelect = async (event, row) => {\r\n    const Disabled = event.target.checked;//{id: \"1\", login, password, surname, email, role, disabled}\r\n    const newRow = {...row, Disabled};\r\n    const token = usersState.token;\r\n    const data = await AdminWorker.UpdateUser(newRow, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n  };\r\n\r\n  return (\r\n    <CommonTable columns={columns} rows={rows} onSelect={handleSelect}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport UserTable from '../../tables/adminTables/UserTable'\r\nimport * as AdminWorker from '../../../workers/adminWorker'\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport { Roles, UserRole } from '../../../model/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em'\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AdminMainTabPanel(props) {\r\n  console.log(\"render AdminMainTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [userId, setUserId] = useState('');\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [surname, setSurname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [role, setRole] = useState(UserRole);\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n  }; \r\n\r\n  const onSurnameChange = (ev) => {\r\n    setSurname(ev.target.value);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n  }; \r\n\r\n  const onRoleChange = (ev) => {\r\n    setRole(ev.target.value);\r\n  }; \r\n\r\n  const handleRoleChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setRole(val);\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const token = usersState.token\r\n    const data = await AdminWorker.UpdateUser({id: userId, login, password, surname, email, role, disabled: false}, token);\r\n    const users = await AdminWorker.GetAllUsers(token);\r\n    usersDispatch({ type: 'SETUSERS', payload: users }); \r\n\r\n    onCancel();\r\n  };\r\n\r\n  const onEdit = async (user) => {\r\n    setUserId(user.ID);\r\n    setLogin(user.Login);\r\n    setPassword('');\r\n    setSurname(user.Surname);\r\n    setEmail(user.Email);\r\n    setRole(user.Role);\r\n  };\r\n\r\n  const onCancel = async () => {\r\n    setUserId('');\r\n    setLogin('');\r\n    setPassword('');\r\n    setSurname('');\r\n    setEmail('');\r\n    setRole(UserRole);\r\n  };\r\n\r\n  const canSubmit = login && surname && (userId ? true : password);\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Логин\" value={login} onChange={onLoginChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"Пароль\" value={password} onChange={onPasswordChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" required={true} label=\"ФИО\" value={surname} onChange={onSurnameChange}/>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" value={email} onChange={onEmailChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Роль\" defaultValue={''} onChange={onRoleChange}/> */}\r\n        <FormControl required={true} className={classes.text}>\r\n              <InputLabel required={true} htmlFor=\"grouped-native-select\">Роль</InputLabel>\r\n              <NativeSelect\r\n                value={role}\r\n                onChange={handleRoleChange}\r\n                name=\"roles\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {Roles.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSubmit} disabled={!canSubmit}>\r\n                Готово\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onCancel}>\r\n                Отменить\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <UserTable data={usersState.users} onEdit={onEdit}></UserTable>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MainTabPanelIndex } from '../../model/constants';\r\n\r\nimport AdminMainTabPanel from './adminPanels/AdminMainTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\nexport default function AdminTab(props) {\r\n  console.log(\"render AdminTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <AdminMainTabPanel/> : <></>} \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nexport default function ConfirmDlg(props){\r\n  const handleClose = () => {\r\n    props?.onClose(false);\r\n  };\r\n\r\n  const handleCloseOK = () => {\r\n    props?.onClose(true, props.context);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Подтверждение</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {props.сonfirmMessage}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCloseOK} autoFocus>\r\n          Да\r\n        </Button>\r\n        <Button onClick={handleClose} >\r\n          Нет\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport {AdminRole} from '../../../model/constants'\r\nimport CommonTable from '../CommonTable'\r\n\r\nimport { SummaryTabIndex, MainTabPanelIndex } from '../../../model/constants';\r\nimport { AppContext } from '../../../context/app-context';\r\nimport { AllEquipsContext } from '../../../context/allEquips-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\nimport {useSetCurrEquip} from '../../../hooks/useSetCurrEquip'\r\nimport {parseLocalString} from '../../../utilities/utils'\r\nimport ConfirmDlg from '../../dialogs/ConfirmDlg'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n//export default function EquipTable(props) {\r\nconst EquipTable = React.memo((props) => {\r\n  console.log(\"render EquipTable\");\r\n  const classes = useStyles();\r\n\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const setCurrEquip = useSetCurrEquip();\r\n  const [visibleOnly, setVisibleOnly] = useState(true);  \r\n  const [activeOnly, setActiveOnly] = useState(false);  \r\n  const [filtrate, setFiltrate] = useState(false);  \r\n  const [filters, setFilters] = React.useState({\r\n    byEquip: '',\r\n    byHospital: '',\r\n    byAddress:''\r\n  });\r\n  const [openConfirm, setOpenConfirm] = React.useState({Result: false});\r\n\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const columns = [\r\n    { id: 'IsActive', label: 'Активен', checked: true, minWidth: 50, sortable: true,\r\n      // format: (row) => allEquipsState.connectedEquips?.includes(row.EquipName)\r\n    },\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170, sortable: true },\r\n    { id: 'RegisterDate', label: 'Дата регистрации', minWidth: 170,\r\n      format: (value) => parseLocalString(value)\r\n    },\r\n    { id: 'HospitalName', label: 'ЛПУ', minWidth: 100, sortable: true },\r\n    { id: 'HospitalAddress', label: 'Адрес', minWidth: 100, sortable: true },\r\n    { id: 'HospitalLatitude', label: 'Широта', minWidth: 100 },\r\n    { id: 'HospitalLongitude', label: 'Долгота', minWidth: 100 },\r\n    { id: 'LastSeenPresentation', label: 'Посл. сообщение', minWidth: 100, sortable: true,\r\n      //format: (value) => value ? parseLocalString(value) : \"\"\r\n    },\r\n    \r\n    // { id: 'Disabled', label: 'Удален', checked: true, minWidth: 100 },\r\n  ];\r\n  if(isAdmin){\r\n    columns.push({ id: 'Disabled', label: 'Скрыт', checked: true, minWidth: 100,\r\n        format: (row) => row.Disabled\r\n      });\r\n  }\r\n\r\n  const onFilter = async ()  => {\r\n    setFiltrate(!filtrate);\r\n  }\r\n\r\n  let rows = props.data;\r\n  if(activeOnly) {\r\n    rows = rows?.filter(p => p.IsActive);\r\n  }\r\n\r\n  if(visibleOnly) {\r\n    rows = rows?.filter(p => !p.Disabled);\r\n  }\r\n  \r\n  if(filters.byEquip){\r\n    rows = rows?.filter(p => p.EquipName.includes(filters.byEquip));\r\n  }\r\n\r\n  if(filters.byHospital){\r\n    rows = rows?.filter(p => p.HospitalName.includes(filters.byHospital));\r\n  }\r\n\r\n  if(filters.byAddress){\r\n    rows = rows?.filter(p => p.HospitalAddress.includes(filters.byAddress));\r\n  }\r\n\r\n  rows.forEach((row) => \r\n  {\r\n    row.LastSeenPresentation = row.LastSeen ? parseLocalString(row.LastSeen) : \"\";\r\n  });\r\n  const handleRowClick = async (event, row) => {\r\n\r\n    var dataColumn = event.target.getAttribute(\"data-column\");\r\n\r\n    if(dataColumn === \"Disabled\")\r\n    {\r\n      return;\r\n    }\r\n\r\n    const equipInfo = row.EquipName;\r\n    setCurrEquip(equipInfo, 'SETEQUIPINFO');\r\n    allEquipsDispatch({ type: 'ADDSELECTEDEQUIPS', payload: equipInfo }); \r\n    appDispatch({ type: 'SETTAB', payload: {tab: SummaryTabIndex, panel: MainTabPanelIndex} }); \r\n  };\r\n\r\n  const handleSelect = async (event, row) => {\r\n    setOpenConfirm({Result: true, Context: row});\r\n    /* */\r\n  };\r\n\r\n  const onVisibleOnly = async (event) => {\r\n    const value = !visibleOnly;\r\n    setVisibleOnly(value);\r\n    const allEquips = await EquipWorker.GetAllEquips(usersState.token, visibleOnly);\r\n    allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips }); \r\n  };\r\n\r\n  const onActiveOnly = async (event) => {\r\n    const value = !activeOnly;\r\n    setActiveOnly(value);\r\n  };\r\n\r\n  const onEquipFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byEquip: val.target?.value}});\r\n  }\r\n\r\n  const onHospFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byHospital: val.target?.value}});\r\n  }\r\n\r\n  const onAddressFilterChange = async (val) =>{\r\n    setFilters({...filters, ...{byAddress: val.target?.value}});\r\n  }\r\n\r\n  const onConfirmClose = async (result, context) => {\r\n    if(result){\r\n      const row = context;\r\n      const equipInfo = row.EquipName;\r\n      row.Disabled = !row.Disabled\r\n      await EquipWorker.DisableEquipInfo(usersState.token, equipInfo, row.Disabled);\r\n      allEquipsDispatch({ type: 'UPDATEALLEQUIPS', payload: row });\r\n    }\r\n    setOpenConfirm({Result: false});\r\n  };\r\n\r\n  const equipInfo = props.equipInfo;\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={visibleOnly}\r\n                    onChange={onVisibleOnly}\r\n                />\r\n              }\r\n              label=\"Только нескрытые\"\r\n            />\r\n        <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                    checked={activeOnly}\r\n                    onChange={onActiveOnly}\r\n                />\r\n              }\r\n              label=\"Только активные\"\r\n            />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onEquipFilterChange} label=\"По комплексу\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onHospFilterChange} label=\"По ЛПУ\" variant=\"outlined\" />\r\n        <TextField id=\"outlined-basic\" className={classes.commonSpacing} onChange={onAddressFilterChange} label=\"По адресу\" variant=\"outlined\" />\r\n        {/* <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onFilter}>\r\n            Фильтровать\r\n        </Button> */}\r\n      </div>\r\n      <div className={classes.root}>\r\n        {/* <CommonTable readonly columns={columns} rows={rows} selectedRow={currEquipState.equipInfo} onRowClick={handleRowClick} onSelect={handleSelect}></CommonTable> */}\r\n        <CommonTable readonly defaultSort={'IsActive'} defaultSortOrder={'desc'} columns={columns} rows={rows} selectedRow={equipInfo} onRowClick={handleRowClick} onSelect={handleSelect}></CommonTable>\r\n      </div>\r\n      <ConfirmDlg \r\n        open={openConfirm.Result} \r\n        сonfirmMessage={'Вы действительно хотите '+(openConfirm.Context?.Disabled ? 'открыть' : 'скрыть')+' комплекс?'}\r\n        onClose={onConfirmClose}\r\n        context={openConfirm.Context}\r\n        >          \r\n      </ConfirmDlg>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EquipTable;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport EquipTable from '../tables/equipTables/EquipTable'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EquipsTab(props) {\r\n  console.log(\"render EquipsTab\");\r\n\r\n  const classes = useStyles();  \r\n  \r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <EquipTable data={allEquipsState.allEquips} equipInfo={currEquipState.equipInfo}></EquipTable>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from '../CommonCard'\r\nimport CardRow, {CardErrorRow} from '../CardRow'\r\n\r\nexport default function ServerStateCard(props) {\r\n  console.log(`! render ServerStateCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const state = props.serverState;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>       \r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сервер\r\n        </Typography> \r\n        <CardRow descr=\"Всего БД\" value={state?.DBUsedSize}></CardRow>\r\n        <CardRow descr=\"Всего диск\" value={state?.DiskTotalSpace}></CardRow>\r\n        <CardRow descr=\"Занято диск\" value={state?.DiskUsedSpace}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from '../CommonCard'\r\n\r\nexport default function UnasweredEquipsCard(props) {\r\n  console.log(`! render UnasweredEquipsCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const hdd = props.hdd;\r\n  \r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>       \r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Неотвеченные комплексы\r\n        </Typography> \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {CommonChat, ChatMessageType} from '../../../model/constants'\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\nimport { UsersContext } from '../../../context/users-context';\r\nimport { ControlStateContext } from '../../../context/controlState-context';\r\nimport * as EquipWorker from '../../../workers/equipWorker'\r\n\r\nimport ServerStateCard from '../../cards/controlCards/ServerStateCard'\r\nimport UnasweredEquipsCard from '../../cards/controlCards/UnasweredEquipsCard'\r\n\r\nimport SummaryChatSubpanel from '../summaryPanels/subpanels/SummaryChatSubpanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function ControlMainTabPanel(props) {\r\n  console.log(\"render ControlMainTabPanel\");\r\n\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext);\r\n\r\n  const chatType = ChatMessageType;\r\n  const classes = useStyles();\r\n\r\n  const equipName = CommonChat;\r\n  const token = usersState.token;\r\n\r\n  const onSendNote = async (type, newnote) => {\r\n    if(type === chatType){\r\n      const note = await EquipWorker.SendNewNote(token, equipName, chatType, newnote.id, newnote.note);  \r\n      if(newnote.id){\r\n        communicationDispatch({ type: 'CHANGENOTE', payload: note}); \r\n      } \r\n    }\r\n  };\r\n\r\n  const onDeleteNote = async (type, noteId) => {\r\n    await EquipWorker.DeleteNote(token, equipName, chatType, noteId); \r\n    communicationDispatch({ type: 'DELETENOTE', payload: noteId}); \r\n  };\r\n\r\n  const chats = communicationState.commonNotes?.filter(n => n.Type === chatType);\r\n  const serverState = controlState.serverState;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <ServerStateCard serverState={serverState}></ServerStateCard>\r\n        <UnasweredEquipsCard></UnasweredEquipsCard>\r\n      </div>\r\n      <SummaryChatSubpanel\r\n        type={chatType}\r\n        title='Чат'\r\n        notes={chats}\r\n        onSendNote={onSendNote}\r\n        onDeleteNote = {onDeleteNote}\r\n        currentUser={usersState.currentUser?.Login}\r\n      >\r\n      </SummaryChatSubpanel>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { ControlStateContext } from '../../../context/controlState-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n}));\r\n\r\nexport default function ControlDiagnosticTabPanel(props) {\r\n  console.log(\"render ControlDiagnosticTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext); \r\n\r\n  return (\r\n    <div>\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={controlState.diagnostic}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n  ","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { CommunicationContext } from '../../../context/communication-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:'100%',\r\n    borderColor: 'darkgray'\r\n  },\r\n}));\r\n\r\nexport default function ControlLogTabPanel(props) {\r\n  console.log(\"render ControlLogTabPanel\");\r\n\r\n  const classes = useStyles();\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n\r\n  return (\r\n    <div>\r\n      <TextareaAutosize className={classes.root}\r\n        rowsMax={40}\r\n        aria-label=\"maximum height\"\r\n        defaultValue={communicationState.logs}\r\n      />\r\n        {/* <Typography variant=\"body2\" gutterBottom>\r\n            {communicationState.logs}\r\n        </Typography> */}\r\n    </div>\r\n  );\r\n}\r\n  ","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MainTabPanelIndex, ControlDiagnosticTabPanelIndex, ControlLogTabPanelIndex } from '../../model/constants';\r\n\r\nimport ControlMainTabPanel from './controlPanels/ControlMainTabPanel'\r\nimport ControlDiagnosticTabPanel from './controlPanels/ControlDiagnosticTabPanel'\r\nimport ControlLogTabPanel from './controlPanels/ControlLogTabPanel'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n}));\r\n\r\n\r\nexport default function ControlTab(props) {\r\n  console.log(\"render ControlTab\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const tabPanelIndex = props.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabPanelIndex === MainTabPanelIndex ? <ControlMainTabPanel/> : <></>}\r\n      {tabPanelIndex === ControlDiagnosticTabPanelIndex ? <ControlDiagnosticTabPanel/> : <></>}         \r\n      {tabPanelIndex === ControlLogTabPanelIndex ? <ControlLogTabPanel/> : <></>}      \r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../context/app-context';\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex,AdminTabIndex, MainTabPanelIndex,\r\n  ControlTabIndex } from '../../model/constants';\r\n\r\nimport SummaryTab from '../tabs/SummaryTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport EventsTab from '../tabs/EventsTab';\r\nimport HistoryTab from '../tabs/HistoryTab';\r\nimport AdminTab from '../tabs/AdminTab';\r\nimport EquipsTab from '../tabs/EquipsTab';\r\nimport ControlTab from '../tabs/ControlTab';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n\r\n  const tabIndex = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const tabPanelIndex = appState.currentTab?.panel ?? MainTabPanelIndex;\r\n  return (\r\n    <div>\r\n      {tabIndex === SummaryTabIndex ? <SummaryTab panel={tabPanelIndex}></SummaryTab> : <></>}\r\n      {tabIndex === EquipsTabIndex ? <EquipsTab></EquipsTab> : <></>}\r\n      {tabIndex === MapTabIndex ? <MapTab></MapTab> : <></>}\r\n      {tabIndex === EventsTabIndex ? <EventsTab></EventsTab> : <></>}\r\n      {/* {tabIndex === HistoryTabIndex ? <HistoryTab></HistoryTab> : <></>} */}\r\n      {tabIndex === ControlTabIndex ? <ControlTab panel={tabPanelIndex}></ControlTab> : <></>} \r\n      {tabIndex === AdminTabIndex ? <AdminTab panel={tabPanelIndex}></AdminTab> : <></>} \r\n    </div>\r\n  );\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { SummaryTabIndex, EquipsTabIndex, MapTabIndex, EventsTabIndex, MainTabPanelIndex,\r\n  ControlTabIndex, CommonChat } from '../../model/constants';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from './MainInfoComponent';\r\n\r\nimport {AdminRole} from '../../model/constants'\r\nimport { UsersContext } from '../../context/users-context';\r\nimport { AppContext } from '../../context/app-context';\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { EventsContext } from '../../context/events-context';\r\nimport { CommunicationContext } from '../../context/communication-context';\r\nimport { ControlStateContext} from '../../context/controlState-context';\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport * as ControlWorker from '../../workers/controlWorker'\r\nimport {getUSFullDate} from '../../utilities/utils'\r\n\r\nconst drawerWidth = 240;\r\nconst menuItems = ['Обзор', 'Комплексы', 'Карта', 'Журнал событий', 'Панель управления']; // , 'Администрирование'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n    minWidth: '1300px',\r\n    // width: `calc(100% - ${drawerWidth}px)`,\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();  \r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [appState, appDispatch] = useContext(AppContext);\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [eventsState, eventsDispatch] = useContext(EventsContext);\r\n  const [controlState, controlDispatch] = useContext(ControlStateContext);\r\n  const [communicationState, communicationDispatch] = useContext(CommunicationContext);\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n        const token = usersState.token;\r\n          if(!token)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const users = await AdminWorker.GetAllUsers(token);\r\n          usersDispatch({ type: 'SETUSERS', payload: users }); \r\n      })();\r\n  }, [usersState.token]);\r\n\r\n  const token = usersState.token;\r\n  if (!token) {\r\n    return <Redirect to=\"/\" />;  \r\n  }\r\n\r\n  const handleListItemClick = async (event, index) => {\r\n    if(index === EquipsTabIndex || index === MapTabIndex)\r\n    {\r\n      const allEquips = await EquipWorker.GetAllEquips(token);\r\n      allEquipsDispatch({ type: 'SETALLEQUIPS', payload: allEquips });  \r\n    }\r\n    else if(index === EventsTabIndex)\r\n    {\r\n      const endDate = new Date();\r\n      const allEvents = await EquipWorker.SearchEquip(token, 'Events', '', getUSFullDate(endDate), getUSFullDate(endDate));\r\n      eventsDispatch({ type: 'SETEVENTS', payload: allEvents }); \r\n    }    \r\n    else if(index === ControlTabIndex){  \r\n      const state = await ControlWorker.GetServerState(token);\r\n      controlDispatch({ type: 'SETSRVSTATE', payload: state });  \r\n\r\n      const notes = await EquipWorker.GetCommunications(token, CommonChat);\r\n      communicationDispatch({ type: 'SETCOMMONCHAT', payload: notes });     \r\n    }\r\n  \r\n    appDispatch({ type: 'SETTAB', payload: {tab: index, panel: MainTabPanelIndex} }); \r\n    // setSelectedIndex(index);\r\n  };\r\n\r\n  const selectedTab = appState.currentTab?.tab ?? SummaryTabIndex;\r\n  const isAdmin = usersState.currentUser?.Role === AdminRole;\r\n  const mainMenu = isAdmin ? [...menuItems, 'Администрирование'] : menuItems; // , ];\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedTab === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function PasswordComponent(props) {\r\n  console.log(\"render PasswordComponent\");\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  return (\r\n        <FormControl className={classes.text}>\r\n          <InputLabel htmlFor=\"standard-adornment-password\">Пароль</InputLabel>\r\n          <Input\r\n              id=\"standard-adornment-password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              value={props.password}\r\n              onChange={props.onChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n        </FormControl>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\nimport PasswordComponent from '../commonComponents/PasswordComponent'\r\n\r\nimport UserTable from '../tables/adminTables/UserTable'\r\n\r\nimport * as AdminWorker from '../../workers/adminWorker'\r\nimport { UsersContext } from '../../context/users-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width:'100%',\r\n    marginBottom:'1em',\r\n    backgroundColor: theme.palette.background.default,  \r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  text:{\r\n    width:'50%',\r\n    marginBottom:'1em'\r\n  },\r\n  alert:{\r\n    backgroundColor: '#f44336',\r\n    width: '50%',\r\n    color: 'white',\r\n    height: '3em',\r\n    borderRadius: '0.3em',\r\n    marginBottom:'1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function AuthComponent(props) {\r\n  console.log(\"render AuthComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [usersState, usersDispatch] = useContext(UsersContext);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/info\" />;  \r\n  }\r\n\r\n  const onLoginChange = (ev) => {\r\n    setLogin(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n  \r\n  const onPasswordChange = (ev) => {\r\n    setPassword(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onEmailChange = (ev) => {\r\n    setEmail(ev.target.value);\r\n    if(showError)setShowError(false);\r\n  }; \r\n\r\n  const onLogin = async () => {\r\n    const parseJwt = (token) => {\r\n      try {\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    };\r\n    // const data = await AdminWorker.Login({login: 'se', password: '1', email});\r\n    // const data = await AdminWorker.Login({login: 'sa', password: 'medtex', email});\r\n    const data = await AdminWorker.Login({login, password, email});\r\n    \r\n    if(data && data.Token){\r\n      const claims = parseJwt(data.Token);      \r\n      usersDispatch({ type: 'SETUSER', payload: {Token: data.Token, Claims: claims, Surname: data.Surname} }); \r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Логин\" defaultValue={''} onChange={onLoginChange}/>\r\n        {/* <TextField className={classes.text} id=\"standard-basic\" label=\"Пароль\" defaultValue={''} onChange={onPasswordChange}/> */}\r\n        <PasswordComponent password={password} onChange={onPasswordChange}></PasswordComponent>\r\n        <TextField className={classes.text} id=\"standard-basic\" label=\"Почта\" defaultValue={''} onChange={onEmailChange}/>        \r\n        {showError ? <div className={classes.alert}>\r\n          Логин или пароль неверны\r\n        </div> : <></>}\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onLogin}>\r\n              Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport { UseDarkTheme } from './model/constants'\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport AuthComponent from './components/mainComponents/AuthComponent';\r\nimport './App.css';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: !UseDarkTheme ? \"light\" : \"dark\",\r\n  }\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (  \r\n    <>  \r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={AuthComponent} />\r\n          <Route path=\"/auth\" component={AuthComponent}/>\r\n          <Route path=\"/info\" component={MainComponent} />    \r\n          {/* <MainComponent></MainComponent> */}\r\n        </div>    \r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\nimport { UsersContextProvider} from './context/users-context';\r\nimport { AppContextProvider} from './context/app-context';\r\nimport { EventsContextProvider} from './context/events-context';\r\nimport { EquipLogContextProvider} from './context/equipLog-context';\r\nimport { SystemVolatileContextProvider} from './context/systemVolatile-context';\r\nimport { CommunicationContextProvider} from './context/communication-context';\r\nimport { ControlStateContextProvider} from './context/controlState-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AppContextProvider>\r\n        <UsersContextProvider>\r\n          <AllEquipsContextProvider>\r\n            <CurrentEquipContextProvider>\r\n              <SystemVolatileContextProvider>\r\n                <EventsContextProvider>\r\n                  <CommunicationContextProvider>\r\n                    <ControlStateContextProvider>\r\n                      <EquipLogContextProvider>\r\n                        <BrowserRouter>\r\n                          <App />\r\n                        </BrowserRouter>\r\n                      </EquipLogContextProvider>\r\n                    </ControlStateContextProvider>\r\n                  </CommunicationContextProvider>\r\n                </EventsContextProvider>\r\n              </SystemVolatileContextProvider>\r\n            </CurrentEquipContextProvider>\r\n          </AllEquipsContextProvider>\r\n        </UsersContextProvider>\r\n      </AppContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}