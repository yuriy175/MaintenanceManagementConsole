{"version":3,"sources":["context/allEquips-context.js","context/currentEquip-context.js","model/constants.js","workers/commonWorker.js","utilities/utils.js","workers/equipWorker.js","components/mainComponents/MainToolBar.js","workers/useWebSocket.js","components/cards/CommonCard.js","components/cards/CardRow.js","components/cards/DetectorCard.js","components/cards/GeneratorCard.js","components/cards/SystemCard.js","components/cards/OrganAutoCard.js","components/cards/EquipImageCard.js","components/cards/DicomCard.js","components/cards/RemoteAccessCard.js","components/cards/StandCard.js","components/cards/DosimeterCard.js","components/cards/SoftwareCard.js","components/SummaryComponent.js","components/MapComponent.js","components/EventsComponent.js","components/tables/historyTables/CommonTable.js","components/tables/historyTables/SystemTable.js","components/tables/historyTables/OrganAutoTable.js","components/tables/historyTables/GeneratorTable.js","components/tables/historyTables/StudiesTable.js","components/tables/historyTables/SofwareTable.js","components/tables/historyTables/DetectorTable.js","components/tables/historyTables/StandTable.js","components/tables/historyTables/DicomTable.js","components/HistoryComponent.js","components/MainInfoComponent.js","components/mainComponents/MainComponent.js","App.js","index.js"],"names":["AllEquipsContext","createContext","initialState","equips","reducer","state","action","type","payload","filter","p","equipInfo","equipName","State","Name","Connected","includes","Error","AllEquipsContextProvider","props","useReducer","dispatch","children","Provider","value","CurrentEquipContext","detectors","generator","collimator","dosimeter","stand","dicom","system","organAuto","software","Id","newWL","WorkList","oldWL","e","map","w","newPacs","PACS","oldPacs","CurrentEquipContextProvider","EquipsServiceAddress","window","WebSocketAddress","HandlerWrapper","name","handler","a","console","log","error","config","code","request","response","data","leadZero","val","getUSFullDate","date","getFullYear","getMonth","getDate","sessionUid","d","Date","getTime","r","Math","random","performance","now","generateSessionUid","EquipsController","GetAllEquips","path","axios","get","Activate","activatedEquipInfo","deactivatedEquipInfo","SearchEquip","currType","startDate","endDate","RunTeamViewer","post","RunTaskManager","SendAtlasLogs","XilibLogsOn","useStyles","makeStyles","theme","appBar","width","marginLeft","formControl","margin","spacing","minWidth","selectEmpty","color","optionStyle","backgroundColor","MainToolBar","classes","useContext","allEquipsState","allEquipsDispatch","currEquipState","currEquipDispatch","useState","handleEquipsChange","event","select","target","options","selectedIndex","onEquipChanged","EquipWorker","useEffect","length","connection","setConnection","socket","WebSocket","onopen","onclose","onmessage","JSON","parse","Topic","values","Data","useWebSocket","AppBar","position","className","Toolbar","Typography","variant","noWrap","FormControl","NativeSelect","onChange","i","ind","toString","useCardsStyles","root","marginBottom","marginRight","bullet","display","transform","title","fontSize","pos","descr","textAlign","fontWeight","button","marginTop","buttonDescr","alignSelf","errorDescr","errorValue","CardRow","icon","size","style","rightWidth","rightColor","CardErrorRow","CardButtonedRow","Button","onClick","DetectorCard","React","memo","bull","Card","CardContent","component","DetectorName","GeneratorCard","Mas","Kv","Workstation","HeatStatus","PedalPressed","ErrorDescriptions","Code","Description","SystemCard","Processor","Model","CPU_Load","Memory","Memory_total_Gb","Memory_free_Gb","HDD","Letter","TotalSize","FreeSize","PhysicalDisks","MediaType","FriendlyName","Size_Gb","Network","NIC","IP","VGA","Card_Name","Memory_Gb","Driver_Version","Monitor","Device_Name","Width","Height","Printer","Printer_Name","Port_Name","OrganAutoCard","Projection","Direction","AgeId","Constitution","media","height","paddingTop","EquipImageCard","equipClasses","CardMedia","image","DicomCard","RemoteAccessCard","onRunTeamViewer","onRunTaskManager","onAtlasLogs","onXilibLogs","StandCard","RasterState","Position_Current","DosimeterCard","Dose","parseFloat","toFixed","SoftwareCard","Sysinfo","OS","Version","MSSQL","SQL","User","Current_user","Atlas","Atlas_Version","XiLibs_Version","Complex_type","Multimonitor","Atlas_User","Role","column","SummaryComponent","MapComponent","EventsComponent","container","maxHeight","errorCell","background","CommonTable","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","label","id","TableBody","slice","row","hover","role","tabIndex","hasErrors","format","formatArray","v","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","columnsPermanent","columnsVolatile","SystemTable","volatileInfoRows","VolatileInfo","permanentInfoRows","PermanentInfo","OrganAutoTable","currentValue","GeneratorTable","StudiesTable","SofwareTable","DetectorTable","StandTable","DicomTable","commonSpacing","textField","HistoryComponent","curDate","setDate","setStartDate","setEndDate","setEquipName","setCurrType","systemInfos","setSystemInfos","organAutos","setOrganAutos","generators","setGenerators","studies","setStudies","stands","setStands","setDetectors","setDosimeters","setSoftware","setDicom","handleTypeChange","onSearch","alert","TextField","defaultValue","ev","InputLabelProps","shrink","MainInfoComponent","Index","drawerWidth","mainMenu","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","palette","default","padding","MainComponent","setSelectedIndex","CssBaseline","Drawer","paper","anchor","Divider","List","text","index","ListItem","selected","handleListItemClick","ListItemIcon","ListItemText","primary","Title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f0649ee.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\r\n\r\nexport const AllEquipsContext = createContext();\r\n\r\nconst initialState = {\r\n  equips: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SETEQUIPS': {\r\n      return {\r\n        ...state,\r\n        equips: action.payload?.filter(p => p)\r\n      };\r\n    }    \r\n    case 'ADDEQUIP': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    case 'CONNECTIONCHANGED': {\r\n      let equips = state.equips ?? [];\r\n      const equipName = action.payload.State.Name;\r\n      if(action.payload.State.Connected && !equips.includes(equipName)){\r\n        equips = [...equips, equipName]\r\n      }\r\n      else if(!action.payload.State.Connected && equips.includes(equipName)){\r\n        equips = equips.filter(p => p != equipName)\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        equips: equips\r\n      };\r\n    }    \r\n    \r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const AllEquipsContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <AllEquipsContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </AllEquipsContext.Provider>\r\n  );\r\n};","import React, { useReducer, createContext } from 'react';\r\n\r\nexport const CurrentEquipContext = createContext();\r\n\r\nconst initialState = {\r\n  equipInfo: '',\r\n  detectors: [],\r\n  generator: {},\r\n  collimator:{},\r\n  dosimeter:{},\r\n  stand:{},\r\n  dicom:{},\r\n  //hdd:[],\r\n  //memory:{},\r\n  //cpu:{},\r\n  system:{},\r\n  organAuto:{},\r\n  software:{},\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {    \r\n    case 'RESET': {\r\n      return initialState;\r\n    }\r\n    case 'SETEQUIPINFO': {\r\n      return {\r\n        ...state,\r\n        equipInfo: action.payload\r\n      };\r\n    }\r\n    /*case 'SETHDDS': {\r\n      return {\r\n        ...state,\r\n        hdd: action.payload\r\n      };\r\n    }\r\n    case 'SETMEMORY': {\r\n      return {\r\n        ...state,\r\n        memory: action.payload\r\n      };\r\n    }\r\n    case 'SETCPU': {\r\n      return {\r\n        ...state,\r\n        cpu: action.payload\r\n      };\r\n    }*/\r\n    case 'SETSYSTEM': {\r\n      return {\r\n        ...state,\r\n        system: action.payload\r\n      };\r\n    }    \r\n    case 'SETORGANAUTO': {\r\n      return {\r\n        ...state,\r\n        organAuto: action.payload\r\n      };\r\n    }\r\n    case 'SETGENERATOR': {\r\n      return {\r\n        ...state,\r\n        generator: {Id: action.payload.Id, State: {...state.generator.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETDETECTOR': {\r\n      return {\r\n        ...state,\r\n        detectors: [action.payload]\r\n      };\r\n    }\r\n    case 'SETSTAND': {\r\n      return {\r\n        ...state,\r\n        stand: {Id: action.payload.Id, State: {...state.stand.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETDOSIMETER': {\r\n      return {\r\n        ...state,\r\n        dosimeter: {Id: action.payload.Id, State: {...state.dosimeter.State, ...action.payload.State}}\r\n      };\r\n    }\r\n    case 'SETCOLLIMATOR': {\r\n      return {\r\n        ...state,\r\n        collimator: action.payload\r\n      };\r\n    }\r\n    case 'SETSOFTWARE': {\r\n      return {\r\n        ...state,\r\n        software: action.payload\r\n      };\r\n    }\r\n    case 'SETDICOM': {\r\n      let newWL = action.payload.WorkList;\r\n      if(newWL){\r\n        const oldWL = state.dicom.WorkList?.filter(e => !newWL.map(w => w.Name).includes(e.Name));\r\n        if(oldWL){\r\n          newWL = [...newWL, ...oldWL];\r\n        }\r\n      }\r\n      else{\r\n        newWL = state.dicom.WorkList;\r\n      }\r\n\r\n      let newPacs = action.payload.PACS;\r\n      if(newPacs){\r\n        const oldPacs = state.dicom.PACS?.filter(e => !newPacs.map(w => w.Name).includes(e.Name));\r\n        if(oldPacs){\r\n          newPacs = [...newPacs, ...oldPacs];\r\n        }\r\n      }\r\n      else{\r\n        newPacs = state.dicom.PACS;\r\n      }\r\n\r\n      const dicom = {PACS: newPacs, WorkList: newWL};\r\n      return {\r\n        ...state,\r\n        dicom: dicom\r\n      };\r\n    }    \r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport const CurrentEquipContextProvider = props => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { children } = props;\r\n\r\n  return (\r\n    <CurrentEquipContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </CurrentEquipContext.Provider>\r\n  );\r\n};","//export const EquipsServiceAddress = 'http://localhost:8181';\r\n//export const WebSocketAddress = 'ws://localhost:8080';\r\n//export const EquipsServiceAddress = 'https://mprom.ml';\r\n//export const WebSocketAddress = 'wss://mprom.ml:8080';\r\n\r\nexport const EquipsServiceAddress = window.EquipsServiceAddress;\r\nexport const WebSocketAddress = window.WebSocketAddress;\r\n\r\nexport const SearchPeriod = 7;\r\n\r\n","export async function HandlerWrapper(name, handler) {\r\n    try {\r\n        console.log(`resting ${name}`)\r\n        return await handler();\r\n    }\r\n    catch (error) {\r\n        console.log(error.error, error.config, error.code, error.request, error.response, error.response?.data);\r\n    }\r\n}\r\n\r\nexport function GetJsonHeader() {\r\n    return {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        }\r\n    }\r\n}","const generateSessionUid = function () { // Public Domain/MIT\r\n    var d = new Date().getTime();//Timestamp\r\n    var r = Math.random() * 1000;//random number between 0 and 1000\r\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\r\n    return `${d}_${r}`;\r\n}\r\n\r\nconst leadZero = (val) => val < 10 ? '0' + val : val;\r\nexport function getUSFullDate(date)\r\n{\r\n    return date.getFullYear() + \"-\" + leadZero(date.getMonth() + 1) + \"-\"+ leadZero(date.getDate());\r\n}\r\n\r\nexport const sessionUid = generateSessionUid();","import axios from 'axios';\r\nimport { EquipsServiceAddress } from '../model/constants'\r\nimport {HandlerWrapper, GetJsonHeader} from './commonWorker'\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nconst EquipsController = '/equips';\r\n\r\n/*export async function GetStudyList(filter) {\r\n    return await HandlerWrapper('StudyList', async () => {\r\n        const response = await axios.post(JournalServiceAddress + JournalController +\r\n            '/StudyList',\r\n            JSON.stringify(filter),\r\n            GetJsonHeader());\r\n        return response.data;\r\n    });\r\n};*/\r\n\r\nexport async function GetAllEquips() {\r\n    return await HandlerWrapper('GetAllEquips', async () => {\r\n        const path = EquipsServiceAddress + EquipsController + '/GetAllEquips';\r\n        console.log(path);\r\n        const response = await axios.get(path);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function Activate(activatedEquipInfo, deactivatedEquipInfo) {\r\n    return await HandlerWrapper('Activate', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/Activate?sessionUid=' + sessionUid+\r\n            '&activatedEquipInfo=' + activatedEquipInfo+\r\n            '&deactivatedEquipInfo=' + deactivatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SearchEquip(currType, equipName, startDate, endDate) {\r\n    return await HandlerWrapper('SearchEquip', async () => {\r\n        const response = await axios.get(EquipsServiceAddress + EquipsController +\r\n            '/SearchEquip?currType=' + currType+\r\n            '&equipName=' + equipName+\r\n            '&startDate=' + startDate+\r\n            '&endDate=' + endDate);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTeamViewer(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTeamViewer', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTeamViewer?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function RunTaskManager(activatedEquipInfo) {\r\n    return await HandlerWrapper('RunTaskManager', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/RunTaskManager?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function SendAtlasLogs(activatedEquipInfo) {\r\n    return await HandlerWrapper('SendAtlasLogs', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/SendAtlasLogs?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport async function XilibLogsOn(activatedEquipInfo) {\r\n    return await HandlerWrapper('XilibLogsOn', async () => {\r\n        const response = await axios.post(EquipsServiceAddress + EquipsController +\r\n            '/XilibLogsOn?activatedEquipInfo=' + activatedEquipInfo);\r\n        return response.data;\r\n    });\r\n};","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nimport { AllEquipsContext } from '../../context/allEquips-context';\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\n\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\n// import * as WebSocket from '../../workers/webSocket'\r\nimport {sessionUid} from '../../utilities/utils'\r\nimport { useWebSocket } from '../../workers/useWebSocket'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n    color: \"white\",\r\n  },\r\n  optionStyle:{\r\n    backgroundColor: \"#3f51b5\",\r\n    color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function MainToolBar() {\r\n  console.log(`! render MainToolBar ` + sessionUid);\r\n\r\n  const classes = useStyles();\r\n  const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n  const [currEquip, setCurrEquip] = useState('none');\r\n\r\n  const handleEquipsChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    await onEquipChanged(val);\r\n  };\r\n\r\n  const onEquipChanged = async equipInfo =>\r\n  {\r\n    currEquipDispatch({ type: 'RESET', payload: true });\r\n    await EquipWorker.Activate(equipInfo, currEquipState.equipInfo);\r\n    currEquipDispatch({ type: 'SETEQUIPINFO', payload: equipInfo }); \r\n  }\r\n  \r\n  useEffect(() => {\r\n      (async () => {\r\n          if(allEquipsState.equips !== null)\r\n          {\r\n            return;\r\n          }\r\n\r\n          const equips = await EquipWorker.GetAllEquips();\r\n          allEquipsDispatch({ type: 'SETEQUIPS', payload: equips ? equips : [] });   \r\n          if(!equips || equips?.length === 0)     \r\n          {\r\n            return;\r\n          }\r\n\r\n          const equipInfo = equips[0];\r\n          onEquipChanged(equipInfo);\r\n      })();\r\n  }, [allEquipsState.equips]);\r\n\r\n\r\n  const webSocket = useWebSocket(\r\n    {\r\n    }\r\n  );\r\n\r\n\r\n  return (    \r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n            </Typography>\r\n            <FormControl className={classes.formControl}>\r\n              <NativeSelect\r\n                value={currEquipState.equipInfo}\r\n                onChange={handleEquipsChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty}\r\n                variant=\"outlined\"\r\n              >\r\n                {allEquipsState.equips?.map((i, ind) => (\r\n                    <option key={ind.toString()} value={i} className={classes.optionStyle}>{i}</option>\r\n                    ))\r\n                }\r\n              </NativeSelect>\r\n            </FormControl>\r\n        </Toolbar>\r\n    </AppBar>\r\n  );\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { WebSocketAddress } from '../model/constants'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\nimport { AllEquipsContext } from '../context/allEquips-context';\r\n\r\nimport {sessionUid} from '../utilities/utils'\r\n\r\nexport function useWebSocket(props) {\r\n    console.log(`useWebSocket `+sessionUid);\r\n\r\n    const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n    const [allEquipsState, allEquipsDispatch] = useContext(AllEquipsContext);\r\n    const [connection, setConnection] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        try {            \r\n            const socket = new WebSocket(WebSocketAddress + \"/websocket?uid=\" + sessionUid);\r\n            setConnection(socket);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (connection) {\r\n            connection.onopen = function () {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n                // connection.send(\"789 from ui\");\r\n            };\r\n        \r\n            connection.onclose = function(event) {\r\n                console.log(`Status: Connected ${sessionUid}\\n`);\r\n              };\r\n\r\n            connection.onmessage = function (e) {\r\n                console.log(\"Server: \" + e.data + \"\\n\");\r\n                const data = JSON.parse(e.data);\r\n        \r\n                // if(data?.Topic.includes('/ARM/Hardware/HDD'))\r\n                // {\r\n                //     const values = data? JSON.parse(data.Data) : null;\r\n                //     currEquipDispatch({ type: 'SETHDDS', payload: values }); \r\n                // }\r\n                // else if(data?.Topic.includes('/ARM/Hardware/Memory'))\r\n                // {\r\n                //     const values = data? JSON.parse(data.Data) : null;\r\n                //     currEquipDispatch({ type: 'SETMEMORY', payload: values }); \r\n                // }\r\n                // else if(data?.Topic.includes('/ARM/Hardware/Processor'))\r\n                // {\r\n                //     const values = data? JSON.parse(data.Data) : null;\r\n                //     currEquipDispatch({ type: 'SETCPU', payload: values }); \r\n                // }   \r\n                if(data?.Topic.includes('/ARM/Hardware'))\r\n                {\r\n                    try\r\n                    {\r\n                        const values = data? JSON.parse(data.Data) : null;\r\n                        currEquipDispatch({ type: 'SETSYSTEM', payload: values }); \r\n                    }\r\n                    catch(e)\r\n                    {\r\n                        console.log(e);\r\n                    }                    \r\n                }             \r\n                else if(data?.Topic.includes('/organauto'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETORGANAUTO', payload: values }); \r\n                }                \r\n                else if(data?.Topic.includes('/stand'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSTAND', payload: values }); \r\n                }\r\n                else if(data?.Topic.includes('/generator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETGENERATOR', payload: values }); \r\n                }\r\n                else if(data?.Topic.includes('/detector'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDETECTOR', payload: values }); \r\n                }\r\n                else if(data?.Topic.includes('/dosimeter'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDOSIMETER', payload: values }); \r\n                }\r\n                else if(data?.Topic.includes('/collimator'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETCOLLIMATOR', payload: values }); \r\n                }\r\n                else if(data?.Topic.includes('/ARM/Software'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETSOFTWARE', payload: values }); \r\n                }\r\n                else if(data?.Topic.includes('/dicom'))\r\n                {\r\n                    const values = data? JSON.parse(data.Data) : null;\r\n                    currEquipDispatch({ type: 'SETDICOM', payload: values }); \r\n                }\r\n                else if(data?.Topic.includes('Subscribe'))\r\n                {\r\n                    allEquipsDispatch({ type: 'CONNECTIONCHANGED', payload: data }); \r\n                }   \r\n            };\r\n        }\r\n    }, [connection]);\r\n\r\n    return connection;\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useCardsStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",//275,\r\n    //maxWidth: 345,\r\n    marginBottom: 12,\r\n    marginRight: 12,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n root: {\r\n   display: \"flex\",\r\n  },\r\n  descr: {\r\n    width:'65%',\r\n    margin: '0 0.5em',\r\n    textAlign: 'left',\r\n  },\r\n  value: {\r\n    marginRight: '0.5em',\r\n    fontWeight: 'bold',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n  },\r\n  button: {\r\n    marginRight: '0.5em',\r\n    width:'30%',\r\n    textAlign: 'right',\r\n    marginTop: '0.5em',\r\n  },\r\n  buttonDescr: {\r\n    alignSelf: 'center',\r\n  },\r\n  errorDescr: {\r\n    width:'10%',\r\n  },\r\n  errorValue: {\r\n    width:'80%',\r\n  },\r\n});\r\n\r\nexport default function CardRow(props) {\r\n\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {props.icon !== 'none' ? <RemoveRedEyeIcon color=\"primary\" size=\"small\"></RemoveRedEyeIcon> : <></>}\r\n        <Typography className={classes.descr} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value} color=\"textSecondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.value.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardErrorRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <RemoveRedEyeIcon color=\"secondary\" size=\"small\"></RemoveRedEyeIcon>\r\n        <Typography className={classes.descr, classes.errorDescr} color=\"secondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Typography className={classes.value, classes.errorValue} color=\"secondary\" style = {{\r\n            width: props.rightWidth ? props.rightWidth : classes.errorValue.width,\r\n            color: props.rightColor ? props.rightColor : \"\",\r\n          }}>\r\n          {props.value}\r\n        </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardButtonedRow(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Typography className={`${classes.descr} ${classes.buttonDescr}`} color=\"textSecondary\">\r\n          {props.descr}\r\n        </Typography>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={props.onClick}>\r\n          {props.title}\r\n        </Button>\r\n    </div>\r\n  );\r\n}","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DetectorCard(props) {\r\nconst DetectorCard = React.memo((props) => {\r\n  console.log(`! render DetectorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Детекторы\r\n        </Typography>\r\n        {props.detectors?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}{i.DetectorName} \r\n            </Typography>\r\n            <CardRow descr=\"Состояние\" \r\n              value={i.State !== 2? \"Не готов\" : \"Готов\"}\r\n              rightColor={i.State !== 2? \"red\" : \"green\"}></CardRow>\r\n          </div>\r\n          ))\r\n        }        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DetectorCard;","import React, {useContext}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst GeneratorCard = React.memo((props) => {\r\n//export default function GeneratorCard() {\r\n  console.log(`! render GeneratorCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const generator = props.generator;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Генератор\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={generator?.State?.State > 0? \"Готов\" : \"Не готов\"}\r\n          rightColor={generator?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Ток\" value={generator?.State?.Mas ? generator.State.Mas + ' мАс' : ''}></CardRow>\r\n        <CardRow descr=\"Напряжение\" value={generator?.State?.Kv ? generator.State.Kv + ' кВ' : ''}></CardRow>\r\n        <CardRow descr=\"Логическое. р. м.\" value={generator?.State?.Workstation}></CardRow>\r\n        <CardRow descr=\"Нагрев\" value={generator?.State?.HeatStatus}></CardRow>\r\n        <CardRow descr=\"Педаль\" value={generator?.State?.PedalPressed}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={generator?.State?.ErrorDescriptions?.length}></CardRow>\r\n        {generator?.State?.ErrorDescriptions?.length ? \r\n          generator.State.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default GeneratorCard;\r\n","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst SystemCard = React.memo((props) => {\r\n//export default function SystemCard() {\r\n  console.log(`! render SystemCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const system = props.system;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}CPU\r\n        </Typography>\r\n        <CardRow descr=\"Модель\" value={system?.Processor?.Model} rightWidth={'100%'}></CardRow>\r\n        <CardRow descr=\"Загрузка\" value={system?.Processor?.CPU_Load+'%'}></CardRow>\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Память\r\n        </Typography>\r\n        <CardRow descr=\"Всего\" value={system?.Memory?.Memory_total_Gb+' Гб'}></CardRow>\r\n        <CardRow descr=\"Доступно\" value={system?.Memory?.Memory_free_Gb+' Гб'}></CardRow>\r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Диски\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Логические диски\r\n        </Typography>\r\n        {system?.HDD?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.Letter}\r\n            </Typography>\r\n            <CardRow descr=\"Всего\" value={i.TotalSize+' Гб'}></CardRow>\r\n            <CardRow descr=\"Доступно\" value={i.FreeSize+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n        <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Физические диски\r\n        </Typography>\r\n        {system?.PhysicalDisks?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              {bull}Диск {i.MediaType}\r\n            </Typography>\r\n            <CardRow descr={i.FriendlyName+' Гб'} value={i.Size_Gb+' Гб'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Сеть\r\n        </Typography>\r\n        {system?.Network?.filter(i => i.NIC).map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.NIC} value={i.IP}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Видеоадаптеры\r\n        </Typography>\r\n        {system?.VGA?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.Card_Name} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Память\" value={i.Memory_Gb+' Гб'}></CardRow>\r\n            <CardRow descr=\"Драйвер\" value={i.Driver_Version}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Мониторы\r\n        </Typography>\r\n        {system?.Monitor?.map((i, ind) => (\r\n          <CardRow key={ind.toString()} descr={i.Device_Name} value={i.Width+'x'+i.Height}></CardRow>\r\n          ))\r\n        } \r\n\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Принтеры\r\n        </Typography>\r\n        {system?.Printer?.map((i, ind) => (\r\n          <div key={ind.toString()} >\r\n            <CardRow descr=\"Имя\" value={i.Printer_Name} rightWidth={'100%'}></CardRow>\r\n            <CardRow descr=\"Порт\" value={i.Port_Name} rightWidth={'100%'}></CardRow>\r\n          </div>\r\n          ))\r\n        } \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SystemCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n//export default function OrganAutoCard(props) {\r\nconst OrganAutoCard = React.memo((props) => {\r\n  console.log(`! render OrganAutoCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const organAuto = props.organAuto;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Органоавтоматика\r\n        </Typography>\r\n        <CardRow descr=\"Название\" value={organAuto?.Name} rightWidth={'50%'}></CardRow>\r\n        <CardRow descr=\"Прекция\" value={organAuto?.Projection}></CardRow>\r\n        <CardRow descr=\"Направление\" value={organAuto?.Direction}></CardRow>\r\n        <CardRow descr=\"Возр. группа\" value={ organAuto?.AgeId}></CardRow>\r\n        <CardRow descr=\"Телосложение\" value={organAuto?.Constitution}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default OrganAutoCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport CardRow from './CardRow'\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%', \r\n  },\r\n}));\r\n\r\n// export default function EquipImageCard() {\r\nconst EquipImageCard = React.memo((props) => {\r\n  console.log(`! render EquipImageCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const equipClasses = useStyles();\r\n\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={equipClasses.media}\r\n        image=\"./girl.jpg\"\r\n        title=\"Аппарат\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Аппарат : {equipInfo}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default EquipImageCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DicomCard() {\r\nconst DicomCard = React.memo((props) => {\r\n  console.log(`! render DicomCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dicom = props.dicom;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}DICOM\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}PACS\r\n        </Typography>\r\n        {dicom?.PACS?.length ? \r\n          dicom.PACS.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}WorkList\r\n        </Typography>\r\n        {dicom?.WorkList?.length ? \r\n          dicom.WorkList.map((i, ind) => (\r\n            <div key={ind.toString()}>\r\n              <CardRow descr={i.Name} value={ i.IP}></CardRow>\r\n              <CardRow   \r\n                descr={'Состояние'} \r\n                value={ i.State ? \"Включен\" : \"Нет связи\"} \r\n                rightColor={0? \"green\" : \"red\"}\r\n              ></CardRow>\r\n            </div>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DicomCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {useCardsStyles} from './CommonCard'\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport * as EquipWorker from '../../workers/equipWorker'\r\nimport {CardButtonedRow} from './CardRow'\r\n\r\nconst RemoteAccessCard = React.memo((props) => {\r\n// export default function RemoteAccessCard() {\r\n  console.log(`! render RemoteAccessCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const equipInfo = props.equipInfo;\r\n  const onRunTeamViewer = async () => {\r\n    const res = await EquipWorker.RunTeamViewer(equipInfo);\r\n  };\r\n\r\n  const onRunTaskManager = async () => {\r\n    const res = await EquipWorker.RunTaskManager(equipInfo);\r\n  };\r\n\r\n  const onAtlasLogs = async () => {\r\n    const res = await EquipWorker.SendAtlasLogs(equipInfo);\r\n  };\r\n\r\n  const onXilibLogs = async () => {\r\n    const res = await EquipWorker.XilibLogsOn(equipInfo);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Удаленный доступ\r\n        </Typography>\r\n        <CardButtonedRow descr={'TeamViewer'} title={'Запустить'} onClick={onRunTeamViewer}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Атлас'} title={'Прислать'} onClick={onAtlasLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'Логи Xilib'} title={'Включить'} onClick={onXilibLogs}></CardButtonedRow>\r\n        <CardButtonedRow descr={'TaskManager'} title={'Запустить'} onClick={onRunTaskManager}></CardButtonedRow>\r\n        {/* <Typography className={classes.pos} color=\"textSecondary\">\r\n          TeamViewer\r\n        </Typography>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onRunTV}>\r\n          Запустить\r\n        </Button> */}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default RemoteAccessCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\nconst StandCard = React.memo((props) => {\r\n// export default function StandCard() {\r\n  console.log(`! render StandCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const stand = props.stand;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Штатив\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={stand?.State?.State > 0? \"Готов\" : \"Не готов\" }\r\n          rightColor={stand?.State?.State > 0? \"green\" : \"red\"}\r\n        ></CardRow>\r\n        <CardRow descr=\"Растр\" value={stand?.State?.RasterState}></CardRow>\r\n        <CardRow descr=\"Позиция\" value={stand?.State?.Position_Current}></CardRow>\r\n        <CardRow descr=\"Ошибки\" value={stand?.State?.ErrorDescriptions?.length}></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default StandCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow from './CardRow'\r\n\r\n// export default function DosimeterCard() {\r\nconst DosimeterCard = React.memo((props) => {\r\n  console.log(`! render DosimeterCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const dosimeter = props.dosimeter;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Дозиметр\r\n        </Typography>\r\n        <CardRow descr=\"Состояние\" \r\n          value={dosimeter?.State?.State > 0? \"готов\" : \"Не готов\"}\r\n          rightColor={dosimeter?.State?.State > 0 ? \"green\" : \"red\"}></CardRow>\r\n        <CardRow descr=\"Доза\" value={dosimeter?.State?.Dose ? \r\n          parseFloat(dosimeter?.State?.Dose).toFixed(2) + ' сГр' : '' }></CardRow>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default DosimeterCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CurrentEquipContext } from '../../context/currentEquip-context';\r\nimport {useCardsStyles} from './CommonCard'\r\nimport CardRow, {CardErrorRow} from './CardRow'\r\n\r\nconst SoftwareCard = React.memo((props) => {\r\n//export default function SoftwareCard() {\r\n  console.log(`! render SoftwareCard`);\r\n\r\n  const classes = useCardsStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const software = props.software;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {bull}Software\r\n        </Typography>\r\n        <CardRow descr={software?.Sysinfo?.OS} value={software?.Sysinfo?.Version}></CardRow>\r\n        <CardRow descr={software?.MSSQL?.SQL} value={software?.MSSQL?.Version}></CardRow>\r\n        <CardRow descr={'Пользователь'} value={software?.User?.Current_user}></CardRow>\r\n\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {bull}Атлас\r\n        </Typography>\r\n        <CardRow descr=\"Версия\" value={software?.Atlas?.Atlas_Version}></CardRow>\r\n        <CardRow descr=\"Xilib\" value={software?.Atlas?.XiLibs_Version}></CardRow>\r\n        <CardRow descr=\"Конфигурация\" value={software?.Atlas?.Complex_type}></CardRow>\r\n        <CardRow descr=\"Язык\" value={software?.Atlas?.Complex_type}></CardRow>\r\n        <CardRow descr=\"Multimonitor\" value={software?.Atlas?.Multimonitor}></CardRow>\r\n        <CardRow descr={software?.Atlas?.Atlas_User?.Role} value={software?.Atlas?.Atlas_User?.User}></CardRow>        \r\n        <CardRow descr=\"Ошибки\" value={''}></CardRow>\r\n        {software?.ErrorDescriptions?.length ? \r\n          software.ErrorDescriptions.map((i, ind) => (\r\n            <CardErrorRow key={ind.toString()}  descr={i.Code} value={i.Description} ></CardErrorRow>\r\n            ))\r\n            :\r\n            <></>          \r\n        }\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nexport default SoftwareCard;","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\n\r\nimport DetectorCard from './cards/DetectorCard'\r\nimport GeneratorCard from './cards/GeneratorCard'\r\nimport SystemCard from './cards/SystemCard'\r\nimport HddCard from './cards/HddCard'\r\nimport OrganAutoCard from './cards/OrganAutoCard'\r\nimport EquipImageCard from './cards/EquipImageCard'\r\nimport DicomCard from './cards/DicomCard'\r\nimport RemoteAccessCard from './cards/RemoteAccessCard'\r\nimport StandCard from './cards/StandCard'\r\nimport DosimeterCard from './cards/DosimeterCard'\r\nimport SoftwareCard from './cards/SoftwareCard'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  column:{\r\n    width: \"30%\",\r\n    marginRight: \"12px\",\r\n  }\r\n}));\r\n\r\nexport default function SummaryComponent(props) {\r\n  console.log(\"render SummaryComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.column}>\r\n        <EquipImageCard equipInfo={currEquipState.equipInfo}></EquipImageCard>\r\n        <SystemCard system={currEquipState.system}></SystemCard>\r\n        {/* <HddCard></HddCard> */}\r\n      </div>\r\n      <div className={classes.column}>\r\n        <OrganAutoCard organAuto={currEquipState.organAuto}></OrganAutoCard>\r\n        <GeneratorCard generator={currEquipState.generator}></GeneratorCard>\r\n        <DetectorCard detectors={currEquipState.detectors}></DetectorCard>\r\n        <StandCard stand={currEquipState.stand}></StandCard>\r\n        <DosimeterCard dosimeter={currEquipState.dosimeter}></DosimeterCard>\r\n      </div>\r\n      <div className={classes.column}>\r\n        <RemoteAccessCard equipInfo={currEquipState.equipInfo}></RemoteAccessCard>\r\n        <DicomCard dicom={currEquipState.dicom}></DicomCard>\r\n        <SoftwareCard software={currEquipState.software}></SoftwareCard>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function MapComponent(props) {\r\n  console.log(\"render MapComponent\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n}));\r\n\r\nexport default function EventsComponent(props) {\r\n  console.log(\"render EventsComponent\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  errorCell:{\r\n    color: 'white',\r\n    background: 'red',\r\n    margin: '0px',\r\n  }\r\n});\r\n\r\nexport default function CommonTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const rows = props.rows ? props.rows : [];\r\n  const columns = props.columns;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}\r\n                        className={column.hasErrors && column.hasErrors(value) ? classes.errorCell : ''}\r\n                      >\r\n                        {column.format ? column.format(value) : \r\n                          column.formatArray ? column.formatArray(value).map(v => <pre>{v}</pre>) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CommonTable from './CommonTable'\r\n\r\nconst columnsPermanent = [\r\n    { id: 'Parameter', label: 'Параметр', minWidth: 170 },    \r\n    { id: 'Value', label: 'Значение', minWidth: 100 },\r\n    { id: 'DateTime', label: 'Посл. изменение', minWidth: 100 },\r\n  ];\r\n\r\nconst columnsVolatile = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'Processor_CPU_Load', label: 'CPU загрузка', minWidth: 100 },\r\n    { id: 'Memory_Memory_free_Gb', label: 'Свободно памяти', minWidth: 100 },\r\n    { id: 'HddName', label: 'Имя диска', minWidth: 100 },\r\n    { id: 'HddFreeSpace', label: 'Свободно', minWidth: 100 },  \r\n  ];\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\nexport default function SystemTable(props) {\r\n  console.log(\"render SystemTable\");\r\n\r\n  const classes = useStyles();\r\n  const volatileInfoRows = props.data?.VolatileInfo;\r\n  const permanentInfoRows = props.data?.PermanentInfo;\r\n  return (\r\n    <div className={classes.root}>\r\n      |{props.equipName ? \r\n        <div>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n              {props.equipName}\r\n          </Typography>\r\n          <CommonTable columns={columnsPermanent} rows={permanentInfoRows}></CommonTable>\r\n          </div>\r\n        : <></>\r\n      }\r\n      <CommonTable columns={columnsVolatile} rows={volatileInfoRows}></CommonTable>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from './CommonTable'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'Name', label: 'Название', minWidth: 100 },\r\n  { id: 'Projection', label: 'Проекция', minWidth: 100 },\r\n  { id: 'Direction', label: 'Направление', minWidth: 100 },\r\n  { id: 'AgeId', label: 'Возр. группа', minWidth: 100 },\r\n  { id: 'Constitution', label: 'Телосложение', minWidth: 100 },  \r\n];\r\n\r\nexport default function OrganAutoTable(props) {\r\n  console.log(\"render OrganAutoTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from './CommonTable'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'State', label: 'Состояние', minWidth: 100 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'Workstation', label: 'Раб. место', minWidth: 100 },\r\n  { id: 'HeatStatus', label: 'Нагрев', minWidth: 100 },\r\n  { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n    formatArray: (values) =>\r\n    {\r\n      if(!values || !values.length) {\r\n        return values ?? [];\r\n      }\r\n      //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n      return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n    },\r\n    hasErrors: (values) =>\r\n    {\r\n      if(!values || !values.length) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n  },\r\n  { id: 'Mas', label: 'Ток', minWidth: 100 },\r\n  { id: 'Kv', label: 'Напряжение', minWidth: 100 },  \r\n];\r\n\r\nexport default function GeneratorTable(props) {\r\n  console.log(\"render GeneratorTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from './CommonTable'\r\n\r\nconst columns = [\r\n  { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n  { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n  { id: 'StudyId', label: 'Id исслед', minWidth: 100 },\r\n  { id: 'StudyDicomUid', label: 'Dicom Uid', minWidth: 100 },\r\n  { id: 'StudyName', label: 'Наименование', minWidth: 100 },\r\n  { id: 'State', label: 'Состояние', minWidth: 100 },\r\n];\r\n\r\nexport default function StudiesTable(props) {\r\n  console.log(\"render StudiesTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport CommonTable from './CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n    { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n    { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n    { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n    { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100, \r\n      formatArray: (values) =>\r\n      {\r\n        if(!values || !values.length) {\r\n          return values;\r\n        }\r\n        //const errors = values.reduce((accumulator, currentValue) => accumulator + `Code ${currentValue.Code}: ${currentValue. Description}`, '');\r\n        return values.map((currentValue) => `Code ${currentValue.Code}: ${currentValue. Description}`);\r\n      },\r\n      hasErrors: (values) =>\r\n      {\r\n        if(!values || !values.length) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      }\r\n    },\r\n  ];\r\n\r\nexport default function SofwareTable(props) {\r\n  console.log(\"render SofwareTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonTable from './CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'SettingsDB', label: 'Settings БД', minWidth: 100 },\r\n    { id: 'ObservationsDB', label: 'Observations БД', minWidth: 100 },\r\n    { id: 'Version', label: 'Версия Атлас', minWidth: 100 },\r\n    { id: 'XilibVersion', label: 'Версия xilib', minWidth: 100 },\r\n  ];\r\n\r\nexport default function DetectorTable(props) {\r\n  console.log(\"render DetectorTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonTable from './CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'State', label: 'Состояние', minWidth: 100 },\r\n    { id: 'RasterState', label: 'Растр', minWidth: 100 },\r\n    { id: 'Position_Current', label: 'Позиция', minWidth: 100 },\r\n    { id: 'ErrorDescriptions', label: 'Ошибки', minWidth: 100 },\r\n  ];\r\n  \r\nexport default function StandTable(props) {\r\n  console.log(\"render StandTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CommonTable from './CommonTable'\r\n\r\nconst columns = [\r\n    { id: 'EquipName', label: 'Комплекс', minWidth: 170 },\r\n    { id: 'DateTime', label: 'Время', minWidth: 100 },\r\n    { id: 'PACS', label: 'PACS', minWidth: 100,\r\n      formatArray: (values) =>\r\n      {\r\n        if(!values || !values.length) {\r\n          return values;\r\n        }\r\n        \r\n        return values.map((currentValue) => `${currentValue.Name}(${currentValue.IP}): ${currentValue.State ? 'Включен' : 'Нет связи'}`);\r\n      },\r\n    },\r\n    { id: 'WorkList', label: 'WorkList', minWidth: 100,\r\n        format: (values) =>\r\n        {\r\n          if(!values || !values.length) {\r\n            return values;\r\n          }\r\n          \r\n          return values.map((currentValue) => `${currentValue.Name}(${currentValue.IP}): ${currentValue.State ? 'Включен' : 'Нет связи'}`);\r\n        },\r\n    },\r\n  ];\r\n\r\nexport default function DicomTable(props) {\r\n  console.log(\"render DicomTable\");\r\n\r\n  const rows = props.data;\r\n  return (\r\n    <CommonTable columns={columns} rows={rows}></CommonTable>\r\n  );\r\n}","import React, {useState, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {SearchPeriod} from '../model/constants'\r\nimport {getUSFullDate} from '../utilities/utils'\r\n\r\nimport SystemTable from './tables/historyTables/SystemTable'\r\nimport OrganAutoTable from './tables/historyTables/OrganAutoTable'\r\nimport GeneratorTable from './tables/historyTables/GeneratorTable'\r\nimport StudiesTable from './tables/historyTables/StudiesTable'\r\nimport SofwareTable from './tables/historyTables/SofwareTable'\r\nimport DetectorTable from './tables/historyTables/DetectorTable'\r\nimport StandTable from './tables/historyTables/StandTable'\r\nimport DicomTable from './tables/historyTables/DicomTable'\r\n\r\nimport * as EquipWorker from '../workers/equipWorker'\r\nimport { CurrentEquipContext } from '../context/currentEquip-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display:\"flex\"\r\n  },\r\n  commonSpacing:{\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textField: {    \r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionStyle:{\r\n    // backgroundColor: \"#3f51b5\",\r\n    // color:\"black\",\r\n  }\r\n}));\r\n\r\nexport default function HistoryComponent(props) {\r\n  console.log(\"render HistoryComponent\");\r\n\r\n  const classes = useStyles();\r\n  const [currEquipState, currEquipDispatch] = useContext(CurrentEquipContext);\r\n\r\n  const curDate = new Date();\r\n  const [startDate, setStartDate] = useState(getUSFullDate(new Date(curDate.setDate(curDate.getDate() - SearchPeriod))));\r\n  const [endDate, setEndDate] = useState(getUSFullDate(new Date()));\r\n  const [equipName, setEquipName] = useState(currEquipState?.equipInfo);\r\n  const [currType, setCurrType] = useState(\"SystemInfo\");\r\n  \r\n  const [systemInfos, setSystemInfos] = useState([]);  \r\n  const [organAutos, setOrganAutos] = useState([]);  \r\n  const [generators, setGenerators] = useState([]);\r\n  const [studies, setStudies] = useState([]);\r\n  const [stands, setStands] = useState([]);\r\n  const [detectors, setDetectors] = useState([]);\r\n  const [dosimeters, setDosimeters] = useState([]);\r\n  const [software, setSoftware] = useState([]);\r\n  const [dicom, setDicom] = useState([]);\r\n\r\n  const handleTypeChange = async (event) => {\r\n    const select = event.target;\r\n    const val = select.options[select.selectedIndex].value;\r\n\r\n    setCurrType(val);\r\n  };\r\n\r\n  const handleStartDateChange = (ev) => {\r\n    setStartDate(ev.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (ev) => {\r\n    setEndDate(ev.target.value);\r\n  };\r\n\r\n  const handleNameChange = (ev) => {\r\n    setEquipName(ev.target.value);\r\n  };  \r\n\r\n  const onSearch = async () => {\r\n    const data = await EquipWorker.SearchEquip(currType, equipName, startDate, endDate);\r\n    switch (currType) {\r\n      case \"SystemInfo\":\r\n        setSystemInfos(data);\r\n        break;\r\n      case \"OrganAutos\":\r\n        setOrganAutos(data);\r\n        break;\r\n      case \"Generators\":\r\n        setGenerators(data);\r\n        break;\r\n      case \"Studies\":\r\n        setStudies(data);\r\n        break;\r\n      case \"Stands\":\r\n        setStands(data);\r\n        break;\r\n      case \"Dosimeters\":\r\n        setDosimeters(data);\r\n        break;\r\n      case \"Detectors\":\r\n        setDetectors(data);\r\n        break;\r\n      case \"Software\":\r\n        setSoftware(data);\r\n        break;\r\n      case \"Dicom\":\r\n        setDicom(data);\r\n        break;\r\n      default:\r\n        alert( \"Нет таких значений\" );\r\n    }\r\n  };\r\n\r\n  return (\r\n      <>\r\n    <div className={classes.root}>\r\n        <TextField\r\n            id=\"startDate\"\r\n            label=\"Начальная дата\"\r\n            type=\"date\"\r\n            defaultValue={startDate}\r\n            onChange={handleStartDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <TextField\r\n            id=\"endDate\"\r\n            label=\"Конечная дата\"\r\n            type=\"date\"\r\n            defaultValue={endDate}\r\n            onChange={handleEndDateChange}\r\n            className={classes.textField, classes.commonSpacing}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        <NativeSelect\r\n                value={currType}\r\n                onChange={handleTypeChange}\r\n                name=\"equips\"\r\n                className={classes.selectEmpty, classes.commonSpacing}\r\n                variant=\"outlined\"\r\n                label=\"Данные\"\r\n              >\r\n                <option value={\"SystemInfo\"} className={classes.optionStyle}>Система</option>\r\n                <option value={\"OrganAutos\"} className={classes.optionStyle}>Орган авто</option>\r\n                <option value={\"Generators\"} className={classes.optionStyle}>Генераторы</option>\r\n                <option value={\"Stands\"} className={classes.optionStyle}>Штативы</option>\r\n                <option value={\"Dosimeters\"} className={classes.optionStyle}>Дозиметры</option>\r\n                <option value={\"Detectors\"} className={classes.optionStyle}>Детекторы</option>\r\n                <option value={\"Studies\"} className={classes.optionStyle}>Исследования</option>\r\n                <option value={\"Software\"} className={classes.optionStyle}>Приложения</option>\r\n                <option value={\"Dicom\"} className={classes.optionStyle}>Dicom</option>\r\n        </NativeSelect>\r\n        <TextField id=\"standard-basic\" label=\"Компекс\" defaultValue={equipName} onChange={handleNameChange}/>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.commonSpacing} onClick={onSearch}>\r\n            Искать\r\n        </Button>\r\n    </div>\r\n    <div className={classes.root}>        \r\n        {currType === \"SystemInfo\" ? <SystemTable equipName={equipName} data={systemInfos}></SystemTable> : <></>}\r\n        {currType === \"OrganAutos\" ? <OrganAutoTable data={organAutos}></OrganAutoTable> : <></>}     \r\n        {currType === \"Generators\" ? <GeneratorTable data={generators}></GeneratorTable> : <></>}    \r\n        {currType === \"Studies\" ? <StudiesTable data={studies}></StudiesTable> : <></>}  \r\n        {currType === \"Software\" ? <SofwareTable data={software}></SofwareTable> : <></>}  \r\n        {currType === \"Detectors\" ? <DetectorTable data={detectors}></DetectorTable> : <></>}  \r\n        {currType === \"Stands\" ? <StandTable data={stands}></StandTable> : <></>}  \r\n        {currType === \"Dicom\" ? <DicomTable data={dicom}></DicomTable> : <></>}  \r\n    </div>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SummaryComponent from './SummaryComponent';\r\nimport MapComponent from './MapComponent';\r\nimport EventsComponent from './EventsComponent';\r\nimport HistoryComponent from './HistoryComponent';\r\n\r\nexport default function MainInfoComponent(props) {\r\n  console.log(\"render MainInfoComponent\");\r\n\r\n  return (\r\n    <div>\r\n      {props.Index === 0 ? <SummaryComponent></SummaryComponent> : <></>}\r\n      {props.Index === 1 ? <MapComponent></MapComponent> : <></>}\r\n      {props.Index === 2 ? <EventsComponent></EventsComponent> : <></>}\r\n      {props.Index === 3 ? <HistoryComponent></HistoryComponent> : <></>}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport MainToolBar from './MainToolBar';\r\nimport MainInfoComponent from '../MainInfoComponent';\r\n\r\nconst drawerWidth = 240;\r\nconst mainMenu = ['Обзор', 'Карта', 'Журнал событий', 'История'];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    marginTop: 64, // `${drawerWidth}px`,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainComponent() {\r\n  const classes = useStyles();\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <MainToolBar></MainToolBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map((text, index) => (\r\n            <ListItem button key={text}\r\n                selected={selectedIndex === index}\r\n                onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          <MainInfoComponent Title={mainMenu[selectedIndex]} Index={selectedIndex}></MainInfoComponent>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, { useContext, useState } from 'react';\r\nimport MainComponent from './components/mainComponents/MainComponent';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainComponent></MainComponent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { AllEquipsContextProvider } from './context/allEquips-context';\r\nimport { CurrentEquipContextProvider } from './context/currentEquip-context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AllEquipsContextProvider>\r\n      <CurrentEquipContextProvider>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </CurrentEquipContextProvider>\r\n    </AllEquipsContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}